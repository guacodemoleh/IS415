{
  "hash": "caada90a3df08d471a4fe056229be624",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 3 (Revised): Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data\"\nauthor: \"Victoria Grace ANN\"\nexecute: \n  warning: false\n  eval: true\n  echo: true\n  freeze: true\nformat:  \n  html: \n    code-summary: \"Show the code\"\n    toc-depth: 4\ndate: \"11 March, 2024\"\ndate-modified: \"last-modified\"\neditor: visual\n---\n\n\n# 1.0 Overview\n\nIn this exercise, my focus would be on prototyping exploratory spatial data analysis, particularly density of spatial assets within hexagonal traffic analysis zones. In conventional geography, a traffic analysis zone is the unit most commonly used in transportation planning models and the size of it varies. Hexagonal traffic analysis zones has gained traction as the hexagons of the study area have a uniform size which are easily comparable with each other when determining transport attractiveness. It is also recommended that hexagon radius should be 125m for areas in high urbanisation and 250m in areas with less urbanisation (Chmielewski et al., 2020).\n\nThe data preparation for this purpose also supports the preparation for calibrating spatial interaction models. For the prototyping, only exploratory spatial data analysis will be done.\n\n# 2.0 Package Installation\n\nI will load up the below R packages for the following purposes:\n\n-   tmap: to visualise spatial data by creating thematic maps that could be interactive or static.\n\n-   sf: to manipulate spatial data.\n\n-   sp: to manipulate spatial data (older than sp).\n\n-   reshape2: to reshape and transform data frames; converting data between \"wide\" and \"long\" formats using functions like melt().\n\n-   ggplot2: to visualise data with plot types including bar plots.\n\n-   tidyverse: to clean and transform data and contains sub-packagess including tidyr, dplyr and readr.\n\n-   stplanr: to provide functions suitable for working with spatial transport data like networks, orgins-destinations matrices and travel time matrices; builds on the capabilities of sf and sp packages.\n\n-   knitr: to combine code into a single documents that can be easily converted to various output formats like html, pdf, or Word.\n\n-   kableExtra: to further style any Kables.\n\n-   spdep: to create spatial wieght matrix objects from contiguities\n\n-   spflow: to estimate spatial econometric interaction models\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, sf, sp, reshape2, ggplot2, ggpubr, tidyverse, stplanr, knitr, kableExtra, spdep)\n\ndevtools::install_github(\"LukeCe/spflow\")\nlibrary(spflow)\n```\n:::\n\n\n# 3.0 Data sources\n\n-   URA's Masterplan Subzone 2019 Layer in shapefile format\n\n-   Bus Stop Locations extracted from LTA\n\n-   A tabulated bus passenger flow for Nov 2023, Dec 2023 and Jan 2024 from LTA dynamic data mall\n\n-   Population Data for 2023 from SingStat\n\n-   Schools from MOE\n\n-   Financial Services\n\n-   Hospitals, polyclinics and CHAS clinics derived from Google Maps\n\n# 4.0 Data preparation\n\n# 4.1 Data preparation for bus-induced hexagons\n\n::: panel-tabset\n\n\n## Subzone Layer\n\nRead the subzone layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(\"data/geospatial/master-plan-2019-subzone-boundary-no-sea-kml.kml\")\n```\n:::\n\n\nConvert `mpsz` to 2D geometry.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_zm(mpsz, drop = TRUE) # Convert 3D geometries to 2D\n```\n:::\n\n\nExtract the `SUBZONE_N` and `PLN_AREA_N` from the `Dscrptn` field\n\nFor SUBZONE_N,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- mpsz %>%\n  rowwise() %>%\n  mutate(SUBZONE_N = str_extract(Description, \"<th>SUBZONE_N</th> <td>(.*?)</td>\")) %>%\n  ungroup()\n\nmpsz$SUBZONE_N <- str_remove_all(mpsz$SUBZONE_N, \"<.*?>|SUBZONE_N\")\n```\n:::\n\n\nFor PLN_AREA_N,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- mpsz %>%\n  rowwise() %>%\n  mutate(PLN_AREA_N = str_extract(Description, \"<th>PLN_AREA_N</th> <td>(.*?)</td>\")) %>%\n  ungroup()\n\nmpsz$PLN_AREA_N <- str_remove_all(mpsz$PLN_AREA_N, \"<.*?>|PLN_AREA_N\")\n```\n:::\n\n\nRemove the `Description` column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz$Description <- NULL\n```\n:::\n\n\nRemove unwanted outer islands.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- mpsz %>% st_transform(crs = 3414)\n\nouter_islands <- c(\"SEMAKAU\", \"SUDONG\", \"NORTH-EASTERN ISLANDS\", \"SOUTHERN GROUP\")\nmpsz3414 <- mpsz3414 %>%\n  filter(!str_trim(SUBZONE_N) %in% str_trim(outer_islands))\n```\n:::\n\n\nCreate the shapefile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz3414, \"data/geospatial/mpsz3414.shp\", append=FALSE)\n```\n:::\n\n\nRead the updated shapefile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- st_read(\"data/geospatial/mpsz3414.shp\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `mpsz3414' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\mpsz3414.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 328 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21448.47 xmax: 55941.94 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n## Bus Stops Layer\n\nRead the aspatial bus stop layer and set its CRS to 3414.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBusStop <- read.csv(\"data/aspatial/bus_coords_subzone_v2.csv\") %>% st_as_sf(coords=c(\"Longitude\", \"Latitude\"), crs=4326) %>%\n  st_transform(crs=3414)\n\nsummary(BusStop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  BusStopCode      RoadName         Description          Subzone         \n Min.   : 1012   Length:5107        Length:5107        Length:5107       \n 1st Qu.:25345   Class :character   Class :character   Class :character  \n Median :49031   Mode  :character   Mode  :character   Mode  :character  \n Mean   :48663                                                           \n 3rd Qu.:67065                                                           \n Max.   :99189                                                           \n          geometry   \n POINT        :5107  \n epsg:3414    :   0  \n +proj=tmer...:   0  \n                     \n                     \n                     \n```\n:::\n:::\n\n\nEnsure that all bus stops are within Singapore's boundary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBusStop <- BusStop %>% st_intersection(mpsz3414) %>% select(BusStopCode, )\n\ntm_shape(mpsz3414) +\n  tm_polygons() +\n  tm_shape(BusStop) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Spatial Grids Layer\n\nGenerate the hexagon grids using `st_make_grid()` with a cellsize of 750m.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids <- BusStop %>% st_make_grid(cellsize =750,\n                                       what = \"polygons\",\n                                       square = FALSE) %>%\n  st_sf() %>%\n  filter(lengths(st_intersects(geometry, BusStop)) > 0)\n```\n:::\n\n\n\n::: {.callout-tip collapse=\"true\"}\n### Code interpretation\n\n-   st_make_grid: creates grids covering areas also without bus stops\n\n-   cellsize: hexagon size determined by twice the length of the apothem\n\n-   st_sf: set the hexagons as a sf object\n\n-   filter: filtering for hexagons that contain bus stops\n\n:::\n\n\nHave a look and check if the hexagons cover all the bus stop locations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz3414) +\n  tm_polygons(title = \"Singapore Boundary\") +\n  tm_shape(hex_grids) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  tm_layout(main.title = \"Hexagons corresponding to Singapore bus stops\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_shape(BusStop) +\n  tm_dots(col = \"red\", size = 0.001, title = \"Bus Stops\") +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n### Assign ID to each hexagon\n\nEach hexagon will have an assigned ID that will be their unique identifier. This new information can be stored under the HEX_ID column which will be helpful for joining data frames.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids$HEX_ID <- sprintf(\"H%04d\", seq_len(nrow(hex_grids))) %>%\n  as.factor()\n```\n:::\n\n\n\n::: {.callout-tip collapse=\"true\"}\n### Save the layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(hex_grids, \"data/rds/hex_grids.rds\")\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids <- read_rds(\"data/rds/hex_grids.rds\")\n\nkable(head(hex_grids))\n```\n\n::: {.cell-output-display}\n|geometry                       |HEX_ID |\n|:------------------------------|:------|\n|POLYGON ((3578.167 27517.51... |H0001  |\n|POLYGON ((4328.167 27517.51... |H0002  |\n|POLYGON ((4328.167 28816.55... |H0003  |\n|POLYGON ((4328.167 30115.59... |H0004  |\n|POLYGON ((4703.167 28167.03... |H0005  |\n|POLYGON ((4703.167 29466.07... |H0006  |\n:::\n:::\n\n\n\n\n# 4.2 Spatial Interaction Analysis\n\n\n## Importing data sets\n\n::: {.callout-note collapse=\"true\"}\n## Combining OD data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_bus_nov <- read_csv(\"data/OD Bus/merged_bus_nov_v2.csv\")\nod_bus_dec <- read_csv(\"data/OD Bus/merged_bus_dec_v2.csv\")\nod_bus_jan <- read_csv(\"data/OD Bus/merged_bus_jan_v2.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nOD <- rbind(od_bus_nov, od_bus_dec)\nOD <- rbind(OD, od_bus_jan)\n\nnrow(od_bus_nov) + nrow(od_bus_dec) + nrow(od_bus_jan) == nrow(OD) # evaluates to TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(OD)\n```\n:::\n\n\n`ORIGIN_PT_CODE` and `DESTINATION_PT_CODE` are listed as character variables. These variables should be transformed to factors so that R treats them as grouping variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols_to_convert <- c(\"ORIGIN_PT_CODE\", \"DESTINATION_PT_CODE\")\n\nOD[cols_to_convert] <- lapply(OD[cols_to_convert], as.factor)\n\nglimpse(OD)\n```\n:::\n\n\nORIGIN_PT_CODE`and`DESTINATION_PT_CODE\\` are now factors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(OD, \"data/rds/odbus_combined.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nodbus_combined <- read_rds(\"data/rds/odbus_combined.rds\")\n```\n:::\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Creating Commute Flow Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod <- odbus_combined %>%\n  group_by(ORIGIN_PT_CODE, ORIGIN_SUBZONE, DESTINATION_PT_CODE, DESTINATION_SUBZONE, DAY_TYPE ,TIME_PER_HOUR) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  ungroup()\n\nwrite_rds(od, \"data/rds/od.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nod <- read_rds(\"data/rds/od.rds\")\n```\n:::\n\n:::\n\n\n\n:::{.callout-note collapse=\"true\"}\n## Generating O-D trip data by hexagon level\n\nWe can create a lookup table for the bus stops associated to each hexagon.\n\n\n## Generating lookup table for bus stop to associated hexagon\n\nTo connect the trip data to their corresponding hexagons, a lookup table needs to be made so that there is a relationship beetween the aspatial `od` and `hex_grids`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbs_hex <- st_intersection(BusStop, hex_grids) %>%\n  st_drop_geometry() %>%\n  select(c(BusStopCode, HEX_ID))\n\nkable(head(bs_hex))\n```\n\n::: {.cell-output-display}\n|       | BusStopCode|HEX_ID |\n|:------|-----------:|:------|\n|1241   |       25059|H0001  |\n|1241.1 |       25059|H0002  |\n|1341   |       25751|H0003  |\n|1395   |       26379|H0004  |\n|1342   |       25761|H0005  |\n|1337   |       25711|H0006  |\n:::\n:::\n\n\n\n:::{.callout-warning}\n### Multiple HEX_ID per bus stop\nSome bus stops may fall in the boundary of neighbouring hexagons. To resolve this, such bus stops shall be assigned to the first identified corresponding HEX_ID.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbs_hex <- bs_hex %>%\n  group_by(BusStopCode) %>%\n  summarise(across(everything(), first)) %>%\n  ungroup()\n\nnrow(bs_hex) == nrow(BusStop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Joining *od* and *bs_hex*\n\nAssociate the origin bus stops and destination bus stops to their corresponding hexagons.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbs_hex$BusStopCode <- as.factor(bs_hex$BusStopCode)\n\nod_trips_w_hex <- od %>%\n  inner_join(bs_hex,\n             by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %>%\n  rename(ORIG_HEX_ID = HEX_ID) %>%\n  inner_join(bs_hex,\n             by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %>%\n  rename(DEST_HEX_ID = HEX_ID)\n\nkable(head(od_trips_w_hex))\n```\n\n::: {.cell-output-display}\n|ORIGIN_PT_CODE |ORIGIN_SUBZONE |DESTINATION_PT_CODE |DESTINATION_SUBZONE |DAY_TYPE | TIME_PER_HOUR| TRIPS|ORIG_HEX_ID |DEST_HEX_ID |\n|:--------------|:--------------|:-------------------|:-------------------|:--------|-------------:|-----:|:-----------|:-----------|\n|10009          |BUKIT MERAH    |10017               |BUKIT MERAH         |WEEKDAY  |             5|     9|H0381       |H0455       |\n|10009          |BUKIT MERAH    |10017               |BUKIT MERAH         |WEEKDAY  |             7|     5|H0381       |H0455       |\n|10009          |BUKIT MERAH    |10017               |BUKIT MERAH         |WEEKDAY  |             8|     2|H0381       |H0455       |\n|10009          |BUKIT MERAH    |10017               |BUKIT MERAH         |WEEKDAY  |             9|    29|H0381       |H0455       |\n|10009          |BUKIT MERAH    |10017               |BUKIT MERAH         |WEEKDAY  |            10|    11|H0381       |H0455       |\n|10009          |BUKIT MERAH    |10017               |BUKIT MERAH         |WEEKDAY  |            11|    14|H0381       |H0455       |\n:::\n:::\n\n\n:::\n\n::: {,callout-warning collapse=\"true\"}\n### Save Data Memory Space\n\n`od` is not needed anymore since the necessary data has been extracted, so we can offload it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(od)\n```\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Aggregating data by hexagon\n\nPerform aggregations by `ORIGIN_HEX_ID` and `DEST_HEX_ID` to have an aggregated sum of trips by hexagon instead of bus stops.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_hex <- od_trips_w_hex %>%\n  group_by(ORIG_HEX_ID, ORIGIN_SUBZONE ,DEST_HEX_ID, DESTINATION_SUBZONE, DAY_TYPE, TIME_PER_HOUR) %>%\n  summarise(TRIPS = sum(TRIPS))\n\nkable(head(od_hex))\n```\n\n::: {.cell-output-display}\n|ORIG_HEX_ID |ORIGIN_SUBZONE |DEST_HEX_ID |DESTINATION_SUBZONE |DAY_TYPE | TIME_PER_HOUR| TRIPS|\n|:-----------|:--------------|:-----------|:-------------------|:--------|-------------:|-----:|\n|H0001       |TUAS           |H0005       |TUAS                |WEEKDAY  |            18|     2|\n|H0001       |TUAS           |H0006       |TUAS                |WEEKDAY  |             7|     2|\n|H0001       |TUAS           |H0006       |TUAS                |WEEKDAY  |             8|     9|\n|H0001       |TUAS           |H0006       |TUAS                |WEEKDAY  |            12|     1|\n|H0001       |TUAS           |H0006       |TUAS                |WEEKDAY  |            16|     1|\n|H0001       |TUAS           |H0006       |TUAS                |WEEKDAY  |            17|     1|\n:::\n:::\n\n\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n### Save the layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bs_hex, \"data/rds/bs_hex.rds\")\nwrite_rds(od_hex, \"data/rds/od_hex.rds\")\n```\n:::\n\n:::\n\n\n::: {.callout-note collapse=\"true:}\n## Generating flow lines\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_hex <- od_hex[, c(1, 3, 2, 4:ncol(od_hex))]\n\nflowlines <- od_hex %>% od2line(\n  hex_grids,\n  zone_code = \"HEX_ID\")\n\nwrite_rds(flowlines, \"data/rds/flowlines.rds\")\n```\n:::\n\n\n::: callout-tip\n### Learning Point\n\nThe flow data in the `od2line` function must have the origin and destination indexes in its first two columns.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowlines <- read_rds(\"data/rds/flowlines.rds\")\n```\n:::\n\n\n\n## Inspect flowlines\n\n:::{.callout-warning collapse=\"false\"}\n### Large data size\nThe flowlines data is very large.\n\nFor all visualisations, the number of trips per flowline shown will be 3000 and above.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz3414) +\n  tm_polygons(title = \"Singapore Boundary\", alpha = 0.5) +\n  \n  tm_shape(hex_grids) +\n  tm_polygons(col = \"white\", title = \"Hexagons\", alpha = 1) +\n  \n  tm_shape(flowlines[flowlines$TRIPS >= 3000,]) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7),\n           title.lwd = \"# of bus trips\",\n           alpha = 0.8) +\n  \n  tm_layout(main.title = \"Overall Bus Passenger Flow for Weekdays)\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::{.callout-warning collapse=\"true\"}\n### Save Data Memory\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(flowlines)\nrm(od_hex)\n```\n:::\n\n\n:::\n\n\n# 4.2.1 Prototype for Spatial Interaction Analysis\n\n\n\n# 5.0 Spatial Interaction Modelling\n\n## 5.1.1 Attractiveness variables\n\nInitiate the attractiveness from `hex_grids`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness <- hex_grids %>% st_set_crs(3414)\n```\n:::\n\n\n\nFor all the variables, we only need to count the number of each location types per hexagon, which can be done using `lengths()` and `st_intersects()`.\n\n### POIs\n\n::: panel-tabset\n\n### Bus Stops\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$BUS_STOP_COUNT <- lengths(\n  st_intersects(attractiveness, BusStop))\n```\n:::\n\n\n### Entertainment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nentertn <- st_read(\"data/geospatial/entertn.shp\") %>% st_set_crs(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `entertn' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\entertn.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$ENTERTN_COUNT <- lengths(st_intersects(attractiveness, entertn))\n```\n:::\n\n\n\n### F&B\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_bev <- st_read(\"data/geospatial/F&B.shp\") %>% st_set_crs(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `F&B' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\F&B.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$FOOD_BEV_COUNT <- lengths(st_intersects(attractiveness, food_bev))\n```\n:::\n\n\n### Leisure & Recreation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleis_rec <- st_read(\"data/geospatial/Liesure&Recreation.shp\") %>% st_set_crs(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Liesure&Recreation' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Liesure&Recreation.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$LEISURE_COUNT <- lengths(st_intersects(attractiveness, leis_rec))\n```\n:::\n\n\n\n### Retail\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail <- st_read(\"data/geospatial/Retails.shp\") %>% st_set_crs(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Retails' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Retails.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$RETAIL_COUNT <- lengths(st_intersects(attractiveness, retail))\n```\n:::\n\n\n\n### Business\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbiz <- st_read(\"data/geospatial/Business.shp\") %>% st_set_crs(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Business' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Business.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$BIZ_COUNT <- lengths(st_intersects(attractiveness, biz))\n```\n:::\n\n\n\n### Financial Services\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfin <- st_read(\"data/geospatial/FinServ.shp\") %>% st_set_crs(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `FinServ' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\FinServ.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$FIN_COUNT <- lengths(st_intersects(attractiveness, fin))\n```\n:::\n\n\n\n### Housing Population Proxies\n\n::: {.callout-note collapse=\"true\"}\n\n#### Data preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb <- read_csv(\"data/aspatial/hdb.csv\")\n```\n:::\n\n\n\nFor the purpose of computing a proxy for population density, the residential units will be extracted using *filter()* from the **dplyr** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb_residential <- hdb %>%\n  filter(residential == \"Y\")\n\nhead(hdb_residential, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 37\n    ...1 blk_no street       max_floor_lvl year_completed residential commercial\n   <dbl> <chr>  <chr>                <dbl>          <dbl> <chr>       <chr>     \n 1     0 1      BEACH RD                16           1970 Y           Y         \n 2     1 1      BEDOK STH A…            14           1975 Y           N         \n 3     3 1      CHAI CHEE RD            15           1982 Y           N         \n 4     4 1      CHANGI VILL…             4           1975 Y           Y         \n 5     5 1      DELTA AVE               25           1982 Y           N         \n 6     6 1      DOVER RD                12           1975 Y           N         \n 7     7 1      EUNOS CRES              14           1977 Y           N         \n 8     8 1      EVERTON PK              12           1980 Y           Y         \n 9    10 1      GHIM MOH RD             15           1975 Y           N         \n10    11 1      HAIG RD                 15           1976 Y           N         \n# ℹ 30 more variables: market_hawker <chr>, miscellaneous <chr>,\n#   multistorey_carpark <chr>, precinct_pavilion <chr>,\n#   bldg_contract_town <chr>, total_dwelling_units <dbl>, `1room_sold` <dbl>,\n#   `2room_sold` <dbl>, `3room_sold` <dbl>, `4room_sold` <dbl>,\n#   `5room_sold` <dbl>, exec_sold <dbl>, multigen_sold <dbl>,\n#   studio_apartment_sold <dbl>, `1room_rental` <dbl>, `2room_rental` <dbl>,\n#   `3room_rental` <dbl>, other_room_rental <dbl>, lat <dbl>, lng <dbl>, …\n```\n:::\n:::\n\n\nThere are also some outliers like hotels that are classified as a residential unit. We can remove rows containing 'hotel' using *grepl()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels <- hdb_residential %>%\n  filter(grepl(\"HOTEL\", building, ignore.case = TRUE))\n\nkable(hotels)\n```\n\n::: {.cell-output-display}\n| ...1|blk_no |street   | max_floor_lvl| year_completed|residential |commercial |market_hawker |miscellaneous |multistorey_carpark |precinct_pavilion |bldg_contract_town | total_dwelling_units| 1room_sold| 2room_sold| 3room_sold| 4room_sold| 5room_sold| exec_sold| multigen_sold| studio_apartment_sold| 1room_rental| 2room_rental| 3room_rental| other_room_rental|      lat|      lng|building                |addr                                                  |postal | SUBZONE_NO|SUBZONE_N |SUBZONE_C |PLN_AREA_N    |PLN_AREA_C |REGION_N       |REGION_C |\n|----:|:------|:--------|-------------:|--------------:|:-----------|:----------|:-------------|:-------------|:-------------------|:-----------------|:------------------|--------------------:|----------:|----------:|----------:|----------:|----------:|---------:|-------------:|---------------------:|------------:|------------:|------------:|-----------------:|--------:|--------:|:-----------------------|:-----------------------------------------------------|:------|----------:|:---------|:---------|:-------------|:----------|:--------------|:--------|\n|    0|1      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  142|          0|          1|        138|          1|          2|         0|             0|                     0|            0|            0|            0|                 0| 1.295097| 103.8541|RAFFLES HOTEL           |1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673           |189673 |          2|CITY HALL |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 4580|3      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  138|          0|          1|        134|          0|          3|         0|             0|                     0|            0|            0|            0|                 0| 1.294801| 103.8545|RAFFLES HOTEL SINGAPORE |3 BEACH ROAD RAFFLES HOTEL SINGAPORE SINGAPORE 189674 |189674 |          2|CITY HALL |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n:::\n:::\n\n\nThe HDB Blk 1 Beach Road shares a similar address as Raffles Hotel's 1 Beach Road, but they have different postal codes.\n\nTo verify other similar addresses, filter for addresses containing \"BEACH RD\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeach_rd <- hdb_residential %>%\n  filter(grepl(\"BEACH RD\", street, ignore.case = TRUE))\n\nkable(beach_rd)\n```\n\n::: {.cell-output-display}\n| ...1|blk_no |street   | max_floor_lvl| year_completed|residential |commercial |market_hawker |miscellaneous |multistorey_carpark |precinct_pavilion |bldg_contract_town | total_dwelling_units| 1room_sold| 2room_sold| 3room_sold| 4room_sold| 5room_sold| exec_sold| multigen_sold| studio_apartment_sold| 1room_rental| 2room_rental| 3room_rental| other_room_rental|      lat|      lng|building                     |addr                                                                |postal | SUBZONE_NO|SUBZONE_N    |SUBZONE_C |PLN_AREA_N    |PLN_AREA_C |REGION_N       |REGION_C |\n|----:|:------|:--------|-------------:|--------------:|:-----------|:----------|:-------------|:-------------|:-------------------|:-----------------|:------------------|--------------------:|----------:|----------:|----------:|----------:|----------:|---------:|-------------:|---------------------:|------------:|------------:|------------:|-----------------:|--------:|--------:|:----------------------------|:-------------------------------------------------------------------|:------|----------:|:------------|:---------|:-------------|:----------|:--------------|:--------|\n|    0|1      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  142|          0|          1|        138|          1|          2|         0|             0|                     0|            0|            0|            0|                 0| 1.295097| 103.8541|RAFFLES HOTEL                |1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673                         |189673 |          2|CITY HALL    |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 1660|15     |BEACH RD |            20|           1974|Y           |Y          |N             |N             |N                   |N                 |KWN                |                   76|          0|          0|          0|         76|          0|         0|             0|                     0|            0|            0|            0|                 0| 1.295796| 103.8555|NIL                          |15 BEACH ROAD                                                       |NIL    |          1|BUGIS        |DTSZ01    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 2079|17     |BEACH RD |            20|           1974|Y           |Y          |N             |N             |N                   |N                 |KWN                |                   76|          0|          0|          0|         76|          0|         0|             0|                     0|            0|            0|            0|                 0| 1.303689| 103.8636|GOLDEN BEACH VISTA           |17 BEACH ROAD GOLDEN BEACH VISTA SINGAPORE 190017                   |190017 |          9|CRAWFORD     |KLSZ09    |KALLANG       |KL         |CENTRAL REGION |CR       |\n| 2567|2      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  139|          0|          1|        136|          0|          2|         0|             0|                     0|            0|            0|            0|                 0| 1.390462| 103.9753|CHANGI BEACH CLUB            |2 ANDOVER ROAD CHANGI BEACH CLUB SINGAPORE 509984                   |509984 |          1|CHANGI POINT |CHSZ01    |CHANGI        |CH         |EAST REGION    |ER       |\n| 4580|3      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  138|          0|          1|        134|          0|          3|         0|             0|                     0|            0|            0|            0|                 0| 1.294801| 103.8545|RAFFLES HOTEL SINGAPORE      |3 BEACH ROAD RAFFLES HOTEL SINGAPORE SINGAPORE 189674               |189674 |          2|CITY HALL    |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 6028|4      |BEACH RD |            16|           1968|Y           |N          |N             |Y             |N                   |N                 |KWN                |                  336|          0|          0|          0|          0|          0|         0|             0|                     0|          336|            0|            0|                 0| 1.304716| 103.8652|NIL                          |4 BEACH ROAD SINGAPORE 190004                                       |190004 |          9|CRAWFORD     |KLSZ09    |KALLANG       |KL         |CENTRAL REGION |CR       |\n| 7743|5      |BEACH RD |            16|           1968|Y           |N          |N             |Y             |N                   |N                 |KWN                |                  336|          0|          0|          0|          0|          0|         0|             0|                     0|          336|            0|            0|                 0| 1.298092| 103.8569|BEACH ROAD CONSERVATION AREA |5 TAN QUEE LAN STREET BEACH ROAD CONSERVATION AREA SINGAPORE 188094 |188094 |          1|BUGIS        |DTSZ01    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 8956|6      |BEACH RD |            16|           1968|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  198|          0|         45|          1|         28|          0|         0|             0|                     0|           57|           67|            0|                 0| 1.303992| 103.8644|BEACH ROAD GARDENS           |6 BEACH ROAD BEACH ROAD GARDENS SINGAPORE 190006                    |190006 |          9|CRAWFORD     |KLSZ09    |KALLANG       |KL         |CENTRAL REGION |CR       |\n:::\n:::\n\n\n2, 5 and 15 Beach Road do not have the correct postal codes following the 1900XX convention. Additionally, these addresses do not have the correct coordinates too.\n\nWith reference to URA's official asset map of Singapore, OneMap, the data will be manually modified using *mutate()* and *ifelse()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb_residential2 <- hdb_residential %>%\n  mutate(postal = ifelse(blk_no == 1 & street == \"BEACH RD\", 190001, postal)) %>%\n  mutate(lat = ifelse(blk_no == 1 & street == \"BEACH RD\", 1.3036714, lat)) %>%\n  mutate(lng = ifelse(blk_no == 1 & street == \"BEACH RD\", 103.8644787, lng)) %>%\n  mutate(postal = ifelse(blk_no == 2 & street == \"BEACH RD\", 190002, postal)) %>%\n  mutate(lat = ifelse(blk_no == 2 & street == \"BEACH RD\", 1.3040331, lat)) %>%\n  mutate(lng = ifelse(blk_no == 2 & street == \"BEACH RD\", 103.8649285, lng)) %>%\n  mutate(postal = ifelse(blk_no == 3 & street == \"BEACH RD\", 190003, postal)) %>%\n  mutate(lat = ifelse(blk_no == 3 & street == \"BEACH RD\", 1.3041872, lat)) %>%\n  mutate(lng = ifelse(blk_no == 3 & street == \"BEACH RD\", 103.8651934, lng)) %>%\n  mutate(postal = ifelse(blk_no == 5 & street == \"BEACH RD\", 190005, postal)) %>%\n  mutate(lat = ifelse(blk_no == 5 & street == \"BEACH RD\", 1.3043463, lat)) %>%\n  mutate(lng = ifelse(blk_no == 5 & street == \"BEACH RD\", 103.8648158, lng)) %>%\n  mutate(postal = ifelse(blk_no == 15 & street == \"BEACH RD\", 190015, postal)) %>%\n  mutate(lat = ifelse(blk_no == 15 & street == \"BEACH RD\", 1.3034254, lat)) %>%\n  mutate(lng = ifelse(blk_no == 15 & street == \"BEACH RD\", 103.8631535, lng))\n```\n:::\n\n\nCheck for any duplicates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- hdb_residential2 %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nDT::datatable(duplicate)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c1b0c1b436234c04029a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c1b0c1b436234c04029a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>...1<\\/th>\\n      <th>blk_no<\\/th>\\n      <th>street<\\/th>\\n      <th>max_floor_lvl<\\/th>\\n      <th>year_completed<\\/th>\\n      <th>residential<\\/th>\\n      <th>commercial<\\/th>\\n      <th>market_hawker<\\/th>\\n      <th>miscellaneous<\\/th>\\n      <th>multistorey_carpark<\\/th>\\n      <th>precinct_pavilion<\\/th>\\n      <th>bldg_contract_town<\\/th>\\n      <th>total_dwelling_units<\\/th>\\n      <th>1room_sold<\\/th>\\n      <th>2room_sold<\\/th>\\n      <th>3room_sold<\\/th>\\n      <th>4room_sold<\\/th>\\n      <th>5room_sold<\\/th>\\n      <th>exec_sold<\\/th>\\n      <th>multigen_sold<\\/th>\\n      <th>studio_apartment_sold<\\/th>\\n      <th>1room_rental<\\/th>\\n      <th>2room_rental<\\/th>\\n      <th>3room_rental<\\/th>\\n      <th>other_room_rental<\\/th>\\n      <th>lat<\\/th>\\n      <th>lng<\\/th>\\n      <th>building<\\/th>\\n      <th>addr<\\/th>\\n      <th>postal<\\/th>\\n      <th>SUBZONE_NO<\\/th>\\n      <th>SUBZONE_N<\\/th>\\n      <th>SUBZONE_C<\\/th>\\n      <th>PLN_AREA_N<\\/th>\\n      <th>PLN_AREA_C<\\/th>\\n      <th>REGION_N<\\/th>\\n      <th>REGION_C<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,4,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"...1\",\"targets\":1},{\"name\":\"blk_no\",\"targets\":2},{\"name\":\"street\",\"targets\":3},{\"name\":\"max_floor_lvl\",\"targets\":4},{\"name\":\"year_completed\",\"targets\":5},{\"name\":\"residential\",\"targets\":6},{\"name\":\"commercial\",\"targets\":7},{\"name\":\"market_hawker\",\"targets\":8},{\"name\":\"miscellaneous\",\"targets\":9},{\"name\":\"multistorey_carpark\",\"targets\":10},{\"name\":\"precinct_pavilion\",\"targets\":11},{\"name\":\"bldg_contract_town\",\"targets\":12},{\"name\":\"total_dwelling_units\",\"targets\":13},{\"name\":\"1room_sold\",\"targets\":14},{\"name\":\"2room_sold\",\"targets\":15},{\"name\":\"3room_sold\",\"targets\":16},{\"name\":\"4room_sold\",\"targets\":17},{\"name\":\"5room_sold\",\"targets\":18},{\"name\":\"exec_sold\",\"targets\":19},{\"name\":\"multigen_sold\",\"targets\":20},{\"name\":\"studio_apartment_sold\",\"targets\":21},{\"name\":\"1room_rental\",\"targets\":22},{\"name\":\"2room_rental\",\"targets\":23},{\"name\":\"3room_rental\",\"targets\":24},{\"name\":\"other_room_rental\",\"targets\":25},{\"name\":\"lat\",\"targets\":26},{\"name\":\"lng\",\"targets\":27},{\"name\":\"building\",\"targets\":28},{\"name\":\"addr\",\"targets\":29},{\"name\":\"postal\",\"targets\":30},{\"name\":\"SUBZONE_NO\",\"targets\":31},{\"name\":\"SUBZONE_N\",\"targets\":32},{\"name\":\"SUBZONE_C\",\"targets\":33},{\"name\":\"PLN_AREA_N\",\"targets\":34},{\"name\":\"PLN_AREA_C\",\"targets\":35},{\"name\":\"REGION_N\",\"targets\":36},{\"name\":\"REGION_C\",\"targets\":37}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb_residential2 <- st_as_sf(hdb_residential2, coords = c(\"lng\",\"lat\"), crs=4326) \n\nhdb_residential2 <- st_transform(hdb_residential2, crs=3414)\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$HDB_COUNT <- lengths(st_intersects(attractiveness, hdb_residential2))\n```\n:::\n\n\n\n::: {.callout-warning collapse}\n\n#### Save Memory Space by Offloading\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(hdb)\nrm(hdb_residential)\n```\n:::\n\n\n:::\n\n\n### Public Healthcare \n\n#### Data Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\npublic_hc <- read_csv(\"data/aspatial/HospitalsPolyclinics v_2024.csv\")\n\npublic_hc.sf <- st_as_sf(public_hc[1:42,], wkt = \"geometry\", crs = 4326) %>% \n  st_transform(crs=3414)\n\npublic_hc2.sf <- st_as_sf(public_hc[43:1235,], wkt = \"geometry\", crs = 3414) # CHAS clinics encoded in EPSG 3414 \n\npublic_hc.sf <- rbind(public_hc.sf, public_hc2.sf)\n\nwrite_rds(public_hc.sf, \"data/rds/public_hc.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- read_rds(\"data/rds/public_hc.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness$HC_COUNT <- lengths(st_intersects(attractiveness, hc))\n```\n:::\n\n\n### School\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nschools <- read_csv(\"data/aspatial/schoolsclean.csv\")\n\nschools <- schools %>%\n  separate(latlong, into = c(\"latitude\", \"longitude\"), sep = \",\", convert = TRUE)\n\nschools_sf <- st_as_sf(schools, coords = c(\"longitude\",\"latitude\"), crs = 4326) %>% \n  st_transform(crs=3414)\n\nwrite_rds(schools_sf, \"data/rds/schools.rds\")\n```\n:::\n\n\n::: {.callout-note collapse}\n\n#### Save Memory Space by Offloading\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(schools_sf)\n```\n:::\n\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nschools <- read_rds(\"data/rds/schools.rds\")\n\nattractiveness$SCH_COUNT <- lengths(st_intersects(attractiveness, schools))\n```\n:::\n\n\n:::\n\n\nCheck attractiveness variables have been added correctly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(attractiveness))\n```\n\n::: {.cell-output-display}\n|geometry                       |HEX_ID | BUS_STOP_COUNT| ENTERTN_COUNT| FOOD_BEV_COUNT| LEISURE_COUNT| RETAIL_COUNT| BIZ_COUNT| FIN_COUNT| HDB_COUNT| HC_COUNT| SCH_COUNT|\n|:------------------------------|:------|--------------:|-------------:|--------------:|-------------:|------------:|---------:|---------:|---------:|--------:|---------:|\n|POLYGON ((3578.167 27517.51... |H0001  |              1|             0|              0|             0|            0|         0|         0|         0|        0|         0|\n|POLYGON ((4328.167 27517.51... |H0002  |              1|             0|              0|             0|            0|         3|         0|         0|        0|         0|\n|POLYGON ((4328.167 28816.55... |H0003  |              1|             0|              0|             0|            0|         0|         0|         0|        0|         0|\n|POLYGON ((4328.167 30115.59... |H0004  |              1|             0|              0|             0|            0|         9|         0|         0|        0|         0|\n|POLYGON ((4703.167 28167.03... |H0005  |              1|             0|              0|             0|            0|         3|         0|         0|        0|         0|\n|POLYGON ((4703.167 29466.07... |H0006  |              2|             0|              0|             0|            2|         0|         1|         0|        1|         0|\n:::\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(attractiveness, \"data/rds/attractiveness.rds\")\n```\n:::\n\n\n:::\n\n\n::: {.callout-warning collapse=\"true\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(hotels)\n```\n:::\n\n:::\n\n\n## 5.1.2 Deriving Passengers  Alighting from Bus Stop\n\nAggregate the trips using `inner_join()`, `group_by()` and `summarise()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndest_bus_hex <- od_trips_w_hex %>%\n  inner_join(bs_hex,\n             by = join_by(DESTINATION_PT_CODE == BusStopCode)) %>%\n  group_by(HEX_ID) %>%\n  summarise(TRIPS = sum(TRIPS))\n\nkable(head(dest_bus_hex))\n```\n\n::: {.cell-output-display}\n|HEX_ID | TRIPS|\n|:------|-----:|\n|H0001  |  1735|\n|H0003  | 12698|\n|H0004  |  4240|\n|H0005  |  5051|\n|H0006  | 23935|\n|H0007  |  8620|\n:::\n:::\n\n\n\n:::{.callout-tip collapse=\"true\"}\n### Why use inner join?\n\n-   An inner join returns only the rows that have matching values in both tables based on the specified join condition.\n\n-   It discards unmatched rows from both the left and right tables.\n\n-   The result set contains only the rows where the join condition is satisfied.\n\n-   Rows from either table that do not have a match in the other table are excluded from the result.\n:::\n\n\n:::{.callout-tip collapse=\"true\"}\n### Save the layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(dest_bus_hex, \"data/rds/dest_bus_hex.rds\")\n```\n:::\n\n\n:::\n\n\n:::{.callout-warning collapse=\"true\"}\n### Save Data Memory Space\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(bs_hex)\n```\n:::\n\n\n:::\n\n\n## 5.2.1 Propulsiveness variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\npropulsiveness <- hex_grids\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npropulsiveness <- propulsiveness %>%\n  left_join(st_drop_geometry(dest_bus_hex)) %>%\n  rename(BUS_ALIGHT_COUNT = TRIPS)\n\nkable(head(propulsiveness))\n```\n\n::: {.cell-output-display}\n|HEX_ID | BUS_ALIGHT_COUNT|geometry                       |\n|:------|----------------:|:------------------------------|\n|H0001  |             1735|POLYGON ((3578.167 27517.51... |\n|H0002  |               NA|POLYGON ((4328.167 27517.51... |\n|H0003  |            12698|POLYGON ((4328.167 28816.55... |\n|H0004  |             4240|POLYGON ((4328.167 30115.59... |\n|H0005  |             5051|POLYGON ((4703.167 28167.03... |\n|H0006  |            23935|POLYGON ((4703.167 29466.07... |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npropulsiveness[is.na(propulsiveness)] <- 0\nkable(head(propulsiveness))\n```\n\n::: {.cell-output-display}\n|HEX_ID | BUS_ALIGHT_COUNT|geometry                       |\n|:------|----------------:|:------------------------------|\n|H0001  |             1735|POLYGON ((3578.167 27517.51... |\n|H0002  |                0|POLYGON ((4328.167 27517.51... |\n|H0003  |            12698|POLYGON ((4328.167 28816.55... |\n|H0004  |             4240|POLYGON ((4328.167 30115.59... |\n|H0005  |             5051|POLYGON ((4703.167 28167.03... |\n|H0006  |            23935|POLYGON ((4703.167 29466.07... |\n:::\n:::\n\n\n\n:::{.callout-tip collapse=\"true\"}\n### Save the layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(propulsiveness, \"data/rds/propulsiveness.rds\")\n```\n:::\n\n\n:::\n\n\n## 5.3 Generating distance table\n\n### Generating distance matrix\n\nWe can use `spDists()` to generate the distance matrix from the hex_grids layer. The column and row names need to be renamed according to the corresponding `HEX_ID`s.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist_mat <- spDists(as(hex_grids, \"Spatial\"),\n                    longlat = FALSE)\n\ncolnames(dist_mat) <- paste0(hex_grids$HEX_ID)\nrownames(dist_mat) <- paste0(hex_grids$HEX_ID)\n\nkable(head(dist_mat, n=c(10,10)))\n```\n\n::: {.cell-output-display}\n|      |    H0001|    H0002|    H0003|    H0004|    H0005|    H0006|    H0007|    H0008|    H0009|    H0010|\n|:-----|--------:|--------:|--------:|--------:|--------:|--------:|--------:|--------:|--------:|--------:|\n|H0001 |    0.000|  750.000| 1500.000| 2704.163| 1299.038| 2250.000| 3436.932| 4683.748| 1984.313| 3000.000|\n|H0002 |  750.000|    0.000| 1299.038| 2598.076|  750.000| 1984.313| 3269.174| 4562.072| 1500.000| 2704.163|\n|H0003 | 1500.000| 1299.038|    0.000| 1299.038|  750.000|  750.000| 1984.313| 3269.174|  750.000| 1500.000|\n|H0004 | 2704.163| 2598.076| 1299.038|    0.000| 1984.313|  750.000|  750.000| 1984.313| 1500.000|  750.000|\n|H0005 | 1299.038|  750.000|  750.000| 1984.313|    0.000| 1299.038| 2598.076| 3897.114|  750.000| 1984.313|\n|H0006 | 2250.000| 1984.313|  750.000|  750.000| 1299.038|    0.000| 1299.038| 2598.076|  750.000|  750.000|\n|H0007 | 3436.932| 3269.174| 1984.313|  750.000| 2598.076| 1299.038|    0.000| 1299.038| 1984.313|  750.000|\n|H0008 | 4683.748| 4562.072| 3269.174| 1984.313| 3897.114| 2598.076| 1299.038|    0.000| 3269.174| 1984.313|\n|H0009 | 1984.313| 1500.000|  750.000| 1500.000|  750.000|  750.000| 1984.313| 3269.174|    0.000| 1299.038|\n|H0010 | 3000.000| 2704.163| 1500.000|  750.000| 1984.313|  750.000|  750.000| 1984.313| 1299.038|    0.000|\n:::\n:::\n\n\n:::{.callout-tip}\nNotice that the distance between adjacent centroids are 750m.\n:::\n\n\n### Generating a pivot table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist_tbl <- melt(dist_mat) %>%\n  rename(DISTANCE = value) %>%\n  rename(ORIG_HEX_ID = Var1) %>%\n  rename(DEST_HEX_ID = Var2)\nkable(head(dist_tbl))\n```\n\n::: {.cell-output-display}\n|ORIG_HEX_ID |DEST_HEX_ID | DISTANCE|\n|:-----------|:-----------|--------:|\n|H0001       |H0001       |    0.000|\n|H0002       |H0001       |  750.000|\n|H0003       |H0001       | 1500.000|\n|H0004       |H0001       | 2704.163|\n|H0005       |H0001       | 1299.038|\n|H0006       |H0001       | 2250.000|\n:::\n:::\n\n\nLogically, intra-zonal distances are 0. This occurs when bus passengers are commuting to bus stops along the bus route that are within the same hexagon from where the passenger boarded the bus.\n\nHowever, distances cannot be kept to 0 since we are going to conduct log-based Poisson regression modelling for spatial interaction modelling. Specifically, log(0) is undefined.\n\nA reasonable replacement of the zero values would be 200m, assuming that the shortest distance between two consecutive bus stops is 200m. \n\nSetting intra-zonal distances to 200m,\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist_tbl$DISTANCE[dist_tbl$ORIG_HEX_ID == dist_tbl$DEST_HEX_ID] <- 200\nsummary(dist_tbl$DISTANCE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    200    8352   13332   14240   19018   47381 \n```\n:::\n:::\n\n\n:::{.callout-tip collapse=\"true\"}\n### Save the layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(dist_tbl, \"data/rds/dist_tbl.rds\")\n```\n:::\n\n\n:::\n\n\n:::{.callout-tip collapse=\"true\"}\n### Save Data Memory Space by offloading\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(dist_mat)\n```\n:::\n\n\n:::\n\n\n\n# 6.0 Data Consolidation\n\nLoad the necessary data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids <- read_rds(\"data/rds/hex_grids.rds\")\nflowlines <- read_rds(\"data/rds/flowlines.rds\")\ndist_tbl <- read_rds(\"data/rds/dist_tbl.rds\")\nattractiveness <- read_rds(\"data/rds/attractiveness.rds\")\npropulsiveness <- read_rds(\"data/rds/propulsiveness.rds\")\n```\n:::\n\n\n\nGenerating the consolidated geospatial data will require the following columns:\n\n-   `ORIG_HEX_ID`: ID corresponding to the origin zone\n\n-   `DEST_HEX_ID`: ID corresponding to the destination zone\n\n-   `DISTANCE`: Distance between the (centroids of) origin and destination zones\n\n-   `TRIPS`: Number of bus trips between the origin and destination zones\n\n-   `DEST_*_COUNT`: Values from [Attractiveness Variables Table (attractiveness)]\n\n-   `ORIG_*_COUNT`: Values from [Propulsiveness Variables Table (propulsiveness)]\n\n-   Geometry defining flowlines\n\n\nNow proceed to join the tables!\n\n::: panel-tabset\n\n## Flowlines\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(flowlines))\n```\n\n::: {.cell-output-display}\n|ORIG_HEX_ID |DEST_HEX_ID |ORIGIN_SUBZONE |DESTINATION_SUBZONE |DAY_TYPE | TIME_PER_HOUR| TRIPS|geometry                       |\n|:-----------|:-----------|:--------------|:-------------------|:--------|-------------:|-----:|:------------------------------|\n|H0001       |H0005       |TUAS           |TUAS                |WEEKDAY  |            18|     2|LINESTRING (3578.167 27950.... |\n|H0001       |H0006       |TUAS           |TUAS                |WEEKDAY  |             7|     2|LINESTRING (3578.167 27950.... |\n|H0001       |H0006       |TUAS           |TUAS                |WEEKDAY  |             8|     9|LINESTRING (3578.167 27950.... |\n|H0001       |H0006       |TUAS           |TUAS                |WEEKDAY  |            12|     1|LINESTRING (3578.167 27950.... |\n|H0001       |H0006       |TUAS           |TUAS                |WEEKDAY  |            16|     1|LINESTRING (3578.167 27950.... |\n|H0001       |H0006       |TUAS           |TUAS                |WEEKDAY  |            17|     1|LINESTRING (3578.167 27950.... |\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nod_hex2 <- od_trips_w_hex %>%\n  group_by(ORIG_HEX_ID, DEST_HEX_ID) %>%\n  summarise(TRIPS = sum(TRIPS))\n\nflowlines2 <- od_hex2 %>% od2line(\n  hex_grids,\n  zone_code = \"HEX_ID\")\n\nSIM_data <- flowlines2 %>% \n  group_by(ORIG_HEX_ID, DEST_HEX_ID) %>%\n  summarise(TRIPS = sum(TRIPS))\n```\n:::\n\n\n## Distance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSIM_data <- SIM_data %>% left_join(dist_tbl)\n```\n:::\n\n\n\n## Propulsive\n\nPropulsive zones originate from origins so `propulsiveness` will join with `SIM_data` with the unique identifier as `ORIG_HEX_ID`. The `ORIG_` prefix will be added in by `propulsiveness`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSIM_data <- left_join(\n  SIM_data,\n  propulsiveness %>%\n    st_drop_geometry() %>%\n    rename_with(~paste(\"ORIG_\", .x, sep = \"\"))\n  )\n```\n:::\n\n\n\n## Attractive\n\nAttractive zones originate from destinations so `attractiveness` will join with `SIM_data` with the unique identifier as `DEST_HEX_ID`. The `DEST_` prefix will be added in by `propulsiveness`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSIM_data <- left_join(\n  SIM_data,\n  attractiveness %>%\n    st_drop_geometry() %>%\n    rename_with(~paste(\"DEST_\", .x, sep= \"\"))\n)\n\n\nwrite_rds(SIM_data, \"data/rds/SIM_data.rds\")\n```\n:::\n\n\n\n:::\n\n## Finishing Touches\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSIM_data <- read_rds(\"data/rds/SIM_data.rds\")\nsummary(SIM_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ORIG_HEX_ID     DEST_HEX_ID        TRIPS                  geometry    \n H0588  :  313   H0725  :  314   Min.   :      1   LINESTRING   :68158  \n H0725  :  313   H0588  :  313   1st Qu.:     64   epsg:3414    :    0  \n H0504  :  285   H0488  :  287   Median :    338   +proj=tmer...:    0  \n H0501  :  283   H0504  :  284   Mean   :   3986                        \n H0237  :  281   H0653  :  283   3rd Qu.:   1652                        \n H0488  :  280   H0501  :  279   Max.   :1116120                        \n (Other):66403   (Other):66398                                          \n    DISTANCE     ORIG_BUS_ALIGHT_COUNT DEST_BUS_STOP_COUNT DEST_ENTERTN_COUNT\n Min.   :  200   Min.   :     28       Min.   : 1.000      Min.   : 0.0000   \n 1st Qu.: 3000   1st Qu.: 137200       1st Qu.: 5.000      1st Qu.: 0.0000   \n Median : 5662   Median : 349858       Median : 8.000      Median : 0.0000   \n Mean   : 6535   Mean   : 572344       Mean   : 7.424      Mean   : 0.1455   \n 3rd Qu.: 9216   3rd Qu.: 679671       3rd Qu.:10.000      3rd Qu.: 0.0000   \n Max.   :24727   Max.   :5597771       Max.   :20.000      Max.   :12.0000   \n                                                                             \n DEST_FOOD_BEV_COUNT DEST_LEISURE_COUNT DEST_RETAIL_COUNT DEST_BIZ_COUNT   \n Min.   : 0          Min.   : 0.000     Min.   :  0.00    Min.   :  0.000  \n 1st Qu.: 0          1st Qu.: 0.000     1st Qu.:  6.00    1st Qu.:  0.000  \n Median : 0          Median : 1.000     Median : 21.00    Median :  1.000  \n Mean   : 2          Mean   : 1.543     Mean   : 57.27    Mean   :  5.643  \n 3rd Qu.: 1          3rd Qu.: 2.000     3rd Qu.: 64.00    3rd Qu.:  5.000  \n Max.   :88          Max.   :13.000     Max.   :851.00    Max.   :104.000  \n                                                                           \n DEST_FIN_COUNT   DEST_HDB_COUNT  DEST_HC_COUNT    DEST_SCH_COUNT\n Min.   : 0.000   Min.   : 0.00   Min.   : 0.000   Min.   :0.00  \n 1st Qu.: 0.000   1st Qu.: 0.00   1st Qu.: 0.000   1st Qu.:0.00  \n Median : 3.000   Median : 8.00   Median : 1.000   Median :0.00  \n Mean   : 5.234   Mean   :16.44   Mean   : 2.094   Mean   :0.52  \n 3rd Qu.: 7.000   3rd Qu.:29.00   3rd Qu.: 3.000   3rd Qu.:1.00  \n Max.   :72.000   Max.   :73.00   Max.   :17.000   Max.   :4.00  \n                                                                 \n```\n:::\n:::\n\n\n\n\nFor the data to be compatible with modelling, we can change the zeroes to 0.99.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreplace_zeroes <- function(data, col_name) {\n  data[[col_name]][data[[col_name]] == 0] <- 0.99\n  data\n}\n\nSIM_data <- SIM_data %>%\n  replace_zeroes(\"ORIG_BUS_ALIGHT_COUNT\") %>%\n  replace_zeroes(\"DEST_ENTERTN_COUNT\") %>%\n  replace_zeroes(\"DEST_FOOD_BEV_COUNT\") %>%\n  replace_zeroes(\"DEST_LEISURE_COUNT\") %>%\n  replace_zeroes(\"DEST_RETAIL_COUNT\") %>%\n  replace_zeroes(\"DEST_BIZ_COUNT\") %>%\n  replace_zeroes(\"DEST_FIN_COUNT\") %>%\n  replace_zeroes(\"DEST_HC_COUNT\") %>%\n  replace_zeroes(\"DEST_SCH_COUNT\") %>%\n  replace_zeroes(\"DEST_HDB_COUNT\")\n\nsummary(SIM_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ORIG_HEX_ID     DEST_HEX_ID        TRIPS                  geometry    \n H0588  :  313   H0725  :  314   Min.   :      1   LINESTRING   :68158  \n H0725  :  313   H0588  :  313   1st Qu.:     64   epsg:3414    :    0  \n H0504  :  285   H0488  :  287   Median :    338   +proj=tmer...:    0  \n H0501  :  283   H0504  :  284   Mean   :   3986                        \n H0237  :  281   H0653  :  283   3rd Qu.:   1652                        \n H0488  :  280   H0501  :  279   Max.   :1116120                        \n (Other):66403   (Other):66398                                          \n    DISTANCE     ORIG_BUS_ALIGHT_COUNT DEST_BUS_STOP_COUNT DEST_ENTERTN_COUNT\n Min.   :  200   Min.   :     28       Min.   : 1.000      Min.   : 0.990    \n 1st Qu.: 3000   1st Qu.: 137200       1st Qu.: 5.000      1st Qu.: 0.990    \n Median : 5662   Median : 349858       Median : 8.000      Median : 0.990    \n Mean   : 6535   Mean   : 572344       Mean   : 7.424      Mean   : 1.049    \n 3rd Qu.: 9216   3rd Qu.: 679671       3rd Qu.:10.000      3rd Qu.: 0.990    \n Max.   :24727   Max.   :5597771       Max.   :20.000      Max.   :12.000    \n                                                                             \n DEST_FOOD_BEV_COUNT DEST_LEISURE_COUNT DEST_RETAIL_COUNT DEST_BIZ_COUNT   \n Min.   : 0.99       Min.   : 0.990     Min.   :  0.99    Min.   :  0.990  \n 1st Qu.: 0.99       1st Qu.: 0.990     1st Qu.:  6.00    1st Qu.:  0.990  \n Median : 0.99       Median : 1.000     Median : 21.00    Median :  1.000  \n Mean   : 2.61       Mean   : 1.985     Mean   : 57.35    Mean   :  6.077  \n 3rd Qu.: 1.00       3rd Qu.: 2.000     3rd Qu.: 64.00    3rd Qu.:  5.000  \n Max.   :88.00       Max.   :13.000     Max.   :851.00    Max.   :104.000  \n                                                                           \n DEST_FIN_COUNT   DEST_HDB_COUNT  DEST_HC_COUNT    DEST_SCH_COUNT \n Min.   : 0.990   Min.   : 0.99   Min.   : 0.990   Min.   :0.990  \n 1st Qu.: 0.990   1st Qu.: 0.99   1st Qu.: 0.990   1st Qu.:0.990  \n Median : 3.000   Median : 8.00   Median : 1.000   Median :0.990  \n Mean   : 5.521   Mean   :16.82   Mean   : 2.487   Mean   :1.156  \n 3rd Qu.: 7.000   3rd Qu.:29.00   3rd Qu.: 3.000   3rd Qu.:1.000  \n Max.   :72.000   Max.   :73.00   Max.   :17.000   Max.   :4.000  \n                                                                  \n```\n:::\n:::\n\n\n\n:::{.callout-tip collapse=\"true\"}\n### Save the layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(SIM_data, \"data/rds/SIM_data_final1.rds\")\n```\n:::\n\n\n:::\n\n# 7.0 Visualising Spatial Interactions\n\n\nLoad relevant datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- st_read(\"data/geospatial/mpsz3414.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `mpsz3414' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\mpsz3414.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 328 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21448.47 xmax: 55941.94 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n\n```{.r .cell-code}\nhex_grids <- read_rds(\"data/rds/hex_grids.rds\")\nflowlines <- read_rds(\"data/rds/flowlines.rds\")\nSIM_data <- read_rds(\"data/rds/SIM_data_final1.rds\")\npropulsiveness <- read_rds(\"data/rds/propulsiveness.rds\")\nattractiveness <- read_rds(\"data/rds/attractiveness.rds\")\n```\n:::\n\n\n\n\n## General view\n\nSince the flowlines dataset is large, remove the intra-zonal flows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowlines_no_intra <- flowlines %>%\n  filter(ORIG_HEX_ID != DEST_HEX_ID)\n```\n:::\n\n\n\nThen we can use `quantile()` to check the appropriate cut-off numbers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(flowlines_no_intra$TRIPS,\n         probs = c(0.8, 0.9, 0.95, 0.99, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      80%       90%       95%       99%      100% \n    72.00    197.00    457.00   2121.85 134014.00 \n```\n:::\n:::\n\n\nShowing the top 1% of these flow lines will reveal important details as they take up the majority of the bu trips that occurred from November 2023 to January 2024.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowlines_base <- filter(flowlines_no_intra, flowlines_no_intra$TRIPS>=2386)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz3414) +\n  tm_polygons(\"lightgrey\",title=\"Singapore Boundary\", alpha = 0.8) +\n  \n  tm_shape(hex_grids) +\n  tm_polygons(\"white\", title=\"Hexagons\", alpha=1) +\n  \n  tm_shape(flowlines_base) +\n  tm_lines(lwd=\"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7),\n           title.lwd = \"# of bus trips\",\n           alpha = 0.8) +\n  \n  tm_layout(main.title = \"Top 1% Bus Passenger flows\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\", bg.alpha = 0.5) +\n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.5) +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-92-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Plotting TRIPS vs DISTANCE\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(SIM_data,\n       aes(x = DISTANCE, y = TRIPS)) +\n  geom_point() +\n  geom_hline(yintercept = 2386, color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 600, label = \"95th percentile\",\n           hjust = -0.1, color = \"red\", size = 3) +\n  geom_hline(yintercept = 1510, color = \"purple\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 1800, label = \"99th percentile\",\n           hjust = -0.1, color = \"purple\", size = 3) +\n  labs(title = \"Number of Trips as a Function of Distance\",\n       x = \"Distance (m)\",\n       y = \"Number of Trips\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-93-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(SIM_data,\n       aes(x = log(DISTANCE), y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-94-1.png){width=672}\n:::\n:::\n\n\n\n\n## Visualising propulsive forces\n\n::: {callout-tip collapse=\"true\"}\n### Creating a helper function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_propulsive <- function(var_name, title_comp, day_type = NULL, hour = NULL, pa=NULL) {\n  flowlines_filtered <- flowlines_no_intra\n  \n  if (!is.null(day_type)) {\n    flowlines_filtered <- flowlines_filtered %>% filter(DAY_TYPE == day_type)\n  }\n  \n  if (!is.null(hour)) {\n    flowlines_filtered <- flowlines_filtered %>% filter(TIME_PER_HOUR == hour)\n  }\n  \n  if (!is.null(pa)) {\n    flowlines_filtered <- flowlines_filtered %>% filter(ORIGIN_SUBZONE == pa)\n  }\n  \n  tm_shape(mpsz3414) +\n  tm_polygons(\"lightgrey\", title = \"Singapore Boundary\") +\n  \n  # Adding this layer underneath propulsiveness as we removed 0s. from the map\n  # so it won't skew the legend\n  tm_shape(hex_grids) +\n  tm_polygons(col = \"white\") +\n  \n  tm_shape(propulsiveness %>% filter(if_any(var_name, ~. >= 1))) +\n  tm_polygons(var_name, palette = \"Blues\", style = \"quantile\") +\n    \n  tm_shape(flowlines_no_intra %>% filter(TRIPS > 2385)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           title.lwd = \"# of bus trips\",\n           n = 6,\n           alpha = 0.5) +\n  \n  tm_layout(main.title = paste(\"Top 1% Bus Passenger Flows and\", title_comp),\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.7, position = c(\"right\", \"top\")) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\",\n             bg.alpha = 0.5, position = c(\"right\", \"top\")) +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"*Passenger data\",\n             bg.color = \"white\", bg.alpha = 0.7,\n             position = c(\"left\", \"bottom\"))\n}\n```\n:::\n\n\n:::\n\n\nLooking at transfers from Buses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_propulsive(\"BUS_ALIGHT_COUNT\", \"Potential Transfers from Bus\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-96-1.png){width=672}\n:::\n:::\n\n\n\n## Visualising attractive forces\n\n::: {callout-tip collapse=\"true\"}\n### Creating a helper function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive <- function(var_name, title_comp, day_type = NULL, hour = NULL, pa = NULL) {\n  flowlines_filtered <- flowlines_no_intra\n  \n  if (!is.null(day_type)) {\n    flowlines_filtered <- flowlines_filtered %>% filter(DAY_TYPE == day_type)\n  }\n  \n  if (!is.null(hour)) {\n    flowlines_filtered <- flowlines_filtered %>% filter(TIME_PER_HOUR == hour)\n  }\n  \n  if (!is.null(pa)) {\n    flowlines_filtered <- flowlines_filtered %>% filter(DESTINATION_SUBZONE == pa)\n  }\n  \n  tm_shape(mpsz3414) +\n  tm_polygons(\"green\", title = \"Singapore Boundary\") +\n  \n  # Adding this layer underneath attractiveness as we removed 0s. from the map\n  # so it won't skew the legend\n  tm_shape(hex_grids) +\n  tm_polygons(col = \"white\") +\n  \n  tm_shape(attractiveness %>% filter(if_any({{var_name}}, ~. >= 1))) +\n  tm_polygons({{var_name}}, palette = \"Purples\", style = \"quantile\") +\n    \n  tm_shape(flowlines_filtered %>% filter(TRIPS > 2385)) +\n  tm_lines(lwd = \"TRIPS\",\n           style = \"quantile\",\n           col = \"red\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           title.lwd = \"# of bus trips\",\n           n = 6,\n           alpha = 0.5) +\n  \n  tm_layout(main.title = paste(\"Top 1% Bus Passenger Flows and\", {{title_comp}}),\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  \n  tm_scale_bar(bg.color = \"white\", bg.alpha = 0.7, position = c(\"right\", \"top\")) +\n  tm_compass(type=\"8star\", size = 2, bg.color = \"white\",\n             bg.alpha = 0.5, position = c(\"right\", \"top\")) +\n  tm_grid(alpha = 0.2) +\n  tm_credits(\"*Passenger data\",\n             bg.color = \"white\", bg.alpha = 0.7,\n             position = c(\"left\", \"bottom\"))\n}\n```\n:::\n\n\n:::\n\n\n::: panel-tabset\n\n### Bus Stops\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"BUS_STOP_COUNT\", \"Number of Bus Stops\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-98-1.png){width=672}\n:::\n:::\n\n\n### HDBs\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"HDB_COUNT\", \"Number of HDB Blocks\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-99-1.png){width=672}\n:::\n:::\n\n\n### Businesses\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"BIZ_COUNT\", \"Number of Business Locations\", day_type = \"WEEKENDS/HOLIDAY\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-100-1.png){width=672}\n:::\n:::\n\n\n### Entertainment\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"ENTERTN_COUNT\", \"Number of Entertainment \\nLocations at 5pm on Weekdays\", day_type = \"WEEKDAY\", hour=17)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-101-1.png){width=672}\n:::\n:::\n\n\n### F&B\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"FOOD_BEV_COUNT\", \"Number of F&B Locations\", pa = \"BEDOK\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-102-1.png){width=672}\n:::\n:::\n\n\n### Leisure\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"LEISURE_COUNT\", \"Number of Leisure \\n& Recreation Spots attracting flows to Bedok and Paya Lebar\", pa = c(\"BEDOK\", \"PAYA LEBAR\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-103-1.png){width=672}\n:::\n:::\n\n\n### Retail\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"RETAIL_COUNT\", \"Number of Retail Locations at 1pm\", hour = 13)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-104-1.png){width=672}\n:::\n:::\n\n\n### Financial Services\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"FIN_COUNT\", \"Number of Financial Service Locations\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-105-1.png){width=672}\n:::\n:::\n\n\n### Public Healthcare Services\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"HC_COUNT\", \"Number of Public Healthcare Spots\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-106-1.png){width=672}\n:::\n:::\n\n\n### School\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_attractive(\"SCH_COUNT\", \"Number of School Locations\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-107-1.png){width=672}\n:::\n:::\n\n\n:::\n\n# 7.1 Prototype Potential\n\nThe user inputs will include:\n\n-   Flow direction with the choices of `Overall`, `Outgoing`, `Incoming`\n\n-   A viewing level drop-down bar with choices of `Overall`, `PLN_AREA`. If `PLN_AREA` is selected, there will be a further drp-down feature for the user to select the interested planning areas of the Origins and Destinations.\n\n-   Day type with the choices of `Overall`, `WEEKDAY`, `WEEKENDS/HOLIDAYS`\n\n-   Time hour choice in a sliding bar style, ranging from 0 to 23.\n\n-   A sliding bar to control the number of trips shown based on the user inputs\n\n\n\n# 8.0 Spatial Econometric Interaction Modelling\n\nRemove the intra-zonal zones pairs from SIM_data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSIM_data_no_intra <- SIM_data %>% filter(ORIG_HEX_ID != DEST_HEX_ID)\n```\n:::\n\n\n\n\nTo calibrate SEIM using spflow package, three data sets are required:\n\n-   Spatial Weights\n\n-   Distance Matrix\n\n-   Explanatory Variables\n\n\n## Prepare Spatial Weights\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grid <- st_make_grid(mpsz3414, cellsize = c(750, 750), what = \"polygons\", square = FALSE) %>%\n  st_sf() %>%\n  # Apply as.factor() since index will be used as the identifier to link to other data sets\n  mutate(index = as.factor(row_number()))\n\n# Create border of Singapore's land area\nmpsz_border <- mpsz3414 %>% st_union()\n\n# Clip the hexagon grid layer\nhex_grid_bounded <- st_intersection(hex_grid, mpsz_border)\n\n# Check if hex grid intersects any polygons using st_intersects\n# Returns a list of intersecting hexagons\nintersection_list = hex_grid$index[lengths(st_intersects(hex_grid, hex_grid_bounded)) > 0]\n\n# Filter for the intersecting hexagons\nhex_grids = hex_grid %>%\n  filter(index %in% intersection_list)\n\n\nhex_grids$BUS_COUNT <- lengths(st_intersects(hex_grids, BusStop))\nhex_grids$ENTERTN_COUNT <- lengths(st_intersects(hex_grids, entertn))\nhex_grids$FOOD_BEV_COUNT <- lengths(st_intersects(hex_grids, food_bev))\nhex_grids$LEISURE_COUNT <- lengths(st_intersects(hex_grids, leis_rec))\nhex_grids$RETAIL_COUNT <- lengths(st_intersects(hex_grids, retail))\nhex_grids$BIZ_COUNT <- lengths(st_intersects(hex_grids, biz))\nhex_grids$FIN_COUNT <- lengths(st_intersects(hex_grids, fin))\nhex_grids$HDB_COUNT <- lengths(st_intersects(hex_grids, hdb_residential2))\nhex_grids$HC_COUNT <- lengths(st_intersects(hex_grids, hc))\nhex_grids$SCHOOL_COUNT <- lengths(st_intersects(hex_grids, schools))\n\n\ntm_shape(hex_grids) +\n  tm_fill(col = \"BUS_COUNT\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col=\"grey\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-109-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- hex_grids %>%\n  filter(\"BUS_COUNT\" > 0) %>%\n  select(geometry) %>%\n  st_centroid()\n\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = FALSE))\n\n# Print summary report\nsummary(k1dists)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  750.0   750.0   750.0   751.6   750.0  3436.9 \n```\n:::\n:::\n\n\nThe largest first nearest neighbour distance is 2461.2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentroids <- suppressWarnings({\n    st_point_on_surface(st_geometry(hex_grids))})\n\nhexgrid_nb <- list(\n  \"by_contiguity\" = poly2nb(hex_grids),\n  \"by_distance\" = dnearneigh(centroids, \n                             d1 = 0, d2 = 3437),\n  \"by_knn\" = knn2nb(knearneigh(centroids, 6))\n)\n\nhexgrid_nb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$by_contiguity\nNeighbour list object:\nNumber of regions: 1673 \nNumber of nonzero links: 9478 \nPercentage nonzero weights: 0.3386295 \nAverage number of links: 5.665272 \n1 region with no links:\n1671\n5 disjoint connected subgraphs\n\n$by_distance\nNeighbour list object:\nNumber of regions: 1673 \nNumber of nonzero links: 119676 \nPercentage nonzero weights: 4.275778 \nAverage number of links: 71.53377 \n2 disjoint connected subgraphs\n\n$by_knn\nNeighbour list object:\nNumber of regions: 1673 \nNumber of nonzero links: 10038 \nPercentage nonzero weights: 0.3586372 \nAverage number of links: 6 \n2 disjoint connected subgraphs\nNon-symmetric neighbours list\n```\n:::\n:::\n\n\n\n\n## Preparing Flow Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowlines$DISTANCE <- dist_tbl$DISTANCE[match(paste(flowlines$ORIG_HEX_ID, flowlines$DEST_HEX_ID), paste(dist_tbl$ORIG_HEX_ID, dist_tbl$DEST_HEX_ID))]\n\nflow_data <- flowlines %>%\n  select(ORIG_HEX_ID, DEST_HEX_ID, TRIPS, DISTANCE) %>%\n  group_by(ORIG_HEX_ID, DEST_HEX_ID, DISTANCE) %>%\n  summarise(TRIPS = sum(TRIPS)) %>%\n  ungroup()\n\nwrite_rds(flow_data, \"data/rds/flow_data_3b.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data <- read_rds(\"data/rds/flow_data_3b.rds\")\n```\n:::\n\n\n\n## Preparing Explanatory Variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexplanatory <- hex_grids %>%\n  st_drop_geometry()\n\nwrite_rds(explanatory, \"data/rds/explanatory.rds\")\n\nexplanatory <- read_rds(\"data/rds/explanatory.rds\")\n```\n:::\n\n\n\n## Creating spflow_network-class objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_net <- spflow_network(\n  id_net = \"sg\",  # assign an id name, can give it any input\n  node_neighborhood = nb2mat(hexgrid_nb$by_distance),\n  node_data = explanatory,\n  node_key_column = \"index\"\n)\n\nhex_net\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial network nodes with id: sg\n--------------------------------------------------\nNumber of nodes: 1673\nAverage number of links per node: 71.534\nDensity of the neighborhood matrix: 4.28% (non-zero connections)\n\nData on nodes:\n     index BUS_COUNT ENTERTN_COUNT FOOD_BEV_COUNT LEISURE_COUNT RETAIL_COUNT\n1       25         0             0              0             0            0\n2       26         0             0              0             0            0\n3       27         0             0              0             0            0\n4       28         0             0              0             0            0\n5       29         0             0              0             0            0\n6       47         0             0              0             0            0\n---    ---       ---           ---            ---           ---          ---\n1668  2957         0             0              0             0            0\n1669  3003         0             0              0             0            0\n1670  3026         0             0              0             0            0\n1671  3205         0             0              0             0            0\n1672  3276         0             0              0             0            0\n1673  3322         0             0              0             0            0\n     BIZ_COUNT FIN_COUNT HDB_COUNT HC_COUNT SCHOOL_COUNT\n1            0         0         0        0            0\n2            0         0         0        0            0\n3            0         0         0        0            0\n4            0         0         0        0            0\n5            0         0         0        0            0\n6            0         0         0        0            0\n---        ---       ---       ---      ---          ---\n1668         0         0         0        0            0\n1669         0         0         0        0            0\n1670         0         0         0        0            0\n1671         0         0         0        0            0\n1672         0         0         0        0            0\n1673         0         0         0        0            0\n```\n:::\n:::\n\n\nCreate spflow_network_pair-class using `spflow_network_pair()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_net_pairs <- spflow_network_pair(\n  id_orig_net = \"sg\",\n  id_dest_net = \"sg\",\n  pair_data = flow_data,\n  orig_key_column = \"ORIG_HEX_ID\",\n  dest_key_column = \"DEST_HEX_ID\"\n)\n\nhex_net_pairs\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_multi_net <- spflow_network_multi(hex_net, hex_net_pairs)\n\nhex_multi_net\n```\n:::\n\n\n\n\n\n\n\n# References\n\nM. Chan. Applied Spatial Interaction Models - Case Study of Singapore Public Bus Commuter Flows. https://geospatial2023.netlify.app/take_home_exercise/ex2/take_home_ex2#calibrate-spatial-econometric-interaction-model-usng-maximum-likelihood-estimation\n\nK. J. Paas, 2023. Take Home Exercise 2: A Case Study of Singapore Public Bus Commuter Flows. https://isss624-kjcpaas.netlify.app/take-home_ex2/take-home_ex2\n\nT. S. Kam.\n",
    "supporting": [
      "Take-home_Ex03b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.32/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}