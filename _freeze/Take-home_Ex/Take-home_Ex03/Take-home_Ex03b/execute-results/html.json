{
  "hash": "a0af2b08ca5a03f7b44f608602e3628f",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 3 (Revised): Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data\"\nauthor: \"Victoria Grace ANN\"\nexecute: \n  warning: false\n  eval: true\n  echo: true\n  freeze: true\nformat:  \n  html: \n    code-summary: \"Show the code\"\n    toc-depth: 4\ndate: \"11 March, 2024\"\ndate-modified: \"last-modified\"\neditor: visual\n---\n\n\n\n# 1.0   Overview\n\nIn this exercise, my focus would be on prototyping exploratory spatial data analysis, particularly density of spatial assets within hexagonal traffic analysis zones. In conventional geography, a traffic analysis zone is the unit most commonly used in transportation planning models and the size of it varies. Hexagonal traffic analysis zones has gained traction as the hexagons of the study area have a uniform size which are easily comparable with each other when determining transport attractiveness. It is also recommended that hexagon radius should be 125m for areas in high urbanisation and 250m in areas with less urbanisation (Chmielewski et al., 2020).\n\nThe data preparation for this purpose also supports the preparation for calibrating spatial interaction models. For the prototyping, only exploratory spatial data analysis will be done.\n\n# 2.0   Package Installation\n\nI will load up the below R packages for the following purposes:\n\n-   tmap: to visualise spatial data by creating thematic maps that could be interactive or static.\n\n-   sf: to manipulate spatial data.\n\n-   sp: to manipulate spatial data (older than sp).\n\n-   reshape2: to reshape and transform data frames; converting data between \"wide\" and \"long\" formats using functions like melt().\n\n-   ggplot2: to visualise data with plot types including bar plots.\n\n-   tidyverse: to clean and transform data and contains sub-packagess including tidyr, dplyr and readr.\n\n-   stplanr: to provide functions suitable for working with spatial transport data like networks, orgins-destinations matrices and travel time matrices; builds on the capabilities of sf and sp packages.\n\n-   knitr: to combine code into a single documents that can be easily converted to various output formats like html, pdf, or Word.\n\n-   kableExtra: to further style any Kables.\n\n-   spdep: to create spatial wieght matrix objects from contiguities\n\n-   spflow: to estimate spatial econometric interaction models\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, sf, sp, reshape2, ggplot2, ggpubr, tidyverse, stplanr, knitr, kableExtra, spdep)\n\ndevtools::install_github(\"LukeCe/spflow\")\nlibrary(spflow)\n```\n:::\n\n\n\n# 3.0   Data sources\n\n\n-   URA's Masterplan Subzone 2019 Layer in shapefile format\n\n-   Bus Stop Locations extracted from LTA\n\n-   A tabulated bus passenger flow for Nov 2023, Dec 2023 and Jan 2024 from LTA dynamic data mall\n\n-   Population Data for 2023 from SingStat\n\n-   Schools from MOE\n\n-   Financial Services\n\n-   Hospitals, polyclinics and CHAS clinics derived from Google Maps\n\n\n# 4.0   Data preparation \n\n# 4.1   Data preparation for bus-induced hexagons\n\n\n::: panel-tabset\n\n## Bus Stops Layer\n\nRead the aspatial bus stop layer and set its CRS to 3414.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBusStop <- read.csv(\"data/aspatial/bus_coords_subzone_v2.csv\") %>% st_as_sf(coords=c(\"Longitude\", \"Latitude\"), crs=4326) %>%\n  st_transform(crs=3414)\n```\n:::\n\n\n\n## Subzone Layer\n\nRead the subzone layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(\"data/geospatial/master-plan-2019-subzone-boundary-no-sea-kml.kml\")\n```\n:::\n\n\nConvert `mpsz` to 2D geometry.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_zm(mpsz, drop = TRUE) # Convert 3D geometries to 2D\n```\n:::\n\n\nExtract the `SUBZONE_N` and `PLN_AREA_N` from the `Dscrptn` field\n\nFor SUBZONE_N,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- mpsz %>%\n  rowwise() %>%\n  mutate(SUBZONE_N = str_extract(Description, \"<th>SUBZONE_N</th> <td>(.*?)</td>\")) %>%\n  ungroup()\n\nmpsz$SUBZONE_N <- str_remove_all(mpsz$SUBZONE_N, \"<.*?>|SUBZONE_N\")\n```\n:::\n\n\nFor PLN_AREA_N,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- mpsz %>%\n  rowwise() %>%\n  mutate(PLN_AREA_N = str_extract(Description, \"<th>PLN_AREA_N</th> <td>(.*?)</td>\")) %>%\n  ungroup()\n\nmpsz$PLN_AREA_N <- str_remove_all(mpsz$PLN_AREA_N, \"<.*?>|PLN_AREA_N\")\n```\n:::\n\n\nRemove the `Description` column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz$Description <- NULL\n```\n:::\n\n\nRemove unwanted outer islands.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz3414 <- st_transform(mpsz, 3414)\n\nouter_islands <- c(\"SEMAKAU\", \"SUDONG\", \"NORTH-EASTERN ISLANDS\", \"SOUTHERN GROUP\")\nmpsz3414 <- mpsz3414 %>%\n  filter(!str_trim(SUBZONE_N) %in% str_trim(outer_islands))\n```\n:::\n\n\nCreate the shapefile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz3414, \"data/geospatial/mpsz_sf.shp\", append=FALSE)\n```\n:::\n\n\n\nRead the updated shapefile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(\"data/geospatial/mpsz_sf.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `mpsz_sf' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\mpsz_sf.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 328 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21448.47 xmax: 55941.94 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n\n## Spatial Grids Layer\n\nThe goal to create incoming and outgoing bus traffic flow visualisations from trip origins to trip destinations only requires hexagons containing bus stops.\n\nLet's look at how bus stops are distributed in Singapore.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz_sf) +\n  tm_polygons(title = \"Singapore Boundary\") +\n  tm_layout(main.title = \"Bus stops in Singapore\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_shape(BusStop) +\n  tm_dots(col = \"red\", size = 0.005, title = \"Bus Stops\") +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nThere are a few bus stops that are located in Malaysia after the Tuas Checkpoint. Since they are geographically beyond Singapore's boundary, these bus stops need to be removed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBusStop <- BusStop %>%  \n  st_intersection(mpsz_sf) %>%\n  select(BusStopCode,)\n```\n:::\n\n\n\nSome regions like the Central Water Catchment area and the west-end of Singapore do not have any bus stops. To make the hexagons containing bus stops,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg <- BusStop %>% st_make_grid(\n  cellsize = 750,\n  what = \"polygons\",\n  square = FALSE) %>%\n  st_sf() %>%\n  mutate(index = as.factor(row_number()))\n\nmpsz_border <- mpsz_sf %>% st_union()\nhex_sg2 <- st_intersection(hex_sg, mpsz_border)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids <- hex_sg %>%\n  filter(lengths(st_intersects(geometry, BusStop)) > 0)\n```\n:::\n\n\n\n::: {.callout-tip collapse=\"true\"}\n### Code interpretation\n-   st_make_grid: creates grids \n\n-   cellsize: hexagon size determined by twice the length of the apothem\n\n-   st_sf: set the hexagons as a sf object\n\n-   filter: filtering for hexagons that contain bus stops \n\n-   mutate: creating index IDs for the filtered hexagons based on the row number\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_sf) +\n  tm_polygons(title = \"Singapore Boundary\") +\n  tm_shape(hex_grids) +\n  tm_polygons(col = \"white\") +\n  tm_layout(main.title = \"Hexagons with SG Bus Stops\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.35, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_shape(BusStop) +\n  tm_dots(col = \"red\", size = 0.005, title = \"Bus Stops\") +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n:::\n\n\n# 4.2 Constructing bus commuter flow data\n\n::: {.callout-note collapse=\"true\"}\n## Combining OD data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_bus_nov <- read_csv(\"data/OD Bus/merged_bus_nov_v2.csv\")\nod_bus_dec <- read_csv(\"data/OD Bus/merged_bus_dec_v2.csv\")\nod_bus_jan <- read_csv(\"data/OD Bus/merged_bus_jan_v2.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nOD <- rbind(od_bus_nov, od_bus_dec)\nOD <- rbind(OD, od_bus_jan)\n\nnrow(od_bus_nov) + nrow(od_bus_dec) + nrow(od_bus_jan) == nrow(OD) # evaluates to TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(OD)\n```\n:::\n\n\n`ORIGIN_PT_CODE` and `DESTINATION_PT_CODE` are listed as character variables. These variables should be transformed to factors so that R treats them as grouping variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols_to_convert <- c(\"ORIGIN_PT_CODE\", \"DESTINATION_PT_CODE\")\n\nOD[cols_to_convert] <- lapply(OD[cols_to_convert], as.factor)\n\nglimpse(OD)\n```\n:::\n\n\nORIGIN_PT_CODE`and`DESTINATION_PT_CODE\\` are now factors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(OD, \"data/rds/odbus_combined.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nodbus_combined <- read_rds(\"data/rds/odbus_combined.rds\")\n```\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Creating Commute Flow Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod <- odbus_combined %>%\n  group_by(ORIGIN_PT_CODE, ORIGIN_SUBZONE, DESTINATION_PT_CODE, DESTINATION_SUBZONE, DAY_TYPE ,TIME_PER_HOUR) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %>%\n  ungroup()\n\nwrite_rds(od, \"data/rds/od.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nod <- read_rds(\"data/rds/od.rds\")\n```\n:::\n\n:::\n\n:::{.callout-note collapse=\"true\"}\n## Geospatial Wrangling\nNow we need to convert the od data from aspatial to geospatial data.\n\nFirst, we populate the hexagon grid indexes of `hex_grid_bounded2` sf data frame into `BusStop` sf data frame using *st_intersection()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBusStop_hex <- st_intersection(BusStop, hex_sg) %>%\n  select(BusStopCode, index) %>%\n  st_drop_geometry()\n\ncols_to_convert <- c(\"BusStopCode\")\nBusStop_hex[cols_to_convert] <- lapply(BusStop_hex[cols_to_convert], as.factor)\n\nglimpse(BusStop_hex)\n```\n:::\n\n\nAppend the hexagon grid index from `BusStop_hex` data frame to the segregated od data frames for both `ORIGIN_PT_CODE` and `DESTINATION_PT_CODE`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_data <- left_join(od, BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %>%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data <- left_join(od_data, BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %>%\n  rename(\"DESTIN_hex\" = \"index\") %>%\n  drop_na() %>%\n  group_by(ORIGIN_hex, ORIGIN_SUBZONE, DESTIN_hex, DESTINATION_SUBZONE, DAY_TYPE, TIME_PER_HOUR) %>%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert <- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data[cols_to_convert] <- lapply(od_data[cols_to_convert], as.factor)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(od_data, \"data/rds/od_data.rds\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nod_data <- read_rds(\"data/rds/od_data.rds\")\n```\n:::\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Remove intra-zonal flows\n\nIt is not meaningful to include trips that started and ended from the same point, so we will only include point pairs where the origin and destination of a trip are different.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_plot <- od_data[od_data$ORIGIN_hex!=od_data$DESTIN_hex,]\n```\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Create desire lines\n\nUse *od2line()* of **stplanr** package to create the desire lines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_plot <- od_plot[, c(1, 3, 2, 4:ncol(od_plot))]\n\nflowLine <- od2line(flow = od_plot, \n                    zones = hex_grids,\n                    zone_code = \"index\")\n```\n:::\n\n\n::: callout-tip\n### Learning Point\nThe flow data in the `od2line` function must have the origin and destination indexes in its first two columns.\n:::\n\nWrite and read the flowline layer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(flowLine, \"data/rds/flowLine.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine <- read_rds(\"data/rds/flowLine.rds\")\n```\n:::\n\n\n:::\n\n\n\n# 5.0   Spatial Push & Pull Factors\n\nPush factors are reasons for pushing people or passengers away from their location. Pull factors are reasons for attracting passenger to a location. These are the factor densities I am looking into:\n\n-   **Population density** of an area has an impact on movement patterns as higher population density areas can act as a propulsive force. The HDB data will be used as a proxy for the population density, where a greater number of units will indicate a higher population density.\n\n-   **Employment opportunities density** of an area can also contribute a location's push or pull. An area with more businesses will attract more workers to the area and thus the registered business data will be used as a proxy.\n\n-   **School Density** can determine the volume of passengers commuting to an area as an area with more schools would attract more human traffic whilst an area with fewer or no schools will not attract students especially during school hours.\n\n-   **Financial Services Density** can contribute to the overall attractiveness of a destination of a destination for employment by offering convenience.\n\n-   **Public Healthcare Density** can reflect the utility of polyclinics and public hospitals through the traffic network.\n\n\n# 5.1   Data preparation for POIs\n\n::: panel-tabset\n\n## Population\n\n::: {.callout-note}\n\n### Importing Aspatial HDB data\n\nUse *read_csv()* from the **readr** package to import the prepared HDB csv data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb <- read_csv(\"data/aspatial/hdb.csv\")\n```\n:::\n\n\n\nFor the purpose of computing a proxy for population density, the residential units will be extracted using *filter()* from the **dplyr** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb_residential <- hdb %>%\n  filter(residential == \"Y\")\n\nhead(hdb_residential, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 37\n    ...1 blk_no street       max_floor_lvl year_completed residential commercial\n   <dbl> <chr>  <chr>                <dbl>          <dbl> <chr>       <chr>     \n 1     0 1      BEACH RD                16           1970 Y           Y         \n 2     1 1      BEDOK STH A…            14           1975 Y           N         \n 3     3 1      CHAI CHEE RD            15           1982 Y           N         \n 4     4 1      CHANGI VILL…             4           1975 Y           Y         \n 5     5 1      DELTA AVE               25           1982 Y           N         \n 6     6 1      DOVER RD                12           1975 Y           N         \n 7     7 1      EUNOS CRES              14           1977 Y           N         \n 8     8 1      EVERTON PK              12           1980 Y           Y         \n 9    10 1      GHIM MOH RD             15           1975 Y           N         \n10    11 1      HAIG RD                 15           1976 Y           N         \n# ℹ 30 more variables: market_hawker <chr>, miscellaneous <chr>,\n#   multistorey_carpark <chr>, precinct_pavilion <chr>,\n#   bldg_contract_town <chr>, total_dwelling_units <dbl>, `1room_sold` <dbl>,\n#   `2room_sold` <dbl>, `3room_sold` <dbl>, `4room_sold` <dbl>,\n#   `5room_sold` <dbl>, exec_sold <dbl>, multigen_sold <dbl>,\n#   studio_apartment_sold <dbl>, `1room_rental` <dbl>, `2room_rental` <dbl>,\n#   `3room_rental` <dbl>, other_room_rental <dbl>, lat <dbl>, lng <dbl>, …\n```\n:::\n:::\n\n\n\nThere are also some outliers like hotels that are classified as a residential unit. We can remove rows containing 'hotel' using *grepl()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels <- hdb_residential %>%\n  filter(grepl(\"HOTEL\", building, ignore.case = TRUE))\n\nkable(hotels)\n```\n\n::: {.cell-output-display}\n| ...1|blk_no |street   | max_floor_lvl| year_completed|residential |commercial |market_hawker |miscellaneous |multistorey_carpark |precinct_pavilion |bldg_contract_town | total_dwelling_units| 1room_sold| 2room_sold| 3room_sold| 4room_sold| 5room_sold| exec_sold| multigen_sold| studio_apartment_sold| 1room_rental| 2room_rental| 3room_rental| other_room_rental|      lat|      lng|building                |addr                                                  |postal | SUBZONE_NO|SUBZONE_N |SUBZONE_C |PLN_AREA_N    |PLN_AREA_C |REGION_N       |REGION_C |\n|----:|:------|:--------|-------------:|--------------:|:-----------|:----------|:-------------|:-------------|:-------------------|:-----------------|:------------------|--------------------:|----------:|----------:|----------:|----------:|----------:|---------:|-------------:|---------------------:|------------:|------------:|------------:|-----------------:|--------:|--------:|:-----------------------|:-----------------------------------------------------|:------|----------:|:---------|:---------|:-------------|:----------|:--------------|:--------|\n|    0|1      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  142|          0|          1|        138|          1|          2|         0|             0|                     0|            0|            0|            0|                 0| 1.295097| 103.8541|RAFFLES HOTEL           |1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673           |189673 |          2|CITY HALL |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 4580|3      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  138|          0|          1|        134|          0|          3|         0|             0|                     0|            0|            0|            0|                 0| 1.294801| 103.8545|RAFFLES HOTEL SINGAPORE |3 BEACH ROAD RAFFLES HOTEL SINGAPORE SINGAPORE 189674 |189674 |          2|CITY HALL |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n:::\n:::\n\n\n\nThe HDB Blk 1 Beach Road shares a similar address as Raffles Hotel's 1 Beach Road, but they have different postal codes.\n\nTo verify other similar addresses, filter for addresses containing \"BEACH RD\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeach_rd <- hdb_residential %>%\n  filter(grepl(\"BEACH RD\", street, ignore.case = TRUE))\n\nkable(beach_rd)\n```\n\n::: {.cell-output-display}\n| ...1|blk_no |street   | max_floor_lvl| year_completed|residential |commercial |market_hawker |miscellaneous |multistorey_carpark |precinct_pavilion |bldg_contract_town | total_dwelling_units| 1room_sold| 2room_sold| 3room_sold| 4room_sold| 5room_sold| exec_sold| multigen_sold| studio_apartment_sold| 1room_rental| 2room_rental| 3room_rental| other_room_rental|      lat|      lng|building                     |addr                                                                |postal | SUBZONE_NO|SUBZONE_N    |SUBZONE_C |PLN_AREA_N    |PLN_AREA_C |REGION_N       |REGION_C |\n|----:|:------|:--------|-------------:|--------------:|:-----------|:----------|:-------------|:-------------|:-------------------|:-----------------|:------------------|--------------------:|----------:|----------:|----------:|----------:|----------:|---------:|-------------:|---------------------:|------------:|------------:|------------:|-----------------:|--------:|--------:|:----------------------------|:-------------------------------------------------------------------|:------|----------:|:------------|:---------|:-------------|:----------|:--------------|:--------|\n|    0|1      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  142|          0|          1|        138|          1|          2|         0|             0|                     0|            0|            0|            0|                 0| 1.295097| 103.8541|RAFFLES HOTEL                |1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673                         |189673 |          2|CITY HALL    |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 1660|15     |BEACH RD |            20|           1974|Y           |Y          |N             |N             |N                   |N                 |KWN                |                   76|          0|          0|          0|         76|          0|         0|             0|                     0|            0|            0|            0|                 0| 1.295796| 103.8555|NIL                          |15 BEACH ROAD                                                       |NIL    |          1|BUGIS        |DTSZ01    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 2079|17     |BEACH RD |            20|           1974|Y           |Y          |N             |N             |N                   |N                 |KWN                |                   76|          0|          0|          0|         76|          0|         0|             0|                     0|            0|            0|            0|                 0| 1.303689| 103.8636|GOLDEN BEACH VISTA           |17 BEACH ROAD GOLDEN BEACH VISTA SINGAPORE 190017                   |190017 |          9|CRAWFORD     |KLSZ09    |KALLANG       |KL         |CENTRAL REGION |CR       |\n| 2567|2      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  139|          0|          1|        136|          0|          2|         0|             0|                     0|            0|            0|            0|                 0| 1.390462| 103.9753|CHANGI BEACH CLUB            |2 ANDOVER ROAD CHANGI BEACH CLUB SINGAPORE 509984                   |509984 |          1|CHANGI POINT |CHSZ01    |CHANGI        |CH         |EAST REGION    |ER       |\n| 4580|3      |BEACH RD |            16|           1970|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  138|          0|          1|        134|          0|          3|         0|             0|                     0|            0|            0|            0|                 0| 1.294801| 103.8545|RAFFLES HOTEL SINGAPORE      |3 BEACH ROAD RAFFLES HOTEL SINGAPORE SINGAPORE 189674               |189674 |          2|CITY HALL    |DTSZ02    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 6028|4      |BEACH RD |            16|           1968|Y           |N          |N             |Y             |N                   |N                 |KWN                |                  336|          0|          0|          0|          0|          0|         0|             0|                     0|          336|            0|            0|                 0| 1.304716| 103.8652|NIL                          |4 BEACH ROAD SINGAPORE 190004                                       |190004 |          9|CRAWFORD     |KLSZ09    |KALLANG       |KL         |CENTRAL REGION |CR       |\n| 7743|5      |BEACH RD |            16|           1968|Y           |N          |N             |Y             |N                   |N                 |KWN                |                  336|          0|          0|          0|          0|          0|         0|             0|                     0|          336|            0|            0|                 0| 1.298092| 103.8569|BEACH ROAD CONSERVATION AREA |5 TAN QUEE LAN STREET BEACH ROAD CONSERVATION AREA SINGAPORE 188094 |188094 |          1|BUGIS        |DTSZ01    |DOWNTOWN CORE |DT         |CENTRAL REGION |CR       |\n| 8956|6      |BEACH RD |            16|           1968|Y           |Y          |N             |N             |N                   |N                 |KWN                |                  198|          0|         45|          1|         28|          0|         0|             0|                     0|           57|           67|            0|                 0| 1.303992| 103.8644|BEACH ROAD GARDENS           |6 BEACH ROAD BEACH ROAD GARDENS SINGAPORE 190006                    |190006 |          9|CRAWFORD     |KLSZ09    |KALLANG       |KL         |CENTRAL REGION |CR       |\n:::\n:::\n\n\n\n2, 5 and 15 Beach Road do not have the correct postal codes following the 1900XX convention. Additionally, these addresses do not have the correct coordinates too.\n\nWith reference to URA's official asset map of Singapore, OneMap, the data will be manually modified using *mutate()* and *ifelse()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb_residential2 <- hdb_residential %>%\n  mutate(postal = ifelse(blk_no == 1 & street == \"BEACH RD\", 190001, postal)) %>%\n  mutate(lat = ifelse(blk_no == 1 & street == \"BEACH RD\", 1.3036714, lat)) %>%\n  mutate(lng = ifelse(blk_no == 1 & street == \"BEACH RD\", 103.8644787, lng)) %>%\n  mutate(postal = ifelse(blk_no == 2 & street == \"BEACH RD\", 190002, postal)) %>%\n  mutate(lat = ifelse(blk_no == 2 & street == \"BEACH RD\", 1.3040331, lat)) %>%\n  mutate(lng = ifelse(blk_no == 2 & street == \"BEACH RD\", 103.8649285, lng)) %>%\n  mutate(postal = ifelse(blk_no == 3 & street == \"BEACH RD\", 190003, postal)) %>%\n  mutate(lat = ifelse(blk_no == 3 & street == \"BEACH RD\", 1.3041872, lat)) %>%\n  mutate(lng = ifelse(blk_no == 3 & street == \"BEACH RD\", 103.8651934, lng)) %>%\n  mutate(postal = ifelse(blk_no == 5 & street == \"BEACH RD\", 190005, postal)) %>%\n  mutate(lat = ifelse(blk_no == 5 & street == \"BEACH RD\", 1.3043463, lat)) %>%\n  mutate(lng = ifelse(blk_no == 5 & street == \"BEACH RD\", 103.8648158, lng)) %>%\n  mutate(postal = ifelse(blk_no == 15 & street == \"BEACH RD\", 190015, postal)) %>%\n  mutate(lat = ifelse(blk_no == 15 & street == \"BEACH RD\", 1.3034254, lat)) %>%\n  mutate(lng = ifelse(blk_no == 15 & street == \"BEACH RD\", 103.8631535, lng))\n```\n:::\n\n\nCheck for any duplicates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- hdb_residential2 %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nDT::datatable(duplicate)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-81f6fba92bbfcbc41653\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-81f6fba92bbfcbc41653\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>...1<\\/th>\\n      <th>blk_no<\\/th>\\n      <th>street<\\/th>\\n      <th>max_floor_lvl<\\/th>\\n      <th>year_completed<\\/th>\\n      <th>residential<\\/th>\\n      <th>commercial<\\/th>\\n      <th>market_hawker<\\/th>\\n      <th>miscellaneous<\\/th>\\n      <th>multistorey_carpark<\\/th>\\n      <th>precinct_pavilion<\\/th>\\n      <th>bldg_contract_town<\\/th>\\n      <th>total_dwelling_units<\\/th>\\n      <th>1room_sold<\\/th>\\n      <th>2room_sold<\\/th>\\n      <th>3room_sold<\\/th>\\n      <th>4room_sold<\\/th>\\n      <th>5room_sold<\\/th>\\n      <th>exec_sold<\\/th>\\n      <th>multigen_sold<\\/th>\\n      <th>studio_apartment_sold<\\/th>\\n      <th>1room_rental<\\/th>\\n      <th>2room_rental<\\/th>\\n      <th>3room_rental<\\/th>\\n      <th>other_room_rental<\\/th>\\n      <th>lat<\\/th>\\n      <th>lng<\\/th>\\n      <th>building<\\/th>\\n      <th>addr<\\/th>\\n      <th>postal<\\/th>\\n      <th>SUBZONE_NO<\\/th>\\n      <th>SUBZONE_N<\\/th>\\n      <th>SUBZONE_C<\\/th>\\n      <th>PLN_AREA_N<\\/th>\\n      <th>PLN_AREA_C<\\/th>\\n      <th>REGION_N<\\/th>\\n      <th>REGION_C<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,4,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"...1\",\"targets\":1},{\"name\":\"blk_no\",\"targets\":2},{\"name\":\"street\",\"targets\":3},{\"name\":\"max_floor_lvl\",\"targets\":4},{\"name\":\"year_completed\",\"targets\":5},{\"name\":\"residential\",\"targets\":6},{\"name\":\"commercial\",\"targets\":7},{\"name\":\"market_hawker\",\"targets\":8},{\"name\":\"miscellaneous\",\"targets\":9},{\"name\":\"multistorey_carpark\",\"targets\":10},{\"name\":\"precinct_pavilion\",\"targets\":11},{\"name\":\"bldg_contract_town\",\"targets\":12},{\"name\":\"total_dwelling_units\",\"targets\":13},{\"name\":\"1room_sold\",\"targets\":14},{\"name\":\"2room_sold\",\"targets\":15},{\"name\":\"3room_sold\",\"targets\":16},{\"name\":\"4room_sold\",\"targets\":17},{\"name\":\"5room_sold\",\"targets\":18},{\"name\":\"exec_sold\",\"targets\":19},{\"name\":\"multigen_sold\",\"targets\":20},{\"name\":\"studio_apartment_sold\",\"targets\":21},{\"name\":\"1room_rental\",\"targets\":22},{\"name\":\"2room_rental\",\"targets\":23},{\"name\":\"3room_rental\",\"targets\":24},{\"name\":\"other_room_rental\",\"targets\":25},{\"name\":\"lat\",\"targets\":26},{\"name\":\"lng\",\"targets\":27},{\"name\":\"building\",\"targets\":28},{\"name\":\"addr\",\"targets\":29},{\"name\":\"postal\",\"targets\":30},{\"name\":\"SUBZONE_NO\",\"targets\":31},{\"name\":\"SUBZONE_N\",\"targets\":32},{\"name\":\"SUBZONE_C\",\"targets\":33},{\"name\":\"PLN_AREA_N\",\"targets\":34},{\"name\":\"PLN_AREA_C\",\"targets\":35},{\"name\":\"REGION_N\",\"targets\":36},{\"name\":\"REGION_C\",\"targets\":37}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n:::\n\n::: {.callout-note}\n\n### Converting Aspatial data to Geospatial data\n\nLongitude and latitude values are in decimal degrees and thus the data is in wgs84 geographic coordinate system.\n\nTo convert `hdb_residential2` into sf, we use *st_as_sf()* and set the `crs` argument to 4326 first. The transformation to Singapore's coordinate reference system 3414 will be done with *st_transform()*.\n\nWe only need the postal code, total dwelling units and geometry attributes so we will use the *select()* function to extract these columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhdb_residential_sf <- st_as_sf(hdb_residential2, \n                   coords = c(\"lng\", \"lat\"),\n                   crs=4326) %>%\n  st_transform(crs = 3414) %>%\n  select(postal, total_dwelling_units, geometry)\n\nstr(hdb_residential_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsf [10,181 × 3] (S3: sf/tbl_df/tbl/data.frame)\n $ postal              : chr [1:10181] \"190001\" \"460001\" \"461001\" \"500001\" ...\n $ total_dwelling_units: num [1:10181] 142 206 102 55 96 125 247 95 220 219 ...\n $ geometry            :sfc_POINT of length 10181; first list element:  'XY' num [1:2] 31468 31779\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA\n  ..- attr(*, \"names\")= chr [1:2] \"postal\" \"total_dwelling_units\"\n```\n:::\n:::\n\n:::\n\n::: {.callout-note}\n### Performing in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhousing_count <- st_join(hex_sg, hdb_residential_sf, \n                     join = st_intersects, left = TRUE) %>%\n  st_drop_geometry() %>%\n  group_by(index) %>%\n  summarise(housing_count = sum(total_dwelling_units)) %>%\n  ungroup() %>%\n  mutate(housing_count = ifelse(is.na(housing_count), 0, housing_count))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2 <- left_join(hex_sg, housing_count,\n                               by = c(\"index\" = \"index\"))\n\nsummary(hex_sg2$housing_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.0     0.0     0.0   459.3     0.0  7890.0 \n```\n:::\n:::\n\n:::\n\n\n## Business\n\n::: {.callout-note}\n\n### Import Geospatial data: Business\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbiz <- st_read(\"data/geospatial/Business.shp\") %>% st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Business' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Business.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$biz_count <- lengths(st_intersects(hex_sg2, biz))\n\nsummary(hex_sg2$biz_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   2.757   0.000 104.000 \n```\n:::\n:::\n\n\n:::\n\n## School\n\n::: {.callout-note}\n\n### Import aspatial data: School\n\n\n::: {.cell}\n\n```{.r .cell-code}\nschools <- read_csv(\"data/aspatial/schoolsclean.csv\")\n\nschools <- schools %>%\n  separate(latlong, into = c(\"latitude\", \"longitude\"), sep = \",\", convert = TRUE)\n\nschools_sf <- st_as_sf(schools, coords = c(\"longitude\",\"latitude\"), crs = 4326) %>% \n  st_transform(crs=3414)\n```\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$school_count <- lengths(st_intersects(hex_sg2, schools_sf))\n\nsummary(hex_sg2$school_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1368  0.0000  4.0000 \n```\n:::\n:::\n\n\n:::\n\n\n## Financial Services\n\n::: {.callout-note}\n\n### Import Geospatial data: Financial Services\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFinServ <- st_read(dsn = \"data/geospatial\", layer = \"FinServ\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `FinServ' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$fin_count <- lengths(st_intersects(hex_sg2, FinServ))\n\nsummary(hex_sg2$fin_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.397   0.000 114.000 \n```\n:::\n:::\n\n\n:::\n\n\n## Public Healthcare\n\n::: {.callout-note}\n\n### Import aspatial data: Healthcare\n\n\n::: {.cell}\n\n```{.r .cell-code}\npublic_hc <- read_csv(\"data/aspatial/HospitalsPolyclinics v_2024.csv\")\n\npublic_hc.sf <- st_as_sf(public_hc[1:42,], wkt = \"geometry\", crs = 4326) %>% \n  st_transform(crs=3414)\n\npublic_hc2.sf <- st_as_sf(public_hc[43:1235,], wkt = \"geometry\", crs = 3414) # CHAS clinics encoded in EPSG 3414 \n\npublic_hc.sf <- rbind(public_hc.sf, public_hc2.sf)\n\n#write_rds(public_hc.sf, \"data/geospatial/public_hc.sf\")\n```\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$hc_count <- lengths(st_intersects(hex_sg2, public_hc.sf))\n\nsummary(hex_sg2$hc_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.5196  0.0000 17.0000 \n```\n:::\n:::\n\n\n:::\n\n\n## Leisure & Recreation\n\n::: {.callout-note}\n\n### Import Geospatial data: Leisure & Recreation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleisure_recre <- st_read(\"data/geospatial/Liesure&Recreation.shp\") %>% st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Liesure&Recreation' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Liesure&Recreation.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$leisure_recre_count <- lengths(st_intersects(hex_sg2, leisure_recre))\n\nsummary(hex_sg2$leisure_recre_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.5112  0.0000 36.0000 \n```\n:::\n:::\n\n\n:::\n\n\n## Food & Beverages\n\n::: {.callout-note}\n\n### Import Geospatial data: F&B\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_bev <- st_read(\"data/geospatial/F&B.shp\") %>% st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `F&B' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\F&B.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$food_bev_count <- lengths(st_intersects(hex_sg2, food_bev))\n\nsummary(hex_sg2$food_bev_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  0.0000   0.0000   0.0000   0.8051   0.0000 152.0000 \n```\n:::\n:::\n\n\n:::\n\n\n## Retail\n\n::: {.callout-note}\n\n### Import Geospatial data: Leisure & Recreation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nretail <- st_read(\"data/geospatial/Retails.shp\") %>% st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Retails' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Retails.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$retail_count <- lengths(st_intersects(hex_sg2, retail))\n\nsummary(hex_sg2$retail_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    0.00   15.84    3.00 1188.00 \n```\n:::\n:::\n\n\n:::\n\n\n## Entertainment\n\n::: {.callout-note}\n\n### Import Geospatial data: Entertainment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nentertn <- st_read(\"data/geospatial/entertn.shp\") %>% st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `entertn' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\entertn.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n```\n:::\n:::\n\n\n:::\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$entertn_count <- lengths(st_intersects(hex_sg2, entertn))\n\nsummary(hex_sg2$entertn_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   0.048   0.000  12.000 \n```\n:::\n:::\n\n\n:::\n\n## Bus Stop\n\n::: {.callout-note}\n\n### Perform point-in-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sg2$bus_count <- lengths(st_intersects(hex_sg2, BusStop))\n\nsummary(hex_sg2$bus_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   2.149   4.000  20.000 \n```\n:::\n:::\n\n\n-   There are up to 20 bus stops in a study hexagon.\n\n:::\n\n:::\n\n\n# 5.2 Visualisation of POI densities\n\n::: panel-tabset\n\n## Bus Stop\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"bus_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Bus Stop Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\n\n## Population\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"housing_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Housing Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\n\n## Business\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"biz_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Business Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n\n\n## School\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"school_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"School Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n\n## Financial Services\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"fin_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Financial Services Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n\n\n## Public Healthcare\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"hc_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Public Healthcare Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n\n\n## Leisure & Recreation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"leisure_recre_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Leisure & Recreation Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n\n\n## Food & Beverages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"food_bev_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"F&B Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n\n\n## Retail\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"entertn_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Entertainment Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n\n\n## Entertainment\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_sg2) +\n  tm_fill(col = \"entertn_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Entertainment Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n# 6.0   Distance Matrix Computation\n\n# 6.1   Prepare Origin & Destination Variables\n\n::: {callout-note collapse=\"true\"}\n## Origin (Propulsive)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npropulsive <- hex_sg2 %>%\n  st_drop_geometry() %>%\n  select(index, biz_count, school_count, fin_count, hc_count, bus_count, housing_count, leisure_recre_count, retail_count, entertn_count, food_bev_count)\n  \n\norigin <- names(propulsive) %>%\n  modify_at(-1, ~ paste0(\"o_\", .))  # Add prefix to all except index\n\n# Assign modified names back to the data frame\nnames(propulsive) <- origin\n```\n:::\n\n:::\n\n::: {callout-note collapse=\"true\"}\n## Destination\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattractiveness <- hex_sg2 %>%\n  st_drop_geometry() %>%\n  select(index, biz_count, school_count, fin_count, hc_count, bus_count, housing_count, leisure_recre_count, retail_count, entertn_count, food_bev_count)\n  \n\ndestin <- names(propulsive) %>%\n  modify_at(-1, ~ paste0(\"d_\", .))  # Add prefix to all except index\n\n# Assign modified names back to the data frame\nnames(attractiveness) <- destin\n```\n:::\n\n:::\n\n# 6.2    Construction\n\nA distance matrix shows the distance between pairs of locations. A location's distance from itself is shown in the main diagonal of a distance matrix table.\n\nIn view of time, we will use sp rather than sf.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grid_sp <- as(hex_grids, \"Spatial\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- spDists(hex_grid_sp, longlat = FALSE)\n\n# resultant matrix\nhead(dist, n=c(10, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n [1,]    0.000  750.000 1500.000 2704.163 1299.038 2250.000 3436.932 4683.748\n [2,]  750.000    0.000 1299.038 2598.076  750.000 1984.313 3269.174 4562.072\n [3,] 1500.000 1299.038    0.000 1299.038  750.000  750.000 1984.313 3269.174\n [4,] 2704.163 2598.076 1299.038    0.000 1984.313  750.000  750.000 1984.313\n [5,] 1299.038  750.000  750.000 1984.313    0.000 1299.038 2598.076 3897.114\n [6,] 2250.000 1984.313  750.000  750.000 1299.038    0.000 1299.038 2598.076\n [7,] 3436.932 3269.174 1984.313  750.000 2598.076 1299.038    0.000 1299.038\n [8,] 4683.748 4562.072 3269.174 1984.313 3897.114 2598.076 1299.038    0.000\n [9,] 1984.313 1500.000  750.000 1500.000  750.000  750.000 1984.313 3269.174\n[10,] 3000.000 2704.163 1500.000  750.000 1984.313  750.000  750.000 1984.313\n          [,9]    [,10]\n [1,] 1984.313 3000.000\n [2,] 1500.000 2704.163\n [3,]  750.000 1500.000\n [4,] 1500.000  750.000\n [5,]  750.000 1984.313\n [6,]  750.000  750.000\n [7,] 1984.313  750.000\n [8,] 3269.174 1984.313\n [9,]    0.000 1299.038\n[10,] 1299.038    0.000\n```\n:::\n:::\n\n::: {.callout-note}\nThe result is a matrix object class and the column and row headers are not labeled with the hexagon grid index representing the TAZ.\n:::\n\n## Label column and row headers\n\nCreate a list sorted according to the distance matrix by Traffic Analytical Zones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_names <- hex_grids$index\n```\n:::\n\n\nAttach the hexagon grid index to the rows and columns for distance matrix matching.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dist) <- paste0(hex_names)\nrownames(dist) <- paste0(hex_names)\n```\n:::\n\n\n## Pivot distance value by hexagon grid index\n\nThe distance matrix is pivoted into a long table by using the *melt()* function of **reshape2**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair <- reshape2::melt(dist) %>%\n  rename(dist = value)\n\nhead(distPair, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Var1 Var2     dist\n1     2    2    0.000\n2    40    2  750.000\n3    41    2 1500.000\n4    42    2 2704.163\n5    60    2 1299.038\n6    61    2 2250.000\n7    62    2 3436.932\n8    63    2 4683.748\n9    79    2 1984.313\n10   80    2 3000.000\n```\n:::\n:::\n\n\n-   The intra-zonal distances are 0.\n\n## Update intra-zonal distances\n\nCheck for the lowest non-zero distance value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Var1           Var2           dist      \n Min.   :   2   Min.   :   2   Min.   :  750  \n 1st Qu.: 791   1st Qu.: 791   1st Qu.: 8352  \n Median :1203   Median :1203   Median :13500  \n Mean   :1160   Mean   :1160   Mean   :14257  \n 3rd Qu.:1545   3rd Qu.:1545   3rd Qu.:19018  \n Max.   :2365   Max.   :2365   Max.   :47381  \n```\n:::\n:::\n\n\nSince the lowest distance is 750m, any distance less than 750m can represent the intra-zonal distance. For consistency, 375m is appended to intra-zonal distances.\n\n:::{.callout-warning, collapse=\"true}\n### Warning: Do not leave distances at zero value\n\nIn Poisson regression, log is applied to the distances and distances need to be set as positive values.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair$dist <- ifelse(distPair$dist == 0,\n                        375, distPair$dist)\n\nsummary(distPair)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Var1           Var2           dist      \n Min.   :   2   Min.   :   2   Min.   :  375  \n 1st Qu.: 791   1st Qu.: 791   1st Qu.: 8352  \n Median :1203   Median :1203   Median :13332  \n Mean   :1160   Mean   :1160   Mean   :14240  \n 3rd Qu.:1545   3rd Qu.:1545   3rd Qu.:19018  \n Max.   :2365   Max.   :2365   Max.   :47381  \n```\n:::\n:::\n\n\nRename the origin and destination fields and convert into factor data type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair <- distPair %>%\n  rename(orig = Var1,\n         dest = Var2) %>%\n  mutate(across(c(orig, dest), as.factor))\n```\n:::\n\n\n#   6.3 Separating intra-flow from passenger volume\n\nA new column `FlowNoIntra` is created to differentiate intra-zone trips from inter-zone trips based on the comparison of origin and destination zones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_data$FlowNoIntra <- ifelse(\n  od_data$ORIGIN_hex == od_data$DESTIN_hex, 0, od_data$TOTAL_TRIPS)\nod_data$offset <- ifelse(\n  od_data$ORIGIN_hex == od_data$DESTIN_hex, 0.000001, 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nod_data <- od_data%>%\n  filter(FlowNoIntra > 0)\n```\n:::\n\n\n## Combining passenger volume data with distance value\n\nConvert the data value type into factor for the origin and destination hex indexes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_data$ORIGIN_hex <- as.factor(od_data$ORIGIN_hex)\nod_data$DESTIN_hex <- as.factor(od_data$DESTIN_hex)\n```\n:::\n\n\nThen perform a left join to join the OD data and distPair. Store it under `flow_data`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data <- od_data %>%\n  left_join (distPair,\n             by = c(\"ORIGIN_hex\" = \"orig\",\n                    \"DESTIN_hex\" = \"dest\"))\n```\n:::\n\n\n## Preparing origin attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data <- flow_data %>%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n```\n:::\n\n\n## Preparing destination attributes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data <- flow_data %>%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n```\n:::\n\n\n## Check for variables with zero values\n\nFor log transformation, log 0 is undefined so it is critical to ensure there are no zero values in the explanatory variables.\n\n\n::: {.cell}\n\n:::\n\n\nAll except the bus stop count variables contain zero values and need to be replaced with a negligible value like 0.99.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data <- flow_data %>%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nwrite_rds(flow_data, \"data/rds/flow_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data <- read_rds(\"data/rds/flow_data.rds\")\n```\n:::\n\n\n## Apply log transformation\n\nPoisson regression is based on log, so log() has to be applied to all our explanatory variables before calibrating the various spatial interaction models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data_log <- flow_data %>%\n  mutate_at(vars(ends_with(\"_count\")), log) %>%\n  mutate(dist = log(dist))\n\nsummary(flow_data_log)\n```\n:::\n\n\n\n#   7.0 Spatial Econometric Interaction Modelling\n\n##    7.1 Spatial Interaction Model\nSIM is a mathematical model predicting the movement of people between origins (like homes) and destinations by examining the distance between them.\n\nIn a healthcare context, a SIM can account the likely demand for health services and the quality of service provision at health centres. Conventionally, SIM's cousin term is gravity model.\n\n\n:::{.callout-note collapse=\"true\"}\n## Variable Construction\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate propulsive variables names\norigin_var <- propulsive %>%\n  select(-(index)) %>%\n  names()\n\n# Generate attractiveness variables names\ndestin_var <- attractiveness %>%\n  select(-(index)) %>%\n  names()\n```\n:::\n\n:::\n\n\n:::{.callout-note collapse=\"true\"}\n## Origin Constrained Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate the formula dynamically\nformula_string <- paste(\"TOTAL_TRIPS ~ ORIGIN_hex +\", \n                        paste(destin_var, collapse = \" + \"), \"+ dist - 1\")\n\n# Convert the string to a formula\nformula <- as.formula(formula_string)\n\norcSIM <- glm(formula,\n              family = poisson(link = \"log\"),\n              data = flow_data_log,\n              na.action = na.exclude)\n\nwrite_rds(orcSIM, \"data/rds/decSIM.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norcSIM <- read_rds(\"data/rds/orcSIM.rds\")\nsummary(orcSIM)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = formula, family = poisson(link = \"log\"), data = flow_data_log, \n    na.action = na.exclude)\n\nCoefficients:\n                 Estimate Std. Error  z value Pr(>|z|)    \nORIGIN_hex121  13.5336831  0.0584301   231.62   <2e-16 ***\nORIGIN_hex123  12.4390069  0.0819305   151.82   <2e-16 ***\nORIGIN_hex144  13.4750844  0.0440337   306.02   <2e-16 ***\nORIGIN_hex145  15.0222243  0.0153560   978.26   <2e-16 ***\nORIGIN_hex146  11.3879612  0.0949213   119.97   <2e-16 ***\nORIGIN_hex168  12.0552874  0.0803284   150.07   <2e-16 ***\nORIGIN_hex169  13.2386065  0.0301146   439.61   <2e-16 ***\nORIGIN_hex170  11.5352737  0.0778572   148.16   <2e-16 ***\nORIGIN_hex171  15.1750746  0.0089784  1690.17   <2e-16 ***\nORIGIN_hex190  15.5789009  0.0134204  1160.84   <2e-16 ***\nORIGIN_hex191  13.3539440  0.0455629   293.09   <2e-16 ***\nORIGIN_hex192  14.8953975  0.0105360  1413.76   <2e-16 ***\nORIGIN_hex193  14.5160158  0.0127033  1142.70   <2e-16 ***\nORIGIN_hex194  10.8691168  0.0971347   111.90   <2e-16 ***\nORIGIN_hex215  11.9622065  0.0542435   220.53   <2e-16 ***\nORIGIN_hex216  12.8327822  0.0341570   375.70   <2e-16 ***\nORIGIN_hex217  13.2947484  0.0235066   565.58   <2e-16 ***\nORIGIN_hex218  12.4857636  0.0296134   421.62   <2e-16 ***\nORIGIN_hex236  15.5530131  0.0151447  1026.96   <2e-16 ***\nORIGIN_hex237  12.2034225  0.0533120   228.91   <2e-16 ***\nORIGIN_hex238  12.9448506  0.0348097   371.88   <2e-16 ***\nORIGIN_hex239  12.6631297  0.0342159   370.10   <2e-16 ***\nORIGIN_hex240  12.8543661  0.0335764   382.84   <2e-16 ***\nORIGIN_hex241  12.9443515  0.0211229   612.81   <2e-16 ***\nORIGIN_hex242  13.4779463  0.0197298   683.13   <2e-16 ***\nORIGIN_hex260  14.6962917  0.0356452   412.29   <2e-16 ***\nORIGIN_hex261  11.9823820  0.0498236   240.50   <2e-16 ***\nORIGIN_hex263  13.9405926  0.0199410   699.09   <2e-16 ***\nORIGIN_hex264  16.1279023  0.0040731  3959.61   <2e-16 ***\nORIGIN_hex265  16.5930476  0.0035485  4676.07   <2e-16 ***\nORIGIN_hex286  12.0221498  0.0544035   220.98   <2e-16 ***\nORIGIN_hex287  13.2017789  0.0182382   723.85   <2e-16 ***\nORIGIN_hex288  10.0829448  0.2294183    43.95   <2e-16 ***\nORIGIN_hex309  11.0657186  0.0733322   150.90   <2e-16 ***\nORIGIN_hex310  13.1230383  0.0188857   694.87   <2e-16 ***\nORIGIN_hex311  11.9663950  0.0560884   213.35   <2e-16 ***\nORIGIN_hex331  12.2590234  0.0449598   272.67   <2e-16 ***\nORIGIN_hex332  16.6481995  0.0033582  4957.54   <2e-16 ***\nORIGIN_hex333  13.2075112  0.0206966   638.15   <2e-16 ***\nORIGIN_hex354  13.5544063  0.0253806   534.05   <2e-16 ***\nORIGIN_hex355  12.6696851  0.0311935   406.16   <2e-16 ***\nORIGIN_hex356  13.3390124  0.0168607   791.13   <2e-16 ***\nORIGIN_hex376  11.7534231  0.1031482   113.95   <2e-16 ***\nORIGIN_hex377  12.1780590  0.0400150   304.34   <2e-16 ***\nORIGIN_hex378  12.3413051  0.0294483   419.08   <2e-16 ***\nORIGIN_hex400  12.2011386  0.0479020   254.71   <2e-16 ***\nORIGIN_hex401  14.8904017  0.0081678  1823.06   <2e-16 ***\nORIGIN_hex402  12.8393957  0.0303964   422.40   <2e-16 ***\nORIGIN_hex422  13.7973255  0.0265114   520.43   <2e-16 ***\nORIGIN_hex423  12.7386630  0.0348761   365.25   <2e-16 ***\nORIGIN_hex424  15.2587718  0.0072075  2117.08   <2e-16 ***\nORIGIN_hex446  12.8193956  0.0285447   449.10   <2e-16 ***\nORIGIN_hex447  12.7376760  0.0286467   444.65   <2e-16 ***\nORIGIN_hex448  13.5397484  0.0247556   546.94   <2e-16 ***\nORIGIN_hex468  13.4771925  0.0223460   603.11   <2e-16 ***\nORIGIN_hex469  13.0041018  0.0238821   544.51   <2e-16 ***\nORIGIN_hex470  13.1828958  0.0191584   688.10   <2e-16 ***\nORIGIN_hex492  12.6960485  0.0615570   206.25   <2e-16 ***\nORIGIN_hex493  12.2040978  0.0540860   225.64   <2e-16 ***\nORIGIN_hex494  12.9203086  0.0247718   521.57   <2e-16 ***\nORIGIN_hex515  13.2167915  0.0197119   670.50   <2e-16 ***\nORIGIN_hex516  12.3922036  0.0324141   382.31   <2e-16 ***\nORIGIN_hex518  12.3487104  0.0430076   287.13   <2e-16 ***\nORIGIN_hex538  13.8818652  0.0198955   697.74   <2e-16 ***\nORIGIN_hex539  13.3129638  0.0228677   582.17   <2e-16 ***\nORIGIN_hex540  17.5959241  0.0018849  9335.32   <2e-16 ***\nORIGIN_hex541  13.3927601  0.0265201   505.00   <2e-16 ***\nORIGIN_hex542  14.4041433  0.0127096  1133.32   <2e-16 ***\nORIGIN_hex561  12.2835640  0.0333693   368.11   <2e-16 ***\nORIGIN_hex562  13.3776651  0.0180821   739.83   <2e-16 ***\nORIGIN_hex564  14.4830527  0.0139878  1035.41   <2e-16 ***\nORIGIN_hex565  13.8477991  0.0201971   685.63   <2e-16 ***\nORIGIN_hex584  13.3033595  0.0300736   442.36   <2e-16 ***\nORIGIN_hex585  13.5266341  0.0215723   627.04   <2e-16 ***\nORIGIN_hex586  13.5883414  0.0122092  1112.96   <2e-16 ***\nORIGIN_hex587  16.8900641  0.0031964  5284.07   <2e-16 ***\nORIGIN_hex588  15.0317147  0.0085150  1765.33   <2e-16 ***\nORIGIN_hex608  13.0378272  0.0205707   633.80   <2e-16 ***\nORIGIN_hex609  14.4460100  0.0088504  1632.25   <2e-16 ***\nORIGIN_hex610  16.3767263  0.0035848  4568.43   <2e-16 ***\nORIGIN_hex611  13.8570078  0.0189852   729.88   <2e-16 ***\nORIGIN_hex612  11.1939871  0.3333357    33.58   <2e-16 ***\nORIGIN_hex630  12.8832477  0.0426954   301.75   <2e-16 ***\nORIGIN_hex631  13.7389440  0.0193323   710.67   <2e-16 ***\nORIGIN_hex632  14.5843536  0.0078518  1857.44   <2e-16 ***\nORIGIN_hex633  16.7509020  0.0026053  6429.50   <2e-16 ***\nORIGIN_hex635  13.7698094  0.0243534   565.41   <2e-16 ***\nORIGIN_hex636  14.0465507  0.0147709   950.96   <2e-16 ***\nORIGIN_hex653  15.1477946  0.0090213  1679.11   <2e-16 ***\nORIGIN_hex654  13.5044102  0.0163302   826.96   <2e-16 ***\nORIGIN_hex655  15.9138666  0.0037338  4262.07   <2e-16 ***\nORIGIN_hex656  17.0421969  0.0024877  6850.46   <2e-16 ***\nORIGIN_hex657  14.1249047  0.0160263   881.36   <2e-16 ***\nORIGIN_hex658  11.5526564  0.1042640   110.80   <2e-16 ***\nORIGIN_hex659  11.6618867  0.1259944    92.56   <2e-16 ***\nORIGIN_hex676  13.1128246  0.0308937   424.45   <2e-16 ***\nORIGIN_hex677  13.7890874  0.0202401   681.28   <2e-16 ***\nORIGIN_hex678  14.3008878  0.0126170  1133.46   <2e-16 ***\nORIGIN_hex679  17.4601841  0.0020968  8327.21   <2e-16 ***\nORIGIN_hex680  17.0395798  0.0025523  6676.14   <2e-16 ***\nORIGIN_hex682  12.2808837  0.0548946   223.72   <2e-16 ***\nORIGIN_hex683  12.0900955  0.0743390   162.63   <2e-16 ***\nORIGIN_hex684  11.8563240  0.0848272   139.77   <2e-16 ***\nORIGIN_hex685   8.9833170  0.5773513    15.56   <2e-16 ***\nORIGIN_hex686  11.5676592  0.0747510   154.75   <2e-16 ***\nORIGIN_hex699  10.4491373  0.1313109    79.58   <2e-16 ***\nORIGIN_hex700  13.4186583  0.0285311   470.32   <2e-16 ***\nORIGIN_hex701  13.6753378  0.0145808   937.90   <2e-16 ***\nORIGIN_hex702  17.0617057  0.0022618  7543.49   <2e-16 ***\nORIGIN_hex704  10.7997386  0.1348450    80.09   <2e-16 ***\nORIGIN_hex707  12.6492861  0.0596665   212.00   <2e-16 ***\nORIGIN_hex708  13.8405687  0.0335975   411.95   <2e-16 ***\nORIGIN_hex709  11.6500712  0.0780946   149.18   <2e-16 ***\nORIGIN_hex723  13.5799869  0.0211508   642.06   <2e-16 ***\nORIGIN_hex724  13.5214548  0.0174834   773.39   <2e-16 ***\nORIGIN_hex725  17.7292538  0.0016107 11007.33   <2e-16 ***\nORIGIN_hex726  16.4391001  0.0032320  5086.30   <2e-16 ***\nORIGIN_hex728  10.5300048  0.2294184    45.90   <2e-16 ***\nORIGIN_hex732  11.2759165  0.1601324    70.42   <2e-16 ***\nORIGIN_hex733  11.6748272  0.0860733   135.64   <2e-16 ***\nORIGIN_hex734  14.3484245  0.0361091   397.36   <2e-16 ***\nORIGIN_hex745  13.1506271  0.0299961   438.41   <2e-16 ***\nORIGIN_hex746  13.9500697  0.0162751   857.14   <2e-16 ***\nORIGIN_hex747  13.6751132  0.0122037  1120.57   <2e-16 ***\nORIGIN_hex748  16.9458633  0.0022698  7465.66   <2e-16 ***\nORIGIN_hex750  10.9992468  0.0975975   112.70   <2e-16 ***\nORIGIN_hex756  11.6500430  0.2132054    54.64   <2e-16 ***\nORIGIN_hex769  12.4013625  0.0324955   381.63   <2e-16 ***\nORIGIN_hex770  14.6577552  0.0104970  1396.37   <2e-16 ***\nORIGIN_hex771  15.5741050  0.0045217  3444.28   <2e-16 ***\nORIGIN_hex772  16.0490461  0.0035928  4466.97   <2e-16 ***\nORIGIN_hex774  14.2124407  0.0170390   834.11   <2e-16 ***\nORIGIN_hex791  13.4524324  0.0233018   577.31   <2e-16 ***\nORIGIN_hex792  12.0926289  0.0341792   353.80   <2e-16 ***\nORIGIN_hex793  13.2188081  0.0166994   791.57   <2e-16 ***\nORIGIN_hex794  17.0312099  0.0021822  7804.65   <2e-16 ***\nORIGIN_hex815  14.5974747  0.0091525  1594.92   <2e-16 ***\nORIGIN_hex816  16.3133513  0.0029467  5536.20   <2e-16 ***\nORIGIN_hex817  16.0191688  0.0034294  4671.08   <2e-16 ***\nORIGIN_hex818  17.0719879  0.0021719  7860.49   <2e-16 ***\nORIGIN_hex820  16.4705171  0.0047062  3499.74   <2e-16 ***\nORIGIN_hex837  14.7737840  0.0103482  1427.67   <2e-16 ***\nORIGIN_hex838  12.6069131  0.0220644   571.37   <2e-16 ***\nORIGIN_hex839  16.7452815  0.0024176  6926.47   <2e-16 ***\nORIGIN_hex840  15.1311580  0.0054197  2791.90   <2e-16 ***\nORIGIN_hex862  15.3190950  0.0050217  3050.58   <2e-16 ***\nORIGIN_hex863  15.7311018  0.0053263  2953.49   <2e-16 ***\nORIGIN_hex864  16.8048984  0.0024181  6949.55   <2e-16 ***\nORIGIN_hex866  12.5637593  0.0323114   388.83   <2e-16 ***\nORIGIN_hex883  14.0140174  0.0184800   758.34   <2e-16 ***\nORIGIN_hex886  15.7045707  0.0036452  4308.28   <2e-16 ***\nORIGIN_hex887  12.9253806  0.0492822   262.27   <2e-16 ***\nORIGIN_hex889  13.2004910  0.0253700   520.32   <2e-16 ***\nORIGIN_hex906  12.7557863  0.0291070   438.24   <2e-16 ***\nORIGIN_hex907  15.7719119  0.0054491  2894.39   <2e-16 ***\nORIGIN_hex909  15.6502548  0.0038093  4108.42   <2e-16 ***\nORIGIN_hex910  16.1350668  0.0032478  4968.03   <2e-16 ***\nORIGIN_hex912  15.7958370  0.0051347  3076.28   <2e-16 ***\nORIGIN_hex930  16.7446455  0.0028023  5975.27   <2e-16 ***\nORIGIN_hex931  16.3869138  0.0024673  6641.61   <2e-16 ***\nORIGIN_hex932  16.6165690  0.0023672  7019.55   <2e-16 ***\nORIGIN_hex933  16.4761355  0.0034252  4810.31   <2e-16 ***\nORIGIN_hex935  17.1840643  0.0025082  6851.15   <2e-16 ***\nORIGIN_hex936  11.8598025  0.0753867   157.32   <2e-16 ***\nORIGIN_hex940  12.5834177  0.0478505   262.97   <2e-16 ***\nORIGIN_hex952  12.9495621  0.0249851   518.29   <2e-16 ***\nORIGIN_hex954  14.2709761  0.0071352  2000.08   <2e-16 ***\nORIGIN_hex955  15.9095214  0.0031246  5091.66   <2e-16 ***\nORIGIN_hex956  16.3532498  0.0028176  5804.01   <2e-16 ***\nORIGIN_hex957  15.8361625  0.0050786  3118.20   <2e-16 ***\nORIGIN_hex958  17.3266243  0.0024060  7201.37   <2e-16 ***\nORIGIN_hex959  15.9325566  0.0045326  3515.12   <2e-16 ***\nORIGIN_hex974  11.7895191  0.0725569   162.49   <2e-16 ***\nORIGIN_hex976  15.6847923  0.0038175  4108.60   <2e-16 ***\nORIGIN_hex977  16.0164134  0.0028213  5677.06   <2e-16 ***\nORIGIN_hex978  16.6677817  0.0024670  6756.18   <2e-16 ***\nORIGIN_hex979  16.5400997  0.0033467  4942.18   <2e-16 ***\nORIGIN_hex980  16.0461657  0.0051764  3099.85   <2e-16 ***\nORIGIN_hex981  16.3318135  0.0031170  5239.61   <2e-16 ***\nORIGIN_hex982  17.1137509  0.0027615  6197.30   <2e-16 ***\nORIGIN_hex983  16.3493999  0.0056522  2892.59   <2e-16 ***\nORIGIN_hex985  13.2969512  0.0413262   321.76   <2e-16 ***\nORIGIN_hex986  13.8604377  0.0181837   762.25   <2e-16 ***\nORIGIN_hex998  12.8707858  0.0247161   520.75   <2e-16 ***\nORIGIN_hex999  15.4782558  0.0049505  3126.57   <2e-16 ***\nORIGIN_hex1000 14.4479438  0.0060376  2392.99   <2e-16 ***\nORIGIN_hex1001 16.7371874  0.0024839  6738.37   <2e-16 ***\nORIGIN_hex1002 16.0646765  0.0028642  5608.74   <2e-16 ***\nORIGIN_hex1003 16.8943966  0.0026724  6321.88   <2e-16 ***\nORIGIN_hex1004 16.7689529  0.0030448  5507.42   <2e-16 ***\nORIGIN_hex1005 17.0103765  0.0021472  7922.03   <2e-16 ***\nORIGIN_hex1006 16.5491496  0.0035758  4628.06   <2e-16 ***\nORIGIN_hex1008 12.8714888  0.0334642   384.63   <2e-16 ***\nORIGIN_hex1009 14.7025720  0.0102817  1429.97   <2e-16 ***\nORIGIN_hex1020 12.5737955  0.0303224   414.67   <2e-16 ***\nORIGIN_hex1021 13.7920011  0.0184941   745.75   <2e-16 ***\nORIGIN_hex1022 15.2442783  0.0049333  3090.11   <2e-16 ***\nORIGIN_hex1023 15.1590797  0.0050865  2980.28   <2e-16 ***\nORIGIN_hex1024 15.8319708  0.0036694  4314.56   <2e-16 ***\nORIGIN_hex1025 16.0855118  0.0033919  4742.36   <2e-16 ***\nORIGIN_hex1026 15.8061885  0.0040794  3874.63   <2e-16 ***\nORIGIN_hex1027 16.7971079  0.0024519  6850.54   <2e-16 ***\nORIGIN_hex1028 15.9349744  0.0042657  3735.64   <2e-16 ***\nORIGIN_hex1029 17.6142201  0.0028831  6109.41   <2e-16 ***\nORIGIN_hex1030 14.1059333  0.0147744   954.76   <2e-16 ***\nORIGIN_hex1031 12.7348694  0.0265398   479.84   <2e-16 ***\nORIGIN_hex1044 12.6947984  0.0262750   483.15   <2e-16 ***\nORIGIN_hex1045 14.2683187  0.0098086  1454.68   <2e-16 ***\nORIGIN_hex1046 13.8871355  0.0109848  1264.21   <2e-16 ***\nORIGIN_hex1047 16.2571596  0.0038191  4256.81   <2e-16 ***\nORIGIN_hex1048 17.0649621  0.0019387  8802.40   <2e-16 ***\nORIGIN_hex1049 15.9638254  0.0050562  3157.27   <2e-16 ***\nORIGIN_hex1050 15.3128402  0.0047208  3243.71   <2e-16 ***\nORIGIN_hex1051 15.2557283  0.0052736  2892.85   <2e-16 ***\nORIGIN_hex1052 14.2474666  0.0103460  1377.10   <2e-16 ***\nORIGIN_hex1053 14.5911592  0.0087018  1676.79   <2e-16 ***\nORIGIN_hex1054 13.5045992  0.0210091   642.80   <2e-16 ***\nORIGIN_hex1055 14.1177980  0.0131384  1074.55   <2e-16 ***\nORIGIN_hex1067 15.6406525  0.0040834  3830.31   <2e-16 ***\nORIGIN_hex1068 15.4125161  0.0043590  3535.79   <2e-16 ***\nORIGIN_hex1069 14.1868748  0.0094031  1508.74   <2e-16 ***\nORIGIN_hex1070 16.7808444  0.0022294  7527.06   <2e-16 ***\nORIGIN_hex1073 16.2283217  0.0029808  5444.27   <2e-16 ***\nORIGIN_hex1074 13.7843521  0.0121748  1132.21   <2e-16 ***\nORIGIN_hex1075 15.7775836  0.0047079  3351.31   <2e-16 ***\nORIGIN_hex1076 13.3823613  0.0201222   665.05   <2e-16 ***\nORIGIN_hex1077 11.6242667  0.0451421   257.50   <2e-16 ***\nORIGIN_hex1078 11.8252993  0.0610957   193.55   <2e-16 ***\nORIGIN_hex1090 15.3337579  0.0060568  2531.64   <2e-16 ***\nORIGIN_hex1091 15.8522547  0.0033817  4687.60   <2e-16 ***\nORIGIN_hex1092 14.0091298  0.0103999  1347.04   <2e-16 ***\nORIGIN_hex1093 15.2652660  0.0050722  3009.62   <2e-16 ***\nORIGIN_hex1094 15.8072881  0.0037904  4170.33   <2e-16 ***\nORIGIN_hex1096 14.2570784  0.0084232  1692.60   <2e-16 ***\nORIGIN_hex1097 16.5825710  0.0027261  6082.80   <2e-16 ***\nORIGIN_hex1099 13.9657920  0.0178607   781.93   <2e-16 ***\nORIGIN_hex1100 15.6538758  0.0055387  2826.29   <2e-16 ***\nORIGIN_hex1101 16.2202244  0.0063687  2546.86   <2e-16 ***\nORIGIN_hex1112 15.5476982  0.0048991  3173.60   <2e-16 ***\nORIGIN_hex1113 16.1592413  0.0027249  5930.19   <2e-16 ***\nORIGIN_hex1114 16.3416561  0.0029453  5548.45   <2e-16 ***\nORIGIN_hex1116 13.7509964  0.0103874  1323.81   <2e-16 ***\nORIGIN_hex1117 16.0968730  0.0035373  4550.56   <2e-16 ***\nORIGIN_hex1118 14.6132695  0.0069028  2117.00   <2e-16 ***\nORIGIN_hex1119 17.1609589  0.0019477  8810.74   <2e-16 ***\nORIGIN_hex1123 17.2100923  0.0025057  6868.34   <2e-16 ***\nORIGIN_hex1124 14.5285797  0.0131341  1106.17   <2e-16 ***\nORIGIN_hex1135 15.0019889  0.0054040  2776.09   <2e-16 ***\nORIGIN_hex1136 16.5467352  0.0025572  6470.56   <2e-16 ***\nORIGIN_hex1137 17.6096388  0.0016190 10876.63   <2e-16 ***\nORIGIN_hex1138 14.4264638  0.0177345   813.47   <2e-16 ***\nORIGIN_hex1139 15.3620906  0.0055673  2759.36   <2e-16 ***\nORIGIN_hex1140 13.7308116  0.0109918  1249.19   <2e-16 ***\nORIGIN_hex1141 15.5857256  0.0042098  3702.26   <2e-16 ***\nORIGIN_hex1142 16.0087523  0.0037879  4226.28   <2e-16 ***\nORIGIN_hex1143 16.9134651  0.0030258  5589.77   <2e-16 ***\nORIGIN_hex1145 12.3282313  0.0450044   273.93   <2e-16 ***\nORIGIN_hex1148 18.5297275  0.0016929 10945.62   <2e-16 ***\nORIGIN_hex1158 14.1571616  0.0089210  1586.94   <2e-16 ***\nORIGIN_hex1159 16.2707569  0.0025547  6368.90   <2e-16 ***\nORIGIN_hex1160 15.0361464  0.0050369  2985.19   <2e-16 ***\nORIGIN_hex1162 15.5999397  0.0038254  4077.99   <2e-16 ***\nORIGIN_hex1163 14.9561137  0.0061427  2434.78   <2e-16 ***\nORIGIN_hex1165 16.2706873  0.0033230  4896.32   <2e-16 ***\nORIGIN_hex1169 15.9056586  0.0059548  2671.09   <2e-16 ***\nORIGIN_hex1170 16.2185133  0.0035238  4602.52   <2e-16 ***\nORIGIN_hex1181 14.7008011  0.0065836  2232.93   <2e-16 ***\nORIGIN_hex1182 10.5942756  0.1458697    72.63   <2e-16 ***\nORIGIN_hex1183 15.2076708  0.0046203  3291.50   <2e-16 ***\nORIGIN_hex1184 14.1685466  0.0082741  1712.39   <2e-16 ***\nORIGIN_hex1185 16.1091563  0.0029712  5421.80   <2e-16 ***\nORIGIN_hex1187 13.7415596  0.0184062   746.57   <2e-16 ***\nORIGIN_hex1188 17.3633984  0.0021212  8185.50   <2e-16 ***\nORIGIN_hex1189 16.4010262  0.0041516  3950.58   <2e-16 ***\nORIGIN_hex1191 14.6440599  0.0148360   987.07   <2e-16 ***\nORIGIN_hex1193 16.8671147  0.0024284  6945.69   <2e-16 ***\nORIGIN_hex1194 16.8597199  0.0030454  5536.04   <2e-16 ***\nORIGIN_hex1203 14.6879560  0.0065742  2234.17   <2e-16 ***\nORIGIN_hex1204 13.1363533  0.0150861   870.76   <2e-16 ***\nORIGIN_hex1205 15.7818704  0.0036349  4341.81   <2e-16 ***\nORIGIN_hex1206 15.0446800  0.0055523  2709.64   <2e-16 ***\nORIGIN_hex1207 14.3097190  0.0076853  1861.96   <2e-16 ***\nORIGIN_hex1208 14.7755389  0.0083792  1763.37   <2e-16 ***\nORIGIN_hex1210 15.6970726  0.0065581  2393.52   <2e-16 ***\nORIGIN_hex1211 14.9741697  0.0121610  1231.32   <2e-16 ***\nORIGIN_hex1215 15.7857034  0.0056759  2781.19   <2e-16 ***\nORIGIN_hex1216 17.0922838  0.0024700  6919.93   <2e-16 ***\nORIGIN_hex1217 12.6640904  0.0356660   355.07   <2e-16 ***\nORIGIN_hex1226 16.0822255  0.0035742  4499.53   <2e-16 ***\nORIGIN_hex1228 15.8299594  0.0037332  4240.37   <2e-16 ***\nORIGIN_hex1229 14.6641604  0.0106984  1370.68   <2e-16 ***\nORIGIN_hex1231 14.9649353  0.0049752  3007.89   <2e-16 ***\nORIGIN_hex1237 14.1870457  0.0152497   930.32   <2e-16 ***\nORIGIN_hex1239 16.4293390  0.0029629  5544.99   <2e-16 ***\nORIGIN_hex1240 16.1295662  0.0050972  3164.38   <2e-16 ***\nORIGIN_hex1249 12.8669988  0.0227988   564.37   <2e-16 ***\nORIGIN_hex1250 15.0131050  0.0048040  3125.14   <2e-16 ***\nORIGIN_hex1251 15.9847869  0.0032330  4944.32   <2e-16 ***\nORIGIN_hex1252 13.7505848  0.0122062  1126.53   <2e-16 ***\nORIGIN_hex1253 16.4512906  0.0028185  5836.85   <2e-16 ***\nORIGIN_hex1261 14.2069029  0.0155050   916.28   <2e-16 ***\nORIGIN_hex1262 18.1581327  0.0015730 11543.85   <2e-16 ***\nORIGIN_hex1263 16.6917194  0.0042822  3897.91   <2e-16 ***\nORIGIN_hex1272 15.1148817  0.0053281  2836.82   <2e-16 ***\nORIGIN_hex1273 15.5052955  0.0043599  3556.32   <2e-16 ***\nORIGIN_hex1274 13.7048963  0.0096642  1418.11   <2e-16 ***\nORIGIN_hex1275 14.1308290  0.0078127  1808.71   <2e-16 ***\nORIGIN_hex1283 12.1624556  0.0596668   203.84   <2e-16 ***\nORIGIN_hex1285 16.5341989  0.0031199  5299.56   <2e-16 ***\nORIGIN_hex1286 15.6353457  0.0063930  2445.70   <2e-16 ***\nORIGIN_hex1294 15.1704676  0.0054835  2766.56   <2e-16 ***\nORIGIN_hex1295 14.8258947  0.0093080  1592.82   <2e-16 ***\nORIGIN_hex1296 14.0200666  0.0137728  1017.95   <2e-16 ***\nORIGIN_hex1297 16.4644130  0.0023111  7123.91   <2e-16 ***\nORIGIN_hex1298 13.9657111  0.0108967  1281.64   <2e-16 ***\nORIGIN_hex1299 14.7528773  0.0058790  2509.41   <2e-16 ***\nORIGIN_hex1305 12.9606454  0.0418289   309.85   <2e-16 ***\nORIGIN_hex1307 14.7416795  0.0098822  1491.74   <2e-16 ***\nORIGIN_hex1308 17.0142574  0.0024189  7033.99   <2e-16 ***\nORIGIN_hex1309 16.4474009  0.0046667  3524.43   <2e-16 ***\nORIGIN_hex1319 13.8946694  0.0127002  1094.05   <2e-16 ***\nORIGIN_hex1320 15.1677482  0.0042576  3562.52   <2e-16 ***\nORIGIN_hex1321 14.2746423  0.0077120  1850.96   <2e-16 ***\nORIGIN_hex1322 14.7327023  0.0072450  2033.51   <2e-16 ***\nORIGIN_hex1331 17.0513564  0.0026170  6515.71   <2e-16 ***\nORIGIN_hex1332 16.9308780  0.0026989  6273.19   <2e-16 ***\nORIGIN_hex1333 15.1302945  0.0099369  1522.64   <2e-16 ***\nORIGIN_hex1340 14.0060324  0.0090019  1555.90   <2e-16 ***\nORIGIN_hex1342 14.5953833  0.0054036  2701.07   <2e-16 ***\nORIGIN_hex1343 14.6071627  0.0065182  2240.99   <2e-16 ***\nORIGIN_hex1345 15.1819393  0.0049026  3096.70   <2e-16 ***\nORIGIN_hex1352 13.6842795  0.0275830   496.11   <2e-16 ***\nORIGIN_hex1353 14.1450906  0.0153570   921.08   <2e-16 ***\nORIGIN_hex1354 17.4671451  0.0020357  8580.42   <2e-16 ***\nORIGIN_hex1355 16.2742081  0.0038677  4207.71   <2e-16 ***\nORIGIN_hex1356  8.2754984  0.5000014    16.55   <2e-16 ***\nORIGIN_hex1363 13.8216148  0.0209145   660.86   <2e-16 ***\nORIGIN_hex1364 14.4483946  0.0063404  2278.79   <2e-16 ***\nORIGIN_hex1365 15.4306568  0.0035822  4307.58   <2e-16 ***\nORIGIN_hex1366 16.4335077  0.0023347  7038.83   <2e-16 ***\nORIGIN_hex1368 14.0807681  0.0081702  1723.44   <2e-16 ***\nORIGIN_hex1377 17.1964006  0.0026902  6392.17   <2e-16 ***\nORIGIN_hex1378 16.9816083  0.0029928  5674.16   <2e-16 ***\nORIGIN_hex1379 15.3765270  0.0061083  2517.34   <2e-16 ***\nORIGIN_hex1380 11.1964031  0.1324589    84.53   <2e-16 ***\nORIGIN_hex1386 14.9693130  0.0047713  3137.38   <2e-16 ***\nORIGIN_hex1387 15.3945092  0.0034411  4473.75   <2e-16 ***\nORIGIN_hex1388 14.8548801  0.0051029  2911.08   <2e-16 ***\nORIGIN_hex1389 14.6439981  0.0054325  2695.64   <2e-16 ***\nORIGIN_hex1398 12.9895116  0.0300083   432.86   <2e-16 ***\nORIGIN_hex1400 16.5708643  0.0032464  5104.39   <2e-16 ***\nORIGIN_hex1401 16.3283536  0.0036494  4474.30   <2e-16 ***\nORIGIN_hex1402 14.1151001  0.0112057  1259.63   <2e-16 ***\nORIGIN_hex1409 15.9468394  0.0031632  5041.35   <2e-16 ***\nORIGIN_hex1410 15.3503962  0.0041856  3667.39   <2e-16 ***\nORIGIN_hex1411 15.9046467  0.0029455  5399.61   <2e-16 ***\nORIGIN_hex1413 15.5168370  0.0039554  3922.97   <2e-16 ***\nORIGIN_hex1414 14.7871832  0.0058065  2546.66   <2e-16 ***\nORIGIN_hex1421 12.3220956  0.0686905   179.39   <2e-16 ***\nORIGIN_hex1424 16.7362819  0.0029558  5662.20   <2e-16 ***\nORIGIN_hex1426 13.7553008  0.0166896   824.19   <2e-16 ***\nORIGIN_hex1432 15.7398005  0.0036167  4351.93   <2e-16 ***\nORIGIN_hex1433 15.5188447  0.0035031  4430.01   <2e-16 ***\nORIGIN_hex1434 15.1918823  0.0065036  2335.92   <2e-16 ***\nORIGIN_hex1435 12.7667922  0.0176195   724.58   <2e-16 ***\nORIGIN_hex1436 14.4098891  0.0061076  2359.33   <2e-16 ***\nORIGIN_hex1443 13.6109698  0.0235434   578.12   <2e-16 ***\nORIGIN_hex1444 12.6822387  0.0527183   240.57   <2e-16 ***\nORIGIN_hex1447 14.8911460  0.0121755  1223.04   <2e-16 ***\nORIGIN_hex1448 15.2744997  0.0060215  2536.67   <2e-16 ***\nORIGIN_hex1455 14.7387030  0.0054057  2726.50   <2e-16 ***\nORIGIN_hex1456 15.5284407  0.0032216  4820.14   <2e-16 ***\nORIGIN_hex1457 15.2106189  0.0037757  4028.52   <2e-16 ***\nORIGIN_hex1458 12.4914317  0.0216502   576.97   <2e-16 ***\nORIGIN_hex1460 14.2934313  0.0089620  1594.89   <2e-16 ***\nORIGIN_hex1466 12.7423472  0.0357804   356.13   <2e-16 ***\nORIGIN_hex1470 16.1664183  0.0038665  4181.18   <2e-16 ***\nORIGIN_hex1471 16.8841121  0.0033830  4990.90   <2e-16 ***\nORIGIN_hex1476 12.8292255  0.0390575   328.47   <2e-16 ***\nORIGIN_hex1477 15.4179983  0.0065287  2361.58   <2e-16 ***\nORIGIN_hex1478 16.0053302  0.0030649  5222.05   <2e-16 ***\nORIGIN_hex1479 16.3469033  0.0022620  7226.64   <2e-16 ***\nORIGIN_hex1480 13.4294603  0.0134672   997.20   <2e-16 ***\nORIGIN_hex1482 15.0565031  0.0053308  2824.41   <2e-16 ***\nORIGIN_hex1483 11.6471003  0.0420145   277.22   <2e-16 ***\nORIGIN_hex1488 10.8385227  0.0867185   124.98   <2e-16 ***\nORIGIN_hex1489 15.0370956  0.0072825  2064.82   <2e-16 ***\nORIGIN_hex1492 13.9401766  0.0177627   784.80   <2e-16 ***\nORIGIN_hex1493 17.3725025  0.0020591  8436.90   <2e-16 ***\nORIGIN_hex1494 15.8283917  0.0052498  3015.05   <2e-16 ***\nORIGIN_hex1501 15.9617692  0.0028907  5521.76   <2e-16 ***\nORIGIN_hex1502 15.0063441  0.0040042  3747.65   <2e-16 ***\nORIGIN_hex1503 14.1620271  0.0073222  1934.13   <2e-16 ***\nORIGIN_hex1504 14.4879201  0.0058491  2476.95   <2e-16 ***\nORIGIN_hex1507 12.2192144  0.0396713   308.01   <2e-16 ***\nORIGIN_hex1511 11.6537469  0.0431287   270.21   <2e-16 ***\nORIGIN_hex1512 16.4152440  0.0038804  4230.28   <2e-16 ***\nORIGIN_hex1513 12.7383251  0.0257354   494.97   <2e-16 ***\nORIGIN_hex1514 11.5271067  0.0549782   209.67   <2e-16 ***\nORIGIN_hex1516 16.4921933  0.0029356  5617.93   <2e-16 ***\nORIGIN_hex1517 15.3979975  0.0059111  2604.91   <2e-16 ***\nORIGIN_hex1522 11.5279805  0.1036995   111.17   <2e-16 ***\nORIGIN_hex1524 16.0285779  0.0030507  5254.06   <2e-16 ***\nORIGIN_hex1525 16.4276261  0.0021813  7531.09   <2e-16 ***\nORIGIN_hex1526 13.6177627  0.0179695   757.83   <2e-16 ***\nORIGIN_hex1528 15.6839814  0.0033971  4616.93   <2e-16 ***\nORIGIN_hex1533 14.8352403  0.0075730  1958.96   <2e-16 ***\nORIGIN_hex1535 14.2871771  0.0121527  1175.63   <2e-16 ***\nORIGIN_hex1536 12.9805515  0.0196615   660.20   <2e-16 ***\nORIGIN_hex1537 15.4671657  0.0050753  3047.51   <2e-16 ***\nORIGIN_hex1538 15.2051672  0.0060205  2525.55   <2e-16 ***\nORIGIN_hex1539 15.8873616  0.0041700  3809.96   <2e-16 ***\nORIGIN_hex1547 14.3137414  0.0065359  2190.03   <2e-16 ***\nORIGIN_hex1548 15.8984096  0.0028261  5625.62   <2e-16 ***\nORIGIN_hex1549 15.1626952  0.0034971  4335.79   <2e-16 ***\nORIGIN_hex1550 14.0367043  0.0061265  2291.14   <2e-16 ***\nORIGIN_hex1551 14.6160974  0.0069584  2100.49   <2e-16 ***\nORIGIN_hex1552 12.4370220  0.0333375   373.06   <2e-16 ***\nORIGIN_hex1553  8.9971106  0.3333354    26.99   <2e-16 ***\nORIGIN_hex1555 14.5694030  0.0074341  1959.81   <2e-16 ***\nORIGIN_hex1556 15.1459000  0.0058132  2605.45   <2e-16 ***\nORIGIN_hex1558 12.2953111  0.0556567   220.91   <2e-16 ***\nORIGIN_hex1559 11.9695770  0.0359662   332.80   <2e-16 ***\nORIGIN_hex1560 15.0898454  0.0072767  2073.72   <2e-16 ***\nORIGIN_hex1561 17.1913245  0.0021585  7964.35   <2e-16 ***\nORIGIN_hex1562 15.9082637  0.0042015  3786.34   <2e-16 ***\nORIGIN_hex1563 13.3620043  0.0213131   626.94   <2e-16 ***\nORIGIN_hex1570 15.0278805  0.0041142  3652.65   <2e-16 ***\nORIGIN_hex1571 14.9815984  0.0040157  3730.78   <2e-16 ***\nORIGIN_hex1572 13.9957821  0.0066040  2119.30   <2e-16 ***\nORIGIN_hex1573 14.2289259  0.0068347  2081.88   <2e-16 ***\nORIGIN_hex1574 13.5243561  0.0157078   861.00   <2e-16 ***\nORIGIN_hex1577 15.4027653  0.0041027  3754.30   <2e-16 ***\nORIGIN_hex1578 14.7558730  0.0064437  2289.97   <2e-16 ***\nORIGIN_hex1579 14.4818296  0.0082450  1756.44   <2e-16 ***\nORIGIN_hex1582 17.0384093  0.0022441  7592.69   <2e-16 ***\nORIGIN_hex1583 16.1391634  0.0034228  4715.24   <2e-16 ***\nORIGIN_hex1584 15.8477046  0.0041068  3858.92   <2e-16 ***\nORIGIN_hex1585 16.9586169  0.0029705  5708.96   <2e-16 ***\nORIGIN_hex1593 12.0012284  0.0491029   244.41   <2e-16 ***\nORIGIN_hex1594 14.1430915  0.0130857  1080.81   <2e-16 ***\nORIGIN_hex1595 12.9303944  0.0112638  1147.96   <2e-16 ***\nORIGIN_hex1596 14.0675328  0.0059814  2351.87   <2e-16 ***\nORIGIN_hex1597 14.6437495  0.0068383  2141.44   <2e-16 ***\nORIGIN_hex1598 14.1079004  0.0081009  1741.52   <2e-16 ***\nORIGIN_hex1599 14.7303597  0.0050856  2896.50   <2e-16 ***\nORIGIN_hex1600 15.3606896  0.0039680  3871.12   <2e-16 ***\nORIGIN_hex1601 15.5537010  0.0052368  2970.06   <2e-16 ***\nORIGIN_hex1602 15.7545579  0.0046115  3416.35   <2e-16 ***\nORIGIN_hex1603 13.8244718  0.0242919   569.10   <2e-16 ***\nORIGIN_hex1605 14.4403814  0.0119499  1208.41   <2e-16 ***\nORIGIN_hex1606 16.3942772  0.0026614  6160.00   <2e-16 ***\nORIGIN_hex1607 16.9514848  0.0023781  7128.22   <2e-16 ***\nORIGIN_hex1608 16.3428110  0.0049748  3285.11   <2e-16 ***\nORIGIN_hex1609 14.5525696  0.0156259   931.31   <2e-16 ***\nORIGIN_hex1616 14.9711144  0.0039464  3793.61   <2e-16 ***\nORIGIN_hex1617 13.3763488  0.0091535  1461.34   <2e-16 ***\nORIGIN_hex1618 14.2388041  0.0050420  2824.03   <2e-16 ***\nORIGIN_hex1619 15.1023454  0.0037551  4021.78   <2e-16 ***\nORIGIN_hex1621 13.9636701  0.0079057  1766.28   <2e-16 ***\nORIGIN_hex1622 13.4395620  0.0095250  1410.98   <2e-16 ***\nORIGIN_hex1623 14.9511059  0.0054759  2730.32   <2e-16 ***\nORIGIN_hex1624 16.3322936  0.0028606  5709.45   <2e-16 ***\nORIGIN_hex1625 16.3876316  0.0027990  5854.91   <2e-16 ***\nORIGIN_hex1626 14.8350885  0.0074845  1982.12   <2e-16 ***\nORIGIN_hex1628 16.7522172  0.0027788  6028.65   <2e-16 ***\nORIGIN_hex1629 17.4692210  0.0017894  9762.44   <2e-16 ***\nORIGIN_hex1630 16.4381043  0.0040779  4031.03   <2e-16 ***\nORIGIN_hex1632 15.6719331  0.0134534  1164.90   <2e-16 ***\nORIGIN_hex1639 13.3190579  0.0129986  1024.65   <2e-16 ***\nORIGIN_hex1640 14.3228646  0.0049425  2897.90   <2e-16 ***\nORIGIN_hex1641 13.3946245  0.0086405  1550.21   <2e-16 ***\nORIGIN_hex1642 12.5497381  0.0309129   405.97   <2e-16 ***\nORIGIN_hex1643 14.9280007  0.0041037  3637.68   <2e-16 ***\nORIGIN_hex1644 16.0293515  0.0024464  6552.18   <2e-16 ***\nORIGIN_hex1645 15.4774204  0.0041995  3685.55   <2e-16 ***\nORIGIN_hex1646 15.0854158  0.0051543  2926.76   <2e-16 ***\nORIGIN_hex1647 15.7085127  0.0032982  4762.69   <2e-16 ***\nORIGIN_hex1648 15.7742766  0.0039581  3985.30   <2e-16 ***\nORIGIN_hex1649 15.5038064  0.0042408  3655.86   <2e-16 ***\nORIGIN_hex1652 17.2652168  0.0023021  7499.63   <2e-16 ***\nORIGIN_hex1653 17.5364523  0.0021396  8196.32   <2e-16 ***\nORIGIN_hex1662 13.3840990  0.0082900  1614.49   <2e-16 ***\nORIGIN_hex1663 14.3976062  0.0045438  3168.63   <2e-16 ***\nORIGIN_hex1664 14.4945268  0.0044614  3248.84   <2e-16 ***\nORIGIN_hex1665 14.0378423  0.0065468  2144.22   <2e-16 ***\nORIGIN_hex1666 15.1367775  0.0037276  4060.74   <2e-16 ***\nORIGIN_hex1667 16.6437951  0.0019578  8501.41   <2e-16 ***\nORIGIN_hex1668 14.1927236  0.0065548  2165.24   <2e-16 ***\nORIGIN_hex1669 16.7848734  0.0022978  7304.80   <2e-16 ***\nORIGIN_hex1670 16.4854131  0.0022263  7404.94   <2e-16 ***\nORIGIN_hex1671 17.0972991  0.0020287  8427.66   <2e-16 ***\nORIGIN_hex1672 13.7189112  0.0126292  1086.29   <2e-16 ***\nORIGIN_hex1674 16.9684478  0.0027772  6110.00   <2e-16 ***\nORIGIN_hex1675 17.3642170  0.0022284  7792.15   <2e-16 ***\nORIGIN_hex1686 13.0838097  0.0086244  1517.06   <2e-16 ***\nORIGIN_hex1687 13.3124301  0.0080788  1647.83   <2e-16 ***\nORIGIN_hex1688 15.2288911  0.0034641  4396.15   <2e-16 ***\nORIGIN_hex1689 14.9288845  0.0045386  3289.30   <2e-16 ***\nORIGIN_hex1690 15.0258823  0.0043810  3429.76   <2e-16 ***\nORIGIN_hex1691 15.9538842  0.0027633  5773.49   <2e-16 ***\nORIGIN_hex1692 16.1530931  0.0025663  6294.33   <2e-16 ***\nORIGIN_hex1693 15.7651726  0.0040787  3865.24   <2e-16 ***\nORIGIN_hex1694 15.5687228  0.0035670  4364.70   <2e-16 ***\nORIGIN_hex1695 13.4435689  0.0144744   928.78   <2e-16 ***\nORIGIN_hex1698 16.4769055  0.0035336  4662.93   <2e-16 ***\nORIGIN_hex1699 16.4865792  0.0045347  3635.67   <2e-16 ***\nORIGIN_hex1709 12.3048834  0.0193693   635.28   <2e-16 ***\nORIGIN_hex1710 13.7442713  0.0057857  2375.55   <2e-16 ***\nORIGIN_hex1711 14.2116954  0.0080235  1771.26   <2e-16 ***\nORIGIN_hex1712 15.8025200  0.0028791  5488.64   <2e-16 ***\nORIGIN_hex1713 15.8897257  0.0027179  5846.28   <2e-16 ***\nORIGIN_hex1714 15.8213213  0.0028961  5463.03   <2e-16 ***\nORIGIN_hex1715 15.2931770  0.0039314  3889.96   <2e-16 ***\nORIGIN_hex1716 16.9995953  0.0018702  9089.60   <2e-16 ***\nORIGIN_hex1718 14.5948934  0.0080757  1807.26   <2e-16 ***\nORIGIN_hex1721 17.0390466  0.0031240  5454.26   <2e-16 ***\nORIGIN_hex1732 12.3346115  0.0188906   652.95   <2e-16 ***\nORIGIN_hex1733 12.4853009  0.0120466  1036.41   <2e-16 ***\nORIGIN_hex1734 13.9314985  0.0056233  2477.47   <2e-16 ***\nORIGIN_hex1735 14.9259312  0.0042715  3494.34   <2e-16 ***\nORIGIN_hex1736 15.5630321  0.0035835  4342.92   <2e-16 ***\nORIGIN_hex1737 16.0708907  0.0026326  6104.61   <2e-16 ***\nORIGIN_hex1738 15.3001778  0.0055905  2736.82   <2e-16 ***\nORIGIN_hex1739 16.5492581  0.0023806  6951.78   <2e-16 ***\nORIGIN_hex1740 16.3799489  0.0029186  5612.20   <2e-16 ***\nORIGIN_hex1744 15.8227552  0.0077464  2042.60   <2e-16 ***\nORIGIN_hex1755 10.9835727  0.0437018   251.33   <2e-16 ***\nORIGIN_hex1756 13.7658363  0.0060939  2258.96   <2e-16 ***\nORIGIN_hex1757 13.5372841  0.0085019  1592.27   <2e-16 ***\nORIGIN_hex1758 14.9329305  0.0059213  2521.91   <2e-16 ***\nORIGIN_hex1759 17.0427895  0.0025085  6793.95   <2e-16 ***\nORIGIN_hex1760 15.5119300  0.0036975  4195.30   <2e-16 ***\nORIGIN_hex1761 14.6387843  0.0178991   817.85   <2e-16 ***\nORIGIN_hex1762 16.8053384  0.0021859  7688.17   <2e-16 ***\nORIGIN_hex1764 15.0768544  0.0064643  2332.32   <2e-16 ***\nORIGIN_hex1765 12.8306697  0.0300664   426.75   <2e-16 ***\nORIGIN_hex1767 14.3664145  0.0133747  1074.15   <2e-16 ***\nORIGIN_hex1777 12.2091058  0.0464358   262.93   <2e-16 ***\nORIGIN_hex1778 12.1030151  0.0275083   439.98   <2e-16 ***\nORIGIN_hex1779 12.5646892  0.0173727   723.25   <2e-16 ***\nORIGIN_hex1780 14.4046173  0.0046445  3101.42   <2e-16 ***\nORIGIN_hex1781 14.5618499  0.0046131  3156.65   <2e-16 ***\nORIGIN_hex1782 15.8710505  0.0028605  5548.35   <2e-16 ***\nORIGIN_hex1783 15.6787655  0.0068356  2293.70   <2e-16 ***\nORIGIN_hex1784 14.6018292  0.0056661  2577.07   <2e-16 ***\nORIGIN_hex1785 14.4636039  0.0112114  1290.08   <2e-16 ***\nORIGIN_hex1786 14.2362214  0.0083498  1704.97   <2e-16 ***\nORIGIN_hex1787 13.3965650  0.0235506   568.84   <2e-16 ***\nORIGIN_hex1789 11.1701519  0.0737296   151.50   <2e-16 ***\nORIGIN_hex1790 12.9148260  0.0267230   483.29   <2e-16 ***\nORIGIN_hex1802 14.2636493  0.0077616  1837.71   <2e-16 ***\nORIGIN_hex1803 13.9227761  0.0060143  2314.94   <2e-16 ***\nORIGIN_hex1804 16.5798026  0.0020863  7946.81   <2e-16 ***\nORIGIN_hex1805 16.6661489  0.0042688  3904.14   <2e-16 ***\nORIGIN_hex1806 13.8191814  0.0097941  1410.97   <2e-16 ***\nORIGIN_hex1807 14.7228645  0.0052614  2798.28   <2e-16 ***\nORIGIN_hex1808 14.6593761  0.0060011  2442.77   <2e-16 ***\nORIGIN_hex1809 14.5149749  0.0080955  1792.96   <2e-16 ***\nORIGIN_hex1810 13.2813240  0.0153758   863.78   <2e-16 ***\nORIGIN_hex1811 11.8744392  0.0403728   294.12   <2e-16 ***\nORIGIN_hex1812 10.7210577  0.0905428   118.41   <2e-16 ***\nORIGIN_hex1826 11.6450085  0.0464405   250.75   <2e-16 ***\nORIGIN_hex1827 12.9236824  0.0120883  1069.11   <2e-16 ***\nORIGIN_hex1828 16.3929363  0.0021904  7484.10   <2e-16 ***\nORIGIN_hex1829 15.8826133  0.0032186  4934.58   <2e-16 ***\nORIGIN_hex1830 16.0019138  0.0028165  5681.45   <2e-16 ***\nORIGIN_hex1831 15.3221080  0.0047878  3200.25   <2e-16 ***\nORIGIN_hex1832 14.4120329  0.0092300  1561.43   <2e-16 ***\nORIGIN_hex1833 15.3242903  0.0048566  3155.37   <2e-16 ***\nORIGIN_hex1835 12.4033536  0.0284206   436.42   <2e-16 ***\nORIGIN_hex1836 11.7151935  0.0595614   196.69   <2e-16 ***\nORIGIN_hex1848 15.5803057  0.0065765  2369.10   <2e-16 ***\nORIGIN_hex1849 15.7742531  0.0026405  5973.87   <2e-16 ***\nORIGIN_hex1850 15.3069117  0.0038867  3938.27   <2e-16 ***\nORIGIN_hex1851 15.4944931  0.0042451  3649.98   <2e-16 ***\nORIGIN_hex1852 14.6528875  0.0054294  2698.82   <2e-16 ***\nORIGIN_hex1853 16.0490229  0.0027128  5915.93   <2e-16 ***\nORIGIN_hex1854 16.5281306  0.0025842  6395.79   <2e-16 ***\nORIGIN_hex1855 14.8453300  0.0065458  2267.91   <2e-16 ***\nORIGIN_hex1856 16.6822290  0.0026860  6210.90   <2e-16 ***\nORIGIN_hex1857 16.3645973  0.0033407  4898.57   <2e-16 ***\nORIGIN_hex1858 13.2184397  0.0328652   402.20   <2e-16 ***\nORIGIN_hex1872 13.5400996  0.0111383  1215.63   <2e-16 ***\nORIGIN_hex1873 14.9747080  0.0044635  3354.94   <2e-16 ***\nORIGIN_hex1874 14.1926508  0.0067352  2107.23   <2e-16 ***\nORIGIN_hex1875 14.8479952  0.0078230  1897.98   <2e-16 ***\nORIGIN_hex1876 16.6095096  0.0020881  7954.26   <2e-16 ***\nORIGIN_hex1877 15.5997112  0.0034136  4569.87   <2e-16 ***\nORIGIN_hex1878 16.8165825  0.0022098  7610.09   <2e-16 ***\nORIGIN_hex1879 15.5798728  0.0045112  3453.56   <2e-16 ***\nORIGIN_hex1880 15.8011263  0.0044020  3589.51   <2e-16 ***\nORIGIN_hex1881 12.0871506  0.0498888   242.28   <2e-16 ***\nORIGIN_hex1894 11.2077952  0.0562651   199.20   <2e-16 ***\nORIGIN_hex1895 15.8696810  0.0026533  5981.18   <2e-16 ***\nORIGIN_hex1896 14.3882784  0.0059613  2413.62   <2e-16 ***\nORIGIN_hex1897 15.7593201  0.0030366  5189.81   <2e-16 ***\nORIGIN_hex1898 14.8949545  0.0046299  3217.12   <2e-16 ***\nORIGIN_hex1899 14.6571088  0.0076100  1926.04   <2e-16 ***\nORIGIN_hex1900 16.1075872  0.0027372  5884.64   <2e-16 ***\nORIGIN_hex1901 16.4071425  0.0025684  6388.05   <2e-16 ***\nORIGIN_hex1902 16.2908954  0.0033179  4910.01   <2e-16 ***\nORIGIN_hex1918 15.1440555  0.0044462  3406.09   <2e-16 ***\nORIGIN_hex1919 16.1920447  0.0023980  6752.35   <2e-16 ***\nORIGIN_hex1920 15.2621196  0.0036466  4185.35   <2e-16 ***\nORIGIN_hex1921 13.6261455  0.0088673  1536.67   <2e-16 ***\nORIGIN_hex1922 15.6763021  0.0033157  4727.94   <2e-16 ***\nORIGIN_hex1924 17.0104431  0.0021861  7781.05   <2e-16 ***\nORIGIN_hex1925 16.9438485  0.0035926  4716.36   <2e-16 ***\nORIGIN_hex1926 16.1038289  0.0044635  3607.91   <2e-16 ***\nORIGIN_hex1940 14.9534977  0.0053527  2793.66   <2e-16 ***\nORIGIN_hex1941 15.9602300  0.0026857  5942.76   <2e-16 ***\nORIGIN_hex1942 15.1478705  0.0039144  3869.76   <2e-16 ***\nORIGIN_hex1943 15.3980694  0.0034141  4510.15   <2e-16 ***\nORIGIN_hex1944 13.7498136  0.0090945  1511.88   <2e-16 ***\nORIGIN_hex1945 15.8172574  0.0032093  4928.63   <2e-16 ***\nORIGIN_hex1946 16.0388451  0.0028861  5557.37   <2e-16 ***\nORIGIN_hex1947 16.2553919  0.0028982  5608.84   <2e-16 ***\nORIGIN_hex1948 16.7072517  0.0027548  6064.75   <2e-16 ***\nORIGIN_hex1965 15.2004505  0.0037147  4092.01   <2e-16 ***\nORIGIN_hex1966 15.8845305  0.0027094  5862.72   <2e-16 ***\nORIGIN_hex1967 14.7081315  0.0047629  3088.06   <2e-16 ***\nORIGIN_hex1968 16.4259780  0.0025198  6518.87   <2e-16 ***\nORIGIN_hex1969 16.1382065  0.0027995  5764.69   <2e-16 ***\nORIGIN_hex1970 16.4952846  0.0023545  7005.96   <2e-16 ***\nORIGIN_hex1971 15.6058968  0.0042469  3674.63   <2e-16 ***\nORIGIN_hex1972 16.1143076  0.0044480  3622.85   <2e-16 ***\nORIGIN_hex1986 14.0408170  0.0102702  1367.14   <2e-16 ***\nORIGIN_hex1987 15.1792693  0.0040372  3759.86   <2e-16 ***\nORIGIN_hex1988 15.7598428  0.0029696  5307.00   <2e-16 ***\nORIGIN_hex1989 14.5148955  0.0055512  2614.71   <2e-16 ***\nORIGIN_hex1990 13.4008334  0.0120979  1107.70   <2e-16 ***\nORIGIN_hex1991 15.7759269  0.0033790  4668.84   <2e-16 ***\nORIGIN_hex1992 16.7792116  0.0019950  8410.63   <2e-16 ***\nORIGIN_hex1993 16.3478658  0.0029231  5592.59   <2e-16 ***\nORIGIN_hex1994 16.3095119  0.0027895  5846.66   <2e-16 ***\nORIGIN_hex1995 17.0114591  0.0039999  4252.95   <2e-16 ***\nORIGIN_hex2010 14.9400693  0.0048928  3053.48   <2e-16 ***\nORIGIN_hex2011 15.5202859  0.0030695  5056.22   <2e-16 ***\nORIGIN_hex2012 14.2022377  0.0069433  2045.47   <2e-16 ***\nORIGIN_hex2013 14.1772843  0.0075930  1867.14   <2e-16 ***\nORIGIN_hex2014 12.3902020  0.0429304   288.61   <2e-16 ***\nORIGIN_hex2015 16.4670381  0.0024960  6597.30   <2e-16 ***\nORIGIN_hex2016 16.3802269  0.0024933  6569.66   <2e-16 ***\nORIGIN_hex2017 16.5787072  0.0024634  6729.90   <2e-16 ***\nORIGIN_hex2018 15.8674346  0.0039204  4047.40   <2e-16 ***\nORIGIN_hex2019 15.9301774  0.0059823  2662.90   <2e-16 ***\nORIGIN_hex2032 13.3759749  0.0174110   768.25   <2e-16 ***\nORIGIN_hex2033 15.4148959  0.0052046  2961.76   <2e-16 ***\nORIGIN_hex2035 15.4179329  0.0037051  4161.32   <2e-16 ***\nORIGIN_hex2036 14.3551949  0.0127194  1128.60   <2e-16 ***\nORIGIN_hex2038 16.1520636  0.0035284  4577.76   <2e-16 ***\nORIGIN_hex2039 16.0068488  0.0032476  4928.82   <2e-16 ***\nORIGIN_hex2040 16.7769657  0.0022157  7571.86   <2e-16 ***\nORIGIN_hex2041 17.0965192  0.0022577  7572.42   <2e-16 ***\nORIGIN_hex2042 14.3896257  0.0167428   859.45   <2e-16 ***\nORIGIN_hex2056 15.4656188  0.0035634  4340.08   <2e-16 ***\nORIGIN_hex2057 16.0039083  0.0026316  6081.44   <2e-16 ***\nORIGIN_hex2058 16.5615004  0.0021514  7697.92   <2e-16 ***\nORIGIN_hex2059 14.1366118  0.0126395  1118.44   <2e-16 ***\nORIGIN_hex2060 13.8982478  0.0194731   713.72   <2e-16 ***\nORIGIN_hex2061 12.8831974  0.0215185   598.71   <2e-16 ***\nORIGIN_hex2062 16.2491691  0.0034205  4750.57   <2e-16 ***\nORIGIN_hex2063 16.4381168  0.0026684  6160.28   <2e-16 ***\nORIGIN_hex2064 16.8115574  0.0024087  6979.59   <2e-16 ***\nORIGIN_hex2065 14.7661102  0.0096617  1528.32   <2e-16 ***\nORIGIN_hex2079 14.9782796  0.0044569  3360.68   <2e-16 ***\nORIGIN_hex2080 16.1700629  0.0026248  6160.49   <2e-16 ***\nORIGIN_hex2081 15.6644606  0.0035870  4367.05   <2e-16 ***\nORIGIN_hex2085 15.9583452  0.0040560  3934.52   <2e-16 ***\nORIGIN_hex2086 17.4996690  0.0018455  9482.57   <2e-16 ***\nORIGIN_hex2087 16.9276555  0.0022429  7547.35   <2e-16 ***\nORIGIN_hex2088 16.2279544  0.0059466  2728.94   <2e-16 ***\nORIGIN_hex2102 15.9137065  0.0029015  5484.57   <2e-16 ***\nORIGIN_hex2103 15.3601228  0.0037992  4042.95   <2e-16 ***\nORIGIN_hex2104 14.8665955  0.0124332  1195.71   <2e-16 ***\nORIGIN_hex2105 13.1494681  0.0203423   646.41   <2e-16 ***\nORIGIN_hex2107 13.6095658  0.0235683   577.45   <2e-16 ***\nORIGIN_hex2109 16.2230540  0.0036715  4418.70   <2e-16 ***\nORIGIN_hex2110 16.1560131  0.0033241  4860.33   <2e-16 ***\nORIGIN_hex2111 13.7017484  0.0217892   628.83   <2e-16 ***\nORIGIN_hex2112 12.9837149  0.0581357   223.34   <2e-16 ***\nORIGIN_hex2125 15.1710176  0.0042537  3566.58   <2e-16 ***\nORIGIN_hex2126 15.7515170  0.0032816  4800.02   <2e-16 ***\nORIGIN_hex2127 16.7638728  0.0023238  7214.13   <2e-16 ***\nORIGIN_hex2130 14.2630344  0.0141680  1006.71   <2e-16 ***\nORIGIN_hex2131  9.9656264  0.3015133    33.05   <2e-16 ***\nORIGIN_hex2132 15.6217171  0.0044487  3511.49   <2e-16 ***\nORIGIN_hex2133 16.4308126  0.0040535  4053.51   <2e-16 ***\nORIGIN_hex2134 11.8657049  0.0971344   122.16   <2e-16 ***\nORIGIN_hex2148 15.8963424  0.0033049  4809.88   <2e-16 ***\nORIGIN_hex2149 13.7377893  0.0127170  1080.27   <2e-16 ***\nORIGIN_hex2150 15.4818623  0.0071581  2162.84   <2e-16 ***\nORIGIN_hex2151 15.1966821  0.0044586  3408.39   <2e-16 ***\nORIGIN_hex2154 11.2057551  0.0848265   132.10   <2e-16 ***\nORIGIN_hex2156 16.1859310  0.0038080  4250.48   <2e-16 ***\nORIGIN_hex2171 15.1359764  0.0042883  3529.59   <2e-16 ***\nORIGIN_hex2172 14.9399644  0.0049959  2990.45   <2e-16 ***\nORIGIN_hex2173 15.7530462  0.0039170  4021.67   <2e-16 ***\nORIGIN_hex2174 14.0413271  0.0119557  1174.44   <2e-16 ***\nORIGIN_hex2177 12.6953573  0.0373886   339.55   <2e-16 ***\nORIGIN_hex2178 14.9832081  0.0074143  2020.84   <2e-16 ***\nORIGIN_hex2179 16.1806975  0.0065939  2453.89   <2e-16 ***\nORIGIN_hex2195 14.5012490  0.0085266  1700.70   <2e-16 ***\nORIGIN_hex2196 16.6215135  0.0026459  6281.90   <2e-16 ***\nORIGIN_hex2197 16.2581759  0.0033299  4882.44   <2e-16 ***\nORIGIN_hex2200 14.0166258  0.0162114   864.61   <2e-16 ***\nORIGIN_hex2202 16.1065268  0.0070074  2298.49   <2e-16 ***\nORIGIN_hex2217 15.2705634  0.0041892  3645.26   <2e-16 ***\nORIGIN_hex2218 16.3142940  0.0024388  6689.36   <2e-16 ***\nORIGIN_hex2219 16.5294380  0.0034031  4857.19   <2e-16 ***\nORIGIN_hex2221 10.1729654  0.3015136    33.74   <2e-16 ***\nORIGIN_hex2222 12.8529568  0.0267595   480.31   <2e-16 ***\nORIGIN_hex2241 14.5574023  0.0062755  2319.72   <2e-16 ***\nORIGIN_hex2242 16.6603386  0.0020852  7989.66   <2e-16 ***\nORIGIN_hex2243 15.2738379  0.0052387  2915.57   <2e-16 ***\nORIGIN_hex2244 16.7043859  0.0025964  6433.56   <2e-16 ***\nORIGIN_hex2245 15.1842609  0.0055801  2721.14   <2e-16 ***\nORIGIN_hex2246 15.4610754  0.0054492  2837.29   <2e-16 ***\nORIGIN_hex2263 15.2992358  0.0046854  3265.27   <2e-16 ***\nORIGIN_hex2264 16.2942786  0.0025121  6486.20   <2e-16 ***\nORIGIN_hex2265 16.7139703  0.0022661  7375.61   <2e-16 ***\nORIGIN_hex2266 15.6341543  0.0043869  3563.82   <2e-16 ***\nORIGIN_hex2267 16.7193327  0.0025085  6665.19   <2e-16 ***\nORIGIN_hex2268 15.4354748  0.0049534  3116.16   <2e-16 ***\nORIGIN_hex2269 16.0361696  0.0036542  4388.45   <2e-16 ***\nORIGIN_hex2287 15.2611656  0.0043280  3526.13   <2e-16 ***\nORIGIN_hex2288 16.3146884  0.0025426  6416.51   <2e-16 ***\nORIGIN_hex2289 15.2848377  0.0044383  3443.82   <2e-16 ***\nORIGIN_hex2290 16.5891041  0.0027361  6062.95   <2e-16 ***\nORIGIN_hex2291 16.5450371  0.0027966  5916.12   <2e-16 ***\nORIGIN_hex2292 16.3896091  0.0031531  5197.88   <2e-16 ***\nORIGIN_hex2293 14.3865864  0.0104741  1373.54   <2e-16 ***\nORIGIN_hex2310 16.0536532  0.0030189  5317.75   <2e-16 ***\nORIGIN_hex2311 16.3300515  0.0030587  5338.81   <2e-16 ***\nORIGIN_hex2312 16.0560810  0.0028508  5632.04   <2e-16 ***\nORIGIN_hex2313 16.5835517  0.0025239  6570.69   <2e-16 ***\nORIGIN_hex2314 15.8780983  0.0048137  3298.49   <2e-16 ***\nORIGIN_hex2315 16.4991701  0.0030226  5458.51   <2e-16 ***\nORIGIN_hex2333 15.4426495  0.0043425  3556.19   <2e-16 ***\nORIGIN_hex2334 16.4089017  0.0026106  6285.52   <2e-16 ***\nORIGIN_hex2335 13.1424595  0.0201693   651.61   <2e-16 ***\nORIGIN_hex2336 17.1493434  0.0017769  9651.37   <2e-16 ***\nORIGIN_hex2337 16.3534023  0.0030179  5418.74   <2e-16 ***\nORIGIN_hex2338 16.8512508  0.0024884  6771.94   <2e-16 ***\nORIGIN_hex2339 14.2139039  0.0268693   529.00   <2e-16 ***\nORIGIN_hex2356 16.0680173  0.0033690  4769.36   <2e-16 ***\nORIGIN_hex2357 14.5052985  0.0073218  1981.11   <2e-16 ***\nORIGIN_hex2358 15.4111982  0.0039185  3932.94   <2e-16 ***\nORIGIN_hex2359 16.5972385  0.0022671  7320.99   <2e-16 ***\nORIGIN_hex2360 14.8128192  0.0073703  2009.80   <2e-16 ***\nORIGIN_hex2361 15.5328544  0.0050405  3081.58   <2e-16 ***\nORIGIN_hex2379 14.9760137  0.0059951  2498.05   <2e-16 ***\nORIGIN_hex2380 16.5723767  0.0025107  6600.68   <2e-16 ***\nORIGIN_hex2381 15.5630162  0.0036898  4217.80   <2e-16 ***\nORIGIN_hex2382 16.1738807  0.0027632  5853.30   <2e-16 ***\nORIGIN_hex2383 15.7750397  0.0043125  3657.94   <2e-16 ***\nORIGIN_hex2384 16.7235628  0.0023160  7220.85   <2e-16 ***\nORIGIN_hex2401 12.7812572  0.0686930   186.06   <2e-16 ***\nORIGIN_hex2402 15.1974678  0.0065066  2335.70   <2e-16 ***\nORIGIN_hex2403 14.4506877  0.0066026  2188.62   <2e-16 ***\nORIGIN_hex2404 16.0273043  0.0032280  4965.11   <2e-16 ***\nORIGIN_hex2405 16.5553929  0.0023227  7127.69   <2e-16 ***\nORIGIN_hex2406 16.4144972  0.0031323  5240.43   <2e-16 ***\nORIGIN_hex2427 14.8277953  0.0059053  2510.93   <2e-16 ***\nORIGIN_hex2428 16.3143247  0.0026655  6120.54   <2e-16 ***\nORIGIN_hex2429 16.2672127  0.0027607  5892.33   <2e-16 ***\nORIGIN_hex2430 16.6743632  0.0026430  6308.92   <2e-16 ***\nORIGIN_hex2449 15.4630896  0.0044413  3481.66   <2e-16 ***\nORIGIN_hex2450 15.9080882  0.0033964  4683.87   <2e-16 ***\nORIGIN_hex2451 16.5939790  0.0023841  6960.17   <2e-16 ***\nORIGIN_hex2452 16.4667274  0.0027007  6097.18   <2e-16 ***\nORIGIN_hex2453 16.6507613  0.0055592  2995.18   <2e-16 ***\nORIGIN_hex2472 13.1217536  0.0315025   416.53   <2e-16 ***\nORIGIN_hex2473 15.1455242  0.0050780  2982.60   <2e-16 ***\nORIGIN_hex2474 15.6894907  0.0040850  3840.79   <2e-16 ***\nORIGIN_hex2475 16.2826793  0.0028767  5660.16   <2e-16 ***\nORIGIN_hex2476 16.4279631  0.0031432  5226.49   <2e-16 ***\nORIGIN_hex2495 12.8555799  0.0191177   672.45   <2e-16 ***\nORIGIN_hex2496 14.8228295  0.0068538  2162.73   <2e-16 ***\nORIGIN_hex2497 16.5349081  0.0032064  5156.86   <2e-16 ***\nORIGIN_hex2498 15.5859916  0.0044172  3528.49   <2e-16 ***\nORIGIN_hex2499 15.2362066  0.0123632  1232.38   <2e-16 ***\nORIGIN_hex2518 12.7555118  0.0439956   289.93   <2e-16 ***\nORIGIN_hex2519 11.5124090  0.0492210   233.89   <2e-16 ***\nORIGIN_hex2520 13.8704148  0.0152153   911.61   <2e-16 ***\nORIGIN_hex2521 14.4097037  0.0088256  1632.72   <2e-16 ***\nORIGIN_hex2522 15.0444840  0.0061265  2455.64   <2e-16 ***\nORIGIN_hex2523 12.8192037  0.0407398   314.66   <2e-16 ***\nORIGIN_hex2541 13.0697016  0.0240038   544.48   <2e-16 ***\nORIGIN_hex2542 14.7161248  0.0125443  1173.13   <2e-16 ***\nORIGIN_hex2543 13.9579213  0.0142801   977.44   <2e-16 ***\nORIGIN_hex2544 14.6381282  0.0083722  1748.42   <2e-16 ***\nORIGIN_hex2545 13.1731802  0.0230090   572.52   <2e-16 ***\nORIGIN_hex2567 14.3186136  0.0115691  1237.66   <2e-16 ***\nORIGIN_hex2568 13.9755161  0.0102538  1362.95   <2e-16 ***\nORIGIN_hex2569 13.3860216  0.0150432   889.84   <2e-16 ***\nORIGIN_hex2590 14.7019628  0.0098924  1486.19   <2e-16 ***\nORIGIN_hex2591 12.7640239  0.0213531   597.76   <2e-16 ***\nORIGIN_hex2592 13.0312633  0.0304495   427.96   <2e-16 ***\nORIGIN_hex2611 15.8607308  0.0053750  2950.85   <2e-16 ***\nORIGIN_hex2615 14.4758066  0.0093779  1543.61   <2e-16 ***\nORIGIN_hex2634 14.1237592  0.0130463  1082.59   <2e-16 ***\nORIGIN_hex2635 16.1389851  0.0043826  3682.53   <2e-16 ***\nORIGIN_hex2638 15.0486392  0.0083776  1796.30   <2e-16 ***\nORIGIN_hex2655 16.3903533  0.0093873  1746.01   <2e-16 ***\nORIGIN_hex2659 15.9861441  0.0057870  2762.44   <2e-16 ***\nORIGIN_hex2661 15.2504243  0.0084398  1806.96   <2e-16 ***\nORIGIN_hex2684 11.0326069  0.0737297   149.64   <2e-16 ***\nORIGIN_hex2701 15.9599291  0.0113752  1403.04   <2e-16 ***\nORIGIN_hex2706 15.6399027  0.0070253  2226.23   <2e-16 ***\nORIGIN_hex2707 15.7490278  0.0062600  2515.83   <2e-16 ***\nORIGIN_hex2729 14.5213356  0.0112439  1291.49   <2e-16 ***\nORIGIN_hex2752 14.7293378  0.0154731   951.93   <2e-16 ***\nORIGIN_hex2774 12.2722097  0.0916764   133.86   <2e-16 ***\nORIGIN_hex2820 14.4664500  0.0440435   328.46   <2e-16 ***\nORIGIN_hex2839 15.5100601  0.0195845   791.96   <2e-16 ***\nORIGIN_hex2934 13.7315078  0.0555698   247.10   <2e-16 ***\nbiz_count       0.0966665  0.0001184   816.44   <2e-16 ***\nschool_count   -0.1015326  0.0004531  -224.11   <2e-16 ***\nfin_count       0.3251755  0.0001594  2040.23   <2e-16 ***\nhc_count        0.0598109  0.0002358   253.66   <2e-16 ***\nbusstop_count   0.2550797  0.0003045   837.68   <2e-16 ***\ndist           -1.2831269  0.0001397 -9186.97   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 933854533  on 65780  degrees of freedom\nResidual deviance: 105949622  on 64956  degrees of freedom\nAIC: 106354372\n\nNumber of Fisher Scoring iterations: 7\n```\n:::\n:::\n\n:::\n\n:::{.callout-note collapse=\"true\"}\n## Destination Constrained Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate the formula dynamically\nformula_string <- paste(\"TOTAL_TRIPS ~ DESTIN_hex +\", \n                        paste(destin_var, collapse = \" + \"), \"+ dist - 1\")\n\n# Convert the string to a formula\nformula <- as.formula(formula_string)\n\ndecSIM <- glm(formula,\n              family = poisson(link = \"log\"),\n              data = flow_data_log,\n              na.action = na.exclude)\n\nwrite_rds(decSIM, \"data/rds/decSIM.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndecSIM <- read_rds(\"data/rds/decSIM.rds\")\nsummary(decSIM)\n```\n:::\n\n:::\n\n\n:::{.callout-note collapse=\"true\"}\n## Doubly Constrained Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbcSIM <- glm(formula = TOTAL_TRIPS ~ \n                ORIGIN_hex + \n                DESTIN_hex + \n                dist,\n              family = poisson(link = \"log\"),\n              data = flow_data_log,\n              na.action = na.exclude)\n\nwrite_rds(dbcSIM, \"data/rds/dbcSIM.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndbcSIM <- read_rds(\"data/rds/decSIM.rds\")\nsummary(dbcSIM)\n```\n:::\n\n:::\n\n\n\n\n##    7.2 Spatial Econometric Interaction Modelling\n\nSpatial Econometric Interaction Models extend the traditional SIM by considering econometric matters. It addresses the limitation of SIM which assumes there is independence across observations. SEIM addresses the spatial dependencies across observations and acknowledge that nearby locations might influence each other's behaviour or out comes. Additionally, SEIM handles spatial autocorrelation more effectively and addresses multicollinearity.\n\n\nThree data sets are needed to calibrate SEIM using **spflow** package:\n\n-   Spatial Weights\n\n-   Distance Matrix\n\n-   Explanatory Variables\n\n::: {.callout-note collapse=\"true\"}\n## Preparing Spatial Weights\n\nThe connectivity between traffic analytical zones can be described using contiguity, fixed distance and adaptive distance matrices.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- hex_sg2 %>% \n  filter(bus_count > 0) %>%\n  select(geometry) %>%\n  st_centroid()\n\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = FALSE))\n\nsummary(k1dists)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    750     750     750     753     750    3269 \n```\n:::\n:::\n\n\n:::{callout-tip}\n### Interpreting Summary Report\nThe largest first nearest neighbour distance is 3269m and it will be used as the upper threshold such that all k neighbours have at least one neighbour.\n:::\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Computing Spatial Weights\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentroids <- suppressWarnings({\n    st_point_on_surface(st_geometry(hex_sg2))})\n\nhexgrid_nb <- list(\n  \"by_contiguity\" = poly2nb(hex_sg2),\n  \"by_distance\" = dnearneigh(centroids, \n                             d1 = 0, d2 = 3269),\n  \"by_knn\" = knn2nb(knearneigh(centroids, 6))\n)\n\nhexgrid_nb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$by_contiguity\nNeighbour list object:\nNumber of regions: 2375 \nNumber of nonzero links: 13850 \nPercentage nonzero weights: 0.2455402 \nAverage number of links: 5.831579 \n\n$by_distance\nNeighbour list object:\nNumber of regions: 2375 \nNumber of nonzero links: 131154 \nPercentage nonzero weights: 2.325168 \nAverage number of links: 55.22274 \n\n$by_knn\nNeighbour list object:\nNumber of regions: 2375 \nNumber of nonzero links: 14250 \nPercentage nonzero weights: 0.2526316 \nAverage number of links: 6 \nNon-symmetric neighbours list\n```\n:::\n:::\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n\n## Prepare Flow Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_data1 <- flow_data %>%\n  group_by(ORIGIN_hex, DESTIN_hex) %>%\n  summarise(TOTAL_TRIPS = sum(TOTAL_TRIPS), dist = first(dist))\n```\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Prepare Explanatory Variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexplanatory <- hex_sg2 %>%\n  st_drop_geometry()\n```\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n\n## Create spflow_network-class objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_net <- spflow_network(\n  id_net = \"sg\",  # assign an id name, can give it any input\n  node_neighborhood = nb2mat(hexgrid_nb$by_distance),\n  node_data = explanatory,\n  node_key_column = \"index\"\n)\n\nhex_net\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial network nodes with id: sg\n--------------------------------------------------\nNumber of nodes: 2375\nAverage number of links per node: 55.223\nDensity of the neighborhood matrix: 2.33% (non-zero connections)\n\nData on nodes:\n     index housing_count biz_count school_count fin_count hc_count\n1        1             0         0            0         0        0\n2        2             0         0            0         0        0\n3        3             0         0            0         0        0\n4        4             0         0            0         0        0\n5        5             0         0            0         0        0\n6        6             0         0            0         0        0\n---    ---           ---       ---          ---       ---      ---\n2370  2370             0         0            0         0        0\n2371  2371             0         0            0         0        0\n2372  2372             0         0            0         0        0\n2373  2373             0         0            0         0        0\n2374  2374             0         0            0         0        0\n2375  2375             0         0            0         0        0\n     leisure_recre_count food_bev_count retail_count entertn_count bus_count\n1                      0              0            0             0         0\n2                      0              0            0             0         1\n3                      0              0            0             0         0\n4                      0              0            0             0         0\n5                      0              0            0             0         0\n6                      0              0            0             0         0\n---                  ---            ---          ---           ---       ---\n2370                   0              0            0             0         0\n2371                   0              0            0             0         0\n2372                   0              0            0             0         0\n2373                   0              0            0             0         0\n2374                   0              0            0             0         0\n2375                   0              0            0             0         0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_net_pairs <- spflow_network_pair(\n  id_orig_net = \"sg\",\n  id_dest_net = \"sg\",\n  pair_data = flow_data1,\n  orig_key_column = \"ORIGIN_hex\",\n  dest_key_column = \"DESTIN_hex\"\n)\n\nhex_net_pairs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial network pair with id: sg_sg\n--------------------------------------------------\nOrigin network id: sg (with 812 nodes)\nDestination network id: sg (with 812 nodes)\nNumber of pairs: 67502\nCompleteness of pairs: 10.24% (67502/659344)\n\nData on node-pairs:\n    DESTIN_hex ORIGIN_hex TOTAL_TRIPS    dist\n1           60          2           2 1299.04\n2           61          2          22    2250\n3           80          2          62    3000\n4           98          2         289 1984.31\n5          117          2           1 2598.08\n6          122          2          64 8112.49\n---        ---        ---         ---     ---\n11        2215       2365          32 3968.63\n21        1983       2365           7 7937.25\n31        2134       2365          26 5952.94\n41        2172       2365          47 5408.33\n51        2234       2365         154 3269.17\n61        2286       2365           4 4175.82\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_multi_net <- spflow_network_multi(hex_net, hex_net_pairs)\n\nhex_multi_net\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCollection of spatial network nodes and pairs\n--------------------------------------------------\nContains 1 spatial network nodes  \n    With id :  sg\nContains 1 spatial network pairs  \n    With id :  sg_sg\n\nAvailability of origin-destination pair information:\n\n ID_ORIG_NET ID_DEST_NET ID_NET_PAIR COMPLETENESS       C_PAIRS    C_ORIG\n          sg          sg       sg_sg        1.20% 67502/5640625 2375/2375\n    C_DEST\n 2375/2375\n```\n:::\n:::\n\n\n:::\n\n## Correlation Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate explanatory variables names\nvar_name <- explanatory %>%\n  select(-(index)) %>%\n  names()\n\n# Generate the formula dynamically\ncor_formula <- log(1 + TOTAL_TRIPS) ~ \n  bus_count + \n  housing_count + \n  biz_count + \n  school_count + \n  fin_count + \n  hc_count + \n  leisure_recre_count +\n  food_bev_count + \n  retail_count + \n  entertn_count + \n  P_(log(dist + 1))\n\ncor_mat <- pair_cor(\n  hex_multi_net, \n  spflow_formula = cor_formula, \n  add_lags_x = FALSE)\n\ncolnames(cor_mat) <- paste0(\n  substr(\n    colnames(cor_mat),1,3),\"...\")\n\ncor_image(cor_mat)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-102-1.png){width=672}\n:::\n:::\n\n\nGiven that there are no variable pairs that are very highly correlated with one another, all variables will be used to calibrate the SEIM.\n\n\n## 7.2.1    SEIM Calibration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_model <- spflow(\n  spflow_formula = log(1 + TOTAL_TRIPS) ~ \n    O_(bus_count + \n  housing_count + \n  biz_count + \n  school_count + \n  fin_count + \n  hc_count + \n  leisure_recre_count +\n  food_bev_count + \n  retail_count + \n  entertn_count) +\n    D_(bus_count + \n  housing_count + \n  biz_count + \n  school_count + \n  fin_count + \n  hc_count + \n  leisure_recre_count +\n  food_bev_count + \n  retail_count + \n  entertn_count) +\n    P_(log(dist + 1)),\n  spflow_networks = hex_multi_net)\n\nbase_model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_9)\nDependent variable: log(1 + TOTAL_TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                               est     sd   t.stat  p.val\nrho_d                        0.767  0.008  100.803  0.000\nrho_o                        0.746  0.008   98.606  0.000\nrho_w                       -0.999  0.024  -42.227  0.000\n(Intercept)                  9.831  0.132   74.487  0.000\n(Intra)                         NA     NA       NA     NA\nD_bus_count                  0.031  0.002   13.789  0.000\nD_bus_count.lag1            -0.012  0.014   -0.821  0.411\nD_housing_count              0.000  0.000   15.847  0.000\nD_housing_count.lag1         0.000  0.000    9.081  0.000\nD_biz_count                 -0.001  0.001   -0.921  0.357\nD_biz_count.lag1            -0.027  0.003   -9.068  0.000\nD_school_count               0.003  0.008    0.385  0.700\nD_school_count.lag1         -0.232  0.104   -2.220  0.026\nD_fin_count                  0.014  0.002    9.608  0.000\nD_fin_count.lag1             0.017  0.015    1.148  0.251\nD_hc_count                   0.020  0.004    5.175  0.000\nD_hc_count.lag1             -0.295  0.041   -7.128  0.000\nD_leisure_recre_count       -0.008  0.003   -2.815  0.005\nD_leisure_recre_count.lag1  -0.398  0.029  -13.530  0.000\nD_food_bev_count            -0.001  0.001   -0.570  0.569\nD_food_bev_count.lag1        0.023  0.011    2.083  0.037\nD_retail_count               0.000  0.000    3.041  0.002\nD_retail_count.lag1          0.006  0.001    9.060  0.000\nD_entertn_count              0.082  0.010    7.954  0.000\nD_entertn_count.lag1         0.286  0.090    3.193  0.001\nO_bus_count                  0.032  0.002   14.290  0.000\nO_bus_count.lag1             0.011  0.014    0.741  0.458\nO_housing_count              0.000  0.000   15.482  0.000\nO_housing_count.lag1         0.000  0.000   10.213  0.000\nO_biz_count                  0.000  0.001    0.251  0.802\nO_biz_count.lag1            -0.025  0.003   -8.117  0.000\nO_school_count               0.018  0.008    2.143  0.032\nO_school_count.lag1         -0.358  0.104   -3.436  0.001\nO_fin_count                  0.013  0.002    8.646  0.000\nO_fin_count.lag1             0.030  0.015    2.015  0.044\nO_hc_count                   0.026  0.004    6.586  0.000\nO_hc_count.lag1             -0.345  0.041   -8.346  0.000\nO_leisure_recre_count       -0.012  0.003   -4.164  0.000\nO_leisure_recre_count.lag1  -0.386  0.029  -13.191  0.000\nO_food_bev_count            -0.001  0.001   -0.918  0.359\nO_food_bev_count.lag1        0.025  0.011    2.255  0.024\nO_retail_count               0.000  0.000    1.863  0.062\nO_retail_count.lag1          0.004  0.001    6.525  0.000\nO_entertn_count              0.077  0.010    7.418  0.000\nO_entertn_count.lag1         0.455  0.089    5.084  0.000\nP_log(dist + 1)             -0.729  0.016  -45.083  0.000\n\n--------------------------------------------------\nR2_corr: 0.560786  \nObservations: 67502  \nModel coherence: Validated\n```\n:::\n:::\n\n\n### Residual diagnostics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_par <- par(mfrow = c(1, 3), \n               mar = c(2,2,2,2))\n\nspflow_moran_plots(base_model)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-104-1.png){width=672}\n:::\n:::\n\n\n\n### Visualise Fitted Values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel.df <- as_tibble(base_model@spflow_indicators) %>%\n  mutate(FITTED_Y = round(exp(FITTED),0))\n\ninter_zonal_flow <- flow_data %>%\n  left_join(model.df) %>%\n  mutate(diff = (FITTED_Y-TOTAL_TRIPS))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = inter_zonal_flow,\n                aes(x = FITTED,\n                    y = ACTUAL)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim=c(0,14),\n                  ylim=c(0,14)) + \n  labs(title = \"Observed vs. Fitted Values for SEIM\",\n       x = \"Fitted Values\", y = \"Observed Values\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03b_files/figure-html/unnamed-chunk-106-1.png){width=672}\n:::\n:::\n\n\n\n#   8.0 Prototype\n\nIn light of our class project, I aim to test the feasibility of plotting out the various commuting flow maps.\n\nSpecifically, the maps can focus on the various areas of interest and plot the flow lines originating and ending in AOIs of ranged densities.\n\nThe analytical unit could be planning area, subzone or even hexagonal.\n\nBefore diving into these analytical units, we can have a look at the general inflow and outflows from origins and destinations.\n\n# Level 1: General Perspective\n\nThe `TOTAL_TRIPS` is set to 3000 at minimum due to computational time taken to run the below code chunks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine <- filter(flowLine, TOTAL_TRIPS>=3000)\n```\n:::\n\n\nSplit outgoing and incoming flows along with the origin and destination hexagon layers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_sg2$index)\norg_hex <- filter(hex_sg2, index %in% flowLine_org$ORIGIN_hex)\n\nflowLine_dest <- filter(flowLine, DESTIN_hex %in% hex_sg2$index)\ndest_hex <- filter(hex_sg2, index %in% flowLine_dest$DESTIN_hex)\n```\n:::\n\n\n## General Outflows from Origins (Propulsive)\n\nHere, I assume that the user is interested in bus traffic flows and where buses typically leave.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_sg2, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_3000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 3000], ]\n\ntm_shape(hex_sg2) +\n  tm_borders(col = \"grey\") +\ntm_shape(org_hex_3000) + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%  \n  filter(TOTAL_TRIPS >= 3000) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Origin: Desire Lines Traffic Analysis Zones \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(2).png)\n\n## Inflows to Destinations (Attractive)\n\nThis scenario assumes that the user is interested in the popular bus destinations, i.e. `TOTAL_TRIPS` is minmally **8000** on **weekdays**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine_dest <- filter(flowLine, DESTIN_hex %in% hex_grid_bounded3$index)\ndest_hex <- filter(hex_grid_bounded3, index %in% flowLine_dest$DESTIN_hex)\n\ndest_hex_8000 <- dest_hex[dest_hex$index %in% flowLine_dest$DESTIN_hex[flowLine_dest$TOTAL_TRIPS >= 10000], ]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\ntm_shape(dest_hex_8000) + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_dest %>%  \n  filter(DAY_TYPE == \"WEEKDAY\", TOTAL_TRIPS >= 8000) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Destinations: Desire Lines with at least 8000 trips \\nbetween Traffic Analysis Zones for Weekdays \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(3).png)\n\n## Weekday vs Weekend/Holiday\n\nThis scenario simulates the user wanting to find out how do bus destinations differ on **weekends** compared to **weekdays**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\ntm_shape(dest_hex_8000) + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_dest %>%  \n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\", TOTAL_TRIPS >= 8000) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Destinations: Desire Lines with at least 8000 trips \\nbetween Traffic Analysis Zones for Weekends \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\n-   Hexagons linked to desire lines reveal that they are more popular starting or destination locations for bus rides.\n\n-   There are many trips made to destinations in the north, which is around Tuas Checkpoint.\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(4).png)\n\n## Specific Hour of the Day\n\nA user might be curious about bus traffic flows and where they start on weekdays at 8am.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_grid_bounded3, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_3000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 3000], ]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\ntm_shape(org_hex_3000) + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%  \n  filter(TOTAL_TRIPS >= 3000, TIME_PER_HOUR == 8) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Origin: Desire Lines Traffic Analysis Zones Weekdays, 8am \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(9).png)\n\nSince too many desire lines are plotted, the user can narrow the minimum number of total trips per origin-destination hexagon pair to 10000.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_grid_bounded3, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_10000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 10000], ]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\ntm_shape(org_hex_10000) + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%  \n  filter(TOTAL_TRIPS >= 10000, TIME_PER_HOUR == 8) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Origin: Desire Lines between Traffic Analysis Zones with >10000 Trips \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(4).png)\n\n# Level 2: Planning Area\n\nThe below scenario is whereby a user is interested in looking at bus trips starting from a Planning Area like Bedok at 8am on a weekday.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"view\")\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_grid_bounded3, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_3000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 3000], ]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\norg_hex_3000 %>%\n  filter(PLN_AREA_N == \"BEDOK\") %>%\ntm_shape() + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%\n  filter(ORIGIN_hex %in% org_hex_3000$index[org_hex_3000$PLN_AREA_N == \"BEDOK\"]) %>%  \n  filter(TOTAL_TRIPS >= 3000, TIME_PER_HOUR == 8) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Bedok Origin: Desire Lines between Traffic Analysis Zones with >3000 Trips \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\n-   The majority of bus trips at 8 am starting from Bedok Planning Area mostly end within the Planning Area too.\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(5).png)\n\nMultiple starting planning areas for bus trips can also be observed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"view\")\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_grid_bounded3, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_3000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 3000], ]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\norg_hex_3000 %>%\n  filter(PLN_AREA_N %in% c(\"BEDOK\", \"PUNGGOL\", \"PAYA LEBAR\")) %>%\ntm_shape() + \n  tm_fill(col = \"PLN_AREA_N\", palette = \"Dark2\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%\n  filter(ORIGIN_hex %in% org_hex_3000$index[org_hex_3000$PLN_AREA_N %in% c(\"BEDOK\", \"PUNGGOL\", \"PAYA LEBAR\")]) %>%  \n  filter(TOTAL_TRIPS >= 3000, TIME_PER_HOUR == 8) %>%\nleft_join(org_hex_3000 %>% distinct(index, PLN_AREA_N), by = c(\"ORIGIN_hex\" = \"index\")) %>%\n  tm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           col = \"PLN_AREA_N\",\n           palette = \"Dark2\",\n           scale = c(1, 2, 3, 4, 5, 7, 9),\n           alpha = 0.5\n  ) + \n  tm_layout(main.title = \"Bedok, Paya Lebar & Punggol Origin: Desire Lines between \\nTraffic Analysis Zones with >3000 Trips (Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) +\ntm_view(set.zoom.limits = c(12,30))\n```\n:::\n\n\n-   There are more origin locations at Bedok than Punggol at 8am.\n\n-   There are noticeable outgoing bus trips from Punggol to Bedok Planning Area at 8am.\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(6).png)\n\n# Level 3: Subzone\n\nThe user might also want to view bus travels at the subzone level, such as those starting from subzone Mathilda in Punggol planning area.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_grid_bounded3, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_3000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 3000], ]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\norg_hex_3000 %>%\n  filter(SUBZONE_N == \"MATILDA\") %>%\ntm_shape() + \n  tm_fill(col = \"skyblue\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%\n  filter(ORIGIN_hex %in% org_hex_3000$index[org_hex_3000$SUBZONE_N == \"MATILDA\"]) %>%  \n  filter(TOTAL_TRIPS >= 3000, TIME_PER_HOUR == 7) %>%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.5,\n           title.lwd = \"Total Trips\"\n           ) + \n  tm_layout(main.title = \"Punggol Matilda Origin: Desire Lines between Traffic Analysis Zones with >3000 Trips \\n(Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n```\n:::\n\n\n-   Between 7am and 8am, there are many trips from Matilda subzone to its immediate east hexagon neighbour that is also within the Punggol Planning Area.\n\nTown Councils have recently been pushing for silver zones which promotes elderly-friendly paths along with school zones. Traffic calming in such zones may affect bus routes and it is important to check the volume of inter Planning Area bus routes. Planners can use the multiple-subzones perspective as a proxy of the potential economic costs of constructing such zones:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"view\")\nflowLine_org <- filter(flowLine, ORIGIN_hex %in% hex_grid_bounded3$index)\norg_hex <- filter(hex_grid_bounded3, index %in% flowLine_org$ORIGIN_hex)\n\norg_hex_3000 <- org_hex[org_hex$index %in% flowLine_org$ORIGIN_hex[flowLine_org$TOTAL_TRIPS >= 3000], ]\n\norg_hex_3000 <- org_hex_3000[, c(\"index\", setdiff(names(org_hex_3000), \"index\"))]\n\nhex_grid_bounded3 <- hex_grid_bounded3[, c(\"index\", setdiff(names(hex_grid_bounded3), \"index\"))]\n\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\n  tm_fill(col = \"lightgrey\", alpha = 0.2) +\norg_hex_3000 %>%\n  filter(SUBZONE_N %in% c(\"WATERWAY EAST\", \"NORTHSHORE\", \"MATILDA\", \"PUNGGOL FIELD\", \"CONEY ISLAND\")) %>%\ntm_shape() + \n  tm_fill(col = \"SUBZONE_N\", palette = \"Dark2\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%\n  filter(ORIGIN_hex %in% org_hex_3000$index[org_hex_3000$SUBZONE_N %in% c(\"WATERWAY EAST\", \"NORTHSHORE\", \"MATILDA\", \"PUNGGOL FIELD\", \"CONEY ISLAND\")]) %>%  \n  filter(DAY_TYPE == \"WEEKDAY\",TOTAL_TRIPS >= 3000, TIME_PER_HOUR == 7) %>%\nleft_join(org_hex_3000 %>% distinct(index, SUBZONE_N), by = c(\"ORIGIN_hex\" = \"index\")) %>%\n  tm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           col = \"SUBZONE_N\",\n           palette = \"Dark2\",\n           scale = c(1, 2, 3, 4, 5, 7, 9),\n           alpha = 0.5\n  ) + \n  tm_layout(main.title = \"Punggol Subzones Origin: Desire Lines between \\nTraffic Analysis Zones with >3000 Trips (Nov '23 - Jan '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) +\ntm_view(set.zoom.limits = c(12,20))\n```\n:::\n\n\n::: callout-tip\n-   On weekdays, 7-8am, there has been a high total bus traffic of 29,460 trips from Matilda (hex 1368) to Punggol Field (hex 1390), and 29,178 trips from Punggol Field (hex 1390) to Waterway East (hex 1412).\n\n-   There is also high bus traffic of 14,581 trips within Punggol Field subzone, from hex 1390 to hex 1400. Should there be construction plans in these hexagonal areas, the relevant government agencies or even the town council can advice residents on alternative routes to go to their respective destinations.\n:::\n\nThe potential user interface for the above scenario may look like this:\n\n![](img/Commute%20Flow%20Map%20(7).png)\n\n# Validating Spatial Interaction Models\n\nAs a teaser to SIMs, users can have a look at whether the volume of bus trips could be influenced by areas of interests within the vicinity.\n\nFrom the previous map, we can see that there is a total high bus traffic of 14,581 from Punggol Field hex 1400 to Bedok North (hex 1515) from 7-8am on weekdays.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"view\")\ntm_shape(hex_grid_bounded3) +\n  tm_borders(col = \"grey\") +\norg_hex_3000 %>%\n  filter(SUBZONE_N %in% c(\"WATERWAY EAST\", \"NORTHSHORE\", \"MATILDA\", \"PUNGGOL FIELD\", \"CONEY ISLAND\")) %>%\ntm_shape() + \n  tm_fill(col = \"SUBZONE_N\", palette = \"Dark2\", alpha = 0.5) +\n  tm_borders(col = \"grey\") +\nflowLine_org %>%\n  filter(ORIGIN_hex %in% org_hex_3000$index[org_hex_3000$SUBZONE_N %in% c(\"WATERWAY EAST\", \"NORTHSHORE\", \"MATILDA\", \"PUNGGOL FIELD\", \"CONEY ISLAND\")]) %>%  \n  filter(TOTAL_TRIPS >= 3000, TIME_PER_HOUR == 7) %>%\nleft_join(org_hex_3000 %>% distinct(index, SUBZONE_N), by = c(\"ORIGIN_hex\" = \"index\")) %>%\n  tm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           col = \"SUBZONE_N\",\n           palette = \"Dark2\",\n           scale = c(1, 2, 3, 4, 5, 7, 9),\n           alpha = 0.5\n  ) + \ntm_shape(biz) +\n  tm_dots(col = \"blue\") +\ntm_layout(main.title = \"Punggol Subzones Origin: Desire Lines between \\nTraffic Analysis Zones with >3000 Trips (Nov '23 - Jan '24)\",\n          main.title.position = \"center\",\n          main.title.size = 0.6,\n          frame = TRUE) +\ntm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) +\ntm_view(set.zoom.limits = c(12,20))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n:::\n\n\n::: callout-note\n-   Perhaps on weekdays 8-9am, Bedok North hex 1515 is a popular destination for the population living in Punggol Field hex 1400 due to the numerous businesses in the former hex which is also an industrial area.\n:::\n\n![](img/Commute%20Flow%20Map%20(8).png)\n\n\n\n#   References\n\nM. Chan. Applied Spatial Interaction Models - Case Study of Singapore Public Bus Commuter Flows.\nhttps://geospatial2023.netlify.app/take_home_exercise/ex2/take_home_ex2#calibrate-spatial-econometric-interaction-model-usng-maximum-likelihood-estimation\n\nK. J. Paas, 2023. Take Home Exercise 2: A Case Study of Singapore Public Bus Commuter Flows.\nhttps://isss624-kjcpaas.netlify.app/take-home_ex2/take-home_ex2\n\nT. S. Kam. \n\n",
    "supporting": [
      "Take-home_Ex03b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.32/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}