{
  "hash": "dcd857270b782e11754659196db56c9b",
  "result": {
    "markdown": "---\ntitle: \"Spatial Econometric Interaction Model\"\nauthor: \"Victoria Grace ANN\"\nexecute: \n  warning: false\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, sf, sp, reshape2, ggplot2, ggpubr, tidyverse, stplanr, knitr, kableExtra, spdep, spflow)\n```\n:::\n\n\n# Data Imports\n\n## Bus Stops\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbusstop <- read.csv(\"data/aspatial/bus_coords_subzone_v2.csv\") %>% st_as_sf(coords=c(\"Longitude\", \"Latitude\"), crs=4326) %>%\n  st_transform(crs=3414)\n```\n:::\n\n\n## Hexagon Layer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids <- read_rds(\"C://guacodemoleh/IS415-GAA/Prototype/data/rds/hex_grid_bounded3.rds\")\n\ncolnames(hex_grids)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"PLN_AREA_N\"          \"SUBZONE_N\"           \"index\"              \n [4] \"busstop_count\"       \"housing_count\"       \"geometry\"           \n [7] \"biz_count\"           \"school_count\"        \"fin_count\"          \n[10] \"hc_count\"            \"leisure_recre_count\" \"food_bev_count\"     \n[13] \"retail_count\"        \"entertn_count\"      \n```\n:::\n:::\n\n\n## OD\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_data <- read_rds(\"C://guacodemoleh/IS415-GAA/Take-home_Ex/Take-home_Ex03/data/rds/od_data.rds\")\n\nod_data <- od_data %>%\n  group_by(ORIGIN_hex, DESTIN_hex) %>%\n  summarise(TOTAL_TRIPS = sum(TOTAL_TRIPS)) %>%\n  ungroup()\n```\n:::\n\n\n# Data Cleaning for Hexagons\n\nRemove isolated hexagons for `hex_grids`. These hexagons do not have bus stops.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_grids <- hex_grids %>%\n  filter(!(PLN_AREA_N == \"WESTERN ISLANDS\" | index %in% c(1671,1672,1673))) # Removed correctly\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_grids) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](seim_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFilter for hexagons that only have bus stops.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_busstop <- hex_grids %>%\n  filter(busstop_count > 0)\n\nnrow(hex_busstop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 830\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hex_busstop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"PLN_AREA_N\"          \"SUBZONE_N\"           \"index\"              \n [4] \"busstop_count\"       \"housing_count\"       \"geometry\"           \n [7] \"biz_count\"           \"school_count\"        \"fin_count\"          \n[10] \"hc_count\"            \"leisure_recre_count\" \"food_bev_count\"     \n[13] \"retail_count\"        \"entertn_count\"      \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(hex_busstop, \"data/rds/hex_var.rds\")\n```\n:::\n\n\n# Preparing Spatial Weights\n\nCreating the contiguity, fixed distance and adaptive distance weights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- hex_busstop %>%\n  select(geometry) %>%\n  st_centroid()\n\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = FALSE))\n\n# Print summary report\nsummary(k1dists)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  750.0   750.0   750.0   754.2   750.0  2704.2 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentroids <- suppressWarnings({\n  st_point_on_surface(st_geometry(hex_busstop))\n})\n\nhex_nb <- list(\n  #by_contiguity\" = poly2nb(hex_busstop), # can comment out \n  \"by_distance\" = dnearneigh(centroids,\n                             d1 = 0, d2 = 2705),\n  \"by_knn\" = knn2nb(knearneigh(centroids, 5))\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_nb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$by_distance\nNeighbour list object:\nNumber of regions: 830 \nNumber of nonzero links: 30110 \nPercentage nonzero weights: 4.370736 \nAverage number of links: 36.27711 \n\n$by_knn\nNeighbour list object:\nNumber of regions: 830 \nNumber of nonzero links: 4150 \nPercentage nonzero weights: 0.6024096 \nAverage number of links: 5 \nNon-symmetric neighbours list\n```\n:::\n:::\n\n\nChecking if there are indeed 7 disjointed hex clusters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hex_grids) +\n  tm_fill(col = \"pink\") +\n  tm_shape(hex_busstop) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](seim_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n-   Verified\n\nPlot spatial weights\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(hex_grids))\nplot(hex_nb$by_contiguity,\n     centroids,\n     add = T,\n     col = rgb(0,0,0,\n               alpha = 0.5))\ntitle(\"Contiguity\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(hex_grids))\nplot(hex_nb$by_distance,\n     centroids,\n     add = T,\n     col = rgb(0,0,0,\n               alpha = 0.5))\ntitle(\"Distance\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(hex_grids))\nplot(hex_nb$by_knn,\n     centroids,\n     add = T,\n     col = rgb(0,0,0,\n               alpha = 0.5))\ntitle(\"5 Nearest Neighbours\")\n```\n:::\n\n\nSave hex_nb.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(hex_nb, \"data/rds/hex_nb.rds\")\n```\n:::\n\n\n# Computing Distance Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_sp <- as(hex_busstop, \"Spatial\")\nhex_sp\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistance <- spDists(hex_sp,\n                    longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(distance, n=c(10,10))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_id <- hex_busstop$index\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(distance) <- paste0(hex_id)\nrownames(distance) <- paste0(hex_id)\n```\n:::\n\n\nCreate pivot table for OD pairs\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair <- melt(distance) %>%\n  rename(distance = value)\n\nhead(distPair)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair <- distPair %>%\n  rename(ORIGIN_hex = Var1,\n         DESTIN_hex = Var2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair$ORIGIN_hex <- as.factor(distPair$ORIGIN_hex)\n\ndistPair$DESTIN_hex <- as.factor(distPair$DESTIN_hex)\n\nflow_data <- distPair %>%\n  left_join(od_data) %>%\n  mutate(TOTAL_TRIPS = coalesce(TOTAL_TRIPS,  0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflowlines <- read_rds(\"C://guacodemoleh/IS415-GAA/Prototype/data/rds/flowlines.rds\")\nwrite_rds(flow_data, \"data/rds/hex_flow.rds\")\n```\n:::\n\n\n# Creating spflow_network-class objects\n\n## Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_nb <- read_rds(\"data/rds/hex_nb.rds\")\n\nhex_flow <- read_rds(\"data/rds/hex_flow.rds\")\n\nhex_var <- read_rds(\"data/rds/hex_var.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_net <- spflow_network(\n  id_net  = \"sg\",\n  node_neighborhood = nb2mat(hex_nb$by_knn),\n  node_data = hex_var,\n  node_key_column = \"index\"\n)\n\nhex_net\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial network nodes with id: sg\n--------------------------------------------------\nNumber of nodes: 830\nAverage number of links per node: 5\nDensity of the neighborhood matrix: 0.60% (non-zero connections)\n\nData on nodes:\n    PLN_AREA_N           SUBZONE_N index busstop_count housing_count biz_count\n1         TUAS TUAS VIEW EXTENSION    29             1             0         1\n2         TUAS           TUAS VIEW    31             1             0         1\n3         TUAS TUAS VIEW EXTENSION    39             2             0         6\n4         TUAS TUAS VIEW EXTENSION    40             2             0         0\n5         TUAS           TUAS VIEW    41             1             0        29\n6         TUAS TUAS VIEW EXTENSION    49             1             0         1\n---        ---                 ---   ---           ---           ---       ---\n825     CHANGI      CHANGI AIRPORT  1616             4             0         6\n826     CHANGI      CHANGI AIRPORT  1623             5             0        10\n827     CHANGI      CHANGI AIRPORT  1630             1             0         0\n828     CHANGI      CHANGI AIRPORT  1643             1             0         0\n829 CHANGI BAY          CHANGI BAY  1644             2             0         0\n830 CHANGI BAY          CHANGI BAY  1665             1             0         0\n    school_count fin_count hc_count leisure_recre_count food_bev_count\n1              0         0        0                   0              0\n2              0         0        0                   0              0\n3              0         0        0                   0              0\n4              0         0        0                   0              0\n5              0         0        0                   0              0\n6              0         0        0                   0              0\n---          ---       ---      ---                 ---            ---\n825            0         0        0                   0              0\n826            0         0        0                   0              0\n827            0         0        0                   0              0\n828            0         0        0                   0              0\n829            0         0        0                   2              0\n830            0         0        0                   0              0\n    retail_count entertn_count COORD_X COORD_Y\n1              0             0  103.62    1.27\n2              0             0  103.62    1.29\n3              0             0  103.62    1.27\n4              0             0  103.62    1.29\n5              3             0  103.62     1.3\n6              0             0  103.63    1.28\n---          ---           ---     ---     ---\n825            0             0     104    1.38\n826            2             0     104    1.37\n827            0             0  104.01    1.37\n828            0             0  104.01    1.37\n829            1             0  104.02    1.32\n830            0             0  104.03    1.35\n```\n:::\n:::\n\n\n### Creating `spflow_network-class` object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_net_pairs <- spflow_network_pair(\n  id_orig_net = \"sg\",\n  id_dest_net = \"sg\",\n  pair_data = hex_flow,\n  orig_key_column = \"ORIGIN_hex\",\n  dest_key_column = \"DESTIN_hex\"\n)\n\nhex_net_pairs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpatial network pair with id: sg_sg\n--------------------------------------------------\nOrigin network id: sg (with 830 nodes)\nDestination network id: sg (with 830 nodes)\nNumber of pairs: 688900\nCompleteness of pairs: 100.00% (688900/688900)\n\nData on node-pairs:\n       DESTIN_hex ORIGIN_hex distance TOTAL_TRIPS\n1              29         29        0           0\n831            31         29  2598.08           0\n1661           39         29      750           2\n2491           40         29  1984.31          22\n3321           41         29  3269.17           0\n4151           49         29     1500           0\n---           ---        ---      ---         ---\n684750       1616       1665  4683.75           7\n685580       1623       1665  3968.63          32\n686410       1630       1665  3269.17         152\n687240       1643       1665  2704.16           2\n688070       1644       1665  4175.82           4\n688900       1665       1665        0           0\n```\n:::\n:::\n\n\n## Creating `spflow_network_multi-class` object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_multi_net <- spflow_network_multi(hex_net,\n                                      hex_net_pairs)\n\nhex_multi_net\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCollection of spatial network nodes and pairs\n--------------------------------------------------\nContains 1 spatial network nodes  \n    With id :  sg\nContains 1 spatial network pairs  \n    With id :  sg_sg\n\nAvailability of origin-destination pair information:\n\n ID_ORIG_NET ID_DEST_NET ID_NET_PAIR COMPLETENESS       C_PAIRS  C_ORIG  C_DEST\n          sg          sg       sg_sg      100.00% 688900/688900 830/830 830/830\n```\n:::\n:::\n\n\n# Correlation Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_formula <- log(1 + TOTAL_TRIPS) ~\n  busstop_count +\n  housing_count +\n  biz_count +\n  school_count +\n  fin_count +\n  hc_count +\n  leisure_recre_count +\n  food_bev_count +\n  retail_count +\n  entertn_count +\n  P_(log(distance +1))\n\ncor_mat <- pair_cor(\n  hex_multi_net,\n  spflow_formula = cor_formula,\n  add_lags_x = FALSE\n)\n\ncolnames(cor_mat) <- paste0(\n  substr(\n    colnames(cor_mat), 1, 3), \"...\"\n  )\n\ncor_image(cor_mat)\n```\n:::\n\n\n# Model Calibration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_model <- spflow(\n  spflow_formula = log(1 + TOTAL_TRIPS) ~\n   O_(busstop_count +\n  housing_count +\n  biz_count +\n  school_count +\n  fin_count +\n  hc_count +\n  leisure_recre_count +\n  food_bev_count +\n  retail_count +\n  entertn_count) +\n    D_(busstop_count +\n  housing_count +\n  biz_count +\n  school_count +\n  fin_count +\n  hc_count +\n  leisure_recre_count +\n  food_bev_count +\n  retail_count +\n  entertn_count) +\n  P_(log(distance + 1)),\n  spflow_networks = hex_multi_net)\n\n\nbase_model\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(base_model)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted_values <- base_model@spflow_indicators$FITTED\nfitted_values <- as.data.frame(fitted_values)\nhex_flow_fitted <- cbind(hex_flow, fitted_values)\nwrite_rds(hex_flow_fitted,\"data/rds/hex_flow_fitted.rds\")\n```\n:::\n\n\n## Residual diagnostics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_par <- par(mfrow = c(1,3),\n               mar = c(2,2,2,2))\nspflow_moran_plots(base_model)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(old_par)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncorr_residual <- pair_cor(base_model)\ncolnames(corr_residual) <- substr(colnames(corr_residual),1,3)\ncor_image(corr_residual)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel.df <- as_tibble(base_model@spflow_indicators) %>%\n  mutate(FITTED_Y = round(exp(FITTED),0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspflow_formula <- log(1 + TOTAL_TRIPS) ~\n  O_(busstop_count +\n  housing_count +\n  biz_count +\n  school_count +\n  fin_count +\n  hc_count +\n  leisure_recre_count +\n  food_bev_count +\n  retail_count +\n  entertn_count) +\n    D_(busstop_count +\n  housing_count +\n  biz_count +\n  school_count +\n  fin_count +\n  hc_count +\n  leisure_recre_count +\n  food_bev_count +\n  retail_count +\n  entertn_count) +\n  P_(log(distance + 1))\n\nmodel_control <- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_8\"\n)\n\nmle_model8 <- spflow(\n  spflow_formula,\n  spflow_networks = hex_multi_net,\n  estimation_control = model_control\n)\n\nmle_model8\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nold_par <- par(mfrow = c(1, 3), \n               mar = c(2,2,2,2))\nspflow_moran_plots(mle_model8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninter_zonal_flow <- hex_flow %>%\n  left_join(model.df) %>%\n  mutate(diff = (FITTED_Y-TOTAL_TRIPS))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = inter_zonal_flow,\n                aes(x = FITTED,\n                    y = ACTUAL)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim=c(0,14),\n                  ylim=c(0,14)) + \n  labs(title = \"Observed vs. Fitted Values for SEIM\",\n       x = \"Fitted Values\", y = \"Observed Values\")\n```\n:::\n\n\n# Push-pull factors\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame(mle_model8@estimation_results)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert row names to a separate column\ndata <- rownames_to_column(data, var = \"Variable\")\n\n# Reshape the data\ndata <- data %>%\n  pivot_longer(cols = -Variable, names_to = \"Statistic\", values_to = \"Value\") %>%\n  mutate(Group = ifelse(grepl(\"^D_\", Variable), \"Top\", \"Bottom\"))\n\n\ndata <- data %>%\n  mutate(Group = ifelse(grepl(\"^D_\", Variable), \"Top\", \"Bottom\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntstat_data <- data %>%\n  filter(Statistic == \"t.stat\")\n\np <- ggplot(tstat_data, aes(x = Variable, y = Value, fill = Group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.5) +\n  coord_flip() +\n  labs(x = NULL, y = \"t.stat\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\np <- ggplotly(p, tooltip = c(\"Value\"))\n\np\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(data, \"data/rds/seim_est.rds\")\n```\n:::\n",
    "supporting": [
      "seim_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}