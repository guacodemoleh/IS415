{
  "hash": "d187a6e5c3200acedf7b888cdfc1866c",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 11: Calibrating Spatial Interaction Models with R\"\nauthor: \"Victoria Grace ANN\"\nexecute: \n  warning: false\n  eval: true\n  echo: true\n  freeze: true\nformat:  \n  html: \n    code-summary: \"Show the code\"\n    toc-depth: 4\ndate: \"11 March, 2024\"\ndate-modified: \"last-modified\"\neditor: visual\n---\n\n\n# Case\n\nCalibrating spatial interaction models (SIM) to determine factors affecting the public bus passenger flows during morning peak in Singapore.\n\n# Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, sf, sp,\n               performance, reshape2,\n               ggpubr, tidyverse)\n```\n:::\n\n\n-   sf is for importing and transforming geospatial data\n\n-   tidyverse is for wrangling and visualising data\n\n-   tmap is to create thematic maps\n\n# Data\n\n-   od_data.rds: weekday morning peak passenger flows at planning subzone level\n\n-   mpsz.rds: URA Master Plan 2019 Planning Subzone boundary\n\n# Computing Distance Matrix\n\nIn spatial interaction, a distance matrix is a table showing the distance between pairs of locations. The diagonal of the table should be 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(\"data/geospatial/MPSZ-2019.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex11\\data\\geospatial\\MPSZ-2019.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nmpsz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((103.8802 1....\n2        CR MULTIPOLYGON (((103.8376 1....\n3        CR MULTIPOLYGON (((103.8341 1....\n4        WR MULTIPOLYGON (((103.7125 1....\n5        CR MULTIPOLYGON (((103.8472 1....\n6        CR MULTIPOLYGON (((103.8987 1....\n7        WR MULTIPOLYGON (((103.7235 1....\n8        WR MULTIPOLYGON (((103.76 1.21...\n9        CR MULTIPOLYGON (((103.8591 1....\n10       CR MULTIPOLYGON (((103.8232 1....\n```\n:::\n:::\n\n\n## Converting from sf data.table to SPDF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sp <- as(mpsz, \"Spatial\")\nmpsz_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 103.6057, 104.0885, 1.158699, 1.470775  (xmin, xmax, ymin, ymax)\ncrs         : +proj=longlat +datum=WGS84 +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n```\n:::\n:::\n\n\n## Computing\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- spDists(mpsz_sp, \n                longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dist, n=c(10, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            [,1]        [,2]        [,3]       [,4]        [,5]       [,6]\n [1,] 0.00000000 0.035282271 0.035395901 0.18199800 0.026873554 0.01286792\n [2,] 0.03528227 0.000000000 0.002764531 0.14841704 0.008552614 0.04721046\n [3,] 0.03539590 0.002764531 0.000000000 0.14749610 0.009403137 0.04762149\n [4,] 0.18199800 0.148417042 0.147496098 0.00000000 0.156829556 0.19469772\n [5,] 0.02687355 0.008552614 0.009403137 0.15682956 0.000000000 0.03866693\n [6,] 0.01286792 0.047210462 0.047621487 0.19469772 0.038666929 0.00000000\n [7,] 0.17287059 0.146276442 0.144315837 0.06529755 0.153255555 0.18550175\n [8,] 0.13479457 0.115042375 0.112584408 0.10165987 0.120292455 0.14665912\n [9,] 0.06792530 0.071740757 0.069161116 0.16564500 0.070551911 0.07590984\n[10,] 0.05759682 0.044983619 0.042219355 0.13901073 0.047233657 0.06941848\n            [,7]       [,8]       [,9]      [,10]\n [1,] 0.17287059 0.13479457 0.06792530 0.05759682\n [2,] 0.14627644 0.11504237 0.07174076 0.04498362\n [3,] 0.14431584 0.11258441 0.06916112 0.04221936\n [4,] 0.06529755 0.10165987 0.16564500 0.13901073\n [5,] 0.15325556 0.12029246 0.07055191 0.04723366\n [6,] 0.18550175 0.14665912 0.07590984 0.06941848\n [7,] 0.00000000 0.05037607 0.13309198 0.11790777\n [8,] 0.05037607 0.00000000 0.08514690 0.07725087\n [9,] 0.13309198 0.08514690 0.00000000 0.03409883\n[10,] 0.11790777 0.07725087 0.03409883 0.00000000\n```\n:::\n:::\n\n\n-   The column and row headers are not labelled with the planning subzone codes\n\n-   The output of `dist` is a matrix object class.\n\n## Labelling column and row headers of distance matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsz_names <- mpsz$SUBZONE_C\n```\n:::\n\n\nThen attach `SUBZONE_C` to row and column for distance matrix matching ahead\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dist) <- paste0(sz_names)\nrownames(dist) <- paste0(sz_names)\n```\n:::\n\n\n## Pivot distance value by SUBZONE_C\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair <- melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Var1   Var2       dist\n1  MESZ01 MESZ01 0.00000000\n2  RVSZ05 MESZ01 0.03528227\n3  SRSZ01 MESZ01 0.03539590\n4  WISZ01 MESZ01 0.18199800\n5  MUSZ02 MESZ01 0.02687355\n6  MPSZ05 MESZ01 0.01286792\n7  WISZ03 MESZ01 0.17287059\n8  WISZ02 MESZ01 0.13479457\n9  SISZ02 MESZ01 0.06792530\n10 SISZ01 MESZ01 0.05759682\n```\n:::\n:::\n\n\n-   The intra-zonal distance is 0.\n\n## Updating intra-zonal distances\n\nReplace the intra-zonal distances of zero with 50.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Var1             Var2             dist         \n MESZ01 :   331   MESZ01 :   331   Min.   :0.001561  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.:0.064419  \n SRSZ01 :   331   SRSZ01 :   331   Median :0.107153  \n WISZ01 :   331   WISZ01 :   331   Mean   :0.110151  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:0.147771  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :0.448634  \n (Other):107906   (Other):107906                     \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistPair$dist <- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\ndistPair %>%\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Var1             Var2             dist         \n MESZ01 :   332   MESZ01 :   332   Min.   : 0.00156  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 0.06455  \n SRSZ01 :   332   SRSZ01 :   332   Median : 0.10739  \n WISZ01 :   332   WISZ01 :   332   Mean   : 0.26042  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.: 0.14824  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :50.00000  \n (Other):108232   (Other):108232                     \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}