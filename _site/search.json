[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415 Geospatial Analytics and Applications Journey",
    "section": "",
    "text": "Welcome to Geospatial Analytics and Applications!\nThis is the course website of IS415. I am studying this in AY2023/24 Term 2. You will find my coursework on this website.\n\nWhat is Geospatial Data and Analytics?\nGeospatial data refers to information including both locational and attribute data, often involving large sets of diverse data sources.\nGeospatial analytics is the process of analysing and visualising data to gain insights and predictions. It combines traditional data with location and temporal information to create data visualisations like maps, graphs and statistics, enabling a more comprehensive understanding of events and patterns. The overlaying and integration of various data layers reveal relationships and patterns within and across geospatial variables.\nSource: IBM"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "",
    "text": "Thematic mapping involves the use of map symbols to visualise selected properties of geographic features that are not naturally visible, such as population, temperature, crime rates and property prices.\nGeovisualisation works by providing graphical ideation to render a place, phenomenon or a process."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-geospatial-data-into-rstudio",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-geospatial-data-into-rstudio",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Importing Geospatial Data into RStudio",
    "text": "Importing Geospatial Data into RStudio\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nExamine the mpsz content by parsing:\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-attribute-data-into-rstudio",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-attribute-data-into-rstudio",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Importing Attribute Data into RStudio",
    "text": "Importing Attribute Data into RStudio\nAfter downloading the respopagessex2011to2020.csv file, save the file into an R dataframe, popdata.\nAccess the csv file using read_csv() in the readr package:\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nshow_col_types = FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-wrangling",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Data wrangling",
    "text": "Data wrangling\nThese are the following wrangling and transformation functions that will be used: - pivot_wider() from tidyr package - mutate(), filter(), group_by() and select() from dplyr package\nNote: Added additional argument, .groups, in the summarise() function. Error occurred initially.\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`), .groups = \"drop\") %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#joining-attribute-data-and-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#joining-attribute-data-and-geospatial-data",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Joining attribute data and geospatial data",
    "text": "Joining attribute data and geospatial data\nBefore performing the georelational join, the values in the PA and SZ fields need an uppercase conversion. The SUBZONE_N and PLN_AREA_N are already in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nThe left_join() from dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple feature dataframe.\n\nSave the changes.\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\nRDS files take less space than textual data formats like CSV, JSON. Further, RDS also reads and writes faster than those."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#method-1-plotting-a-quick-choropleth-map-using-qtm",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#method-1-plotting-a-quick-choropleth-map-using-qtm",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Method 1: Plotting a quick choropleth map using qtm()",
    "text": "Method 1: Plotting a quick choropleth map using qtm()\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#method-2-creating-a-choropleth-map-using-tmaps-elements",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#method-2-creating-a-choropleth-map-using-tmaps-elements",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Method 2: Creating a choropleth map using tmap’s elements",
    "text": "Method 2: Creating a choropleth map using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nThe following subsection explains the tmap functions used to plot these elements.\n\nDrawing a base map\nThe basic building block of tmap is tm_shape followed by one or more layer elements such as tm_fill() or tm_polygons().\ntm_shape() is used to define the input data mpsz_pop2020 and tm_polygons() is used to draw the planning subzone polygons\n\ntm_shape(mpsz_pop2020) + tm_polygons()\n\n\n\n\n\n\nDrawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020) + tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\nThe default interval bin is called “pretty”. A detailed discussion of the classification methods supported by tmap will be provided in a later sub-section.\nThe default colour scheme used is YlOrRd of ColorBrewer. More about the colour scheme can be learnt in a later section.\n\n\n\nDrawing a choropleth map using tm_fill() and tm_border()\ntm_polygons() is a wrapper of tm_fill() and tm_border(). tm_fill() shades the polygons using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\nDraw the choropleth map using tm_fill() alone,\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\nThe planning subzones are shared according to the respective dependency values.\n\ntm_boarders() is used to draw up the boundaries of the subzones:\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-classification-methods-of-tmap",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Data classification methods of tmap",
    "text": "Data classification methods of tmap\nClassification helps to group a large number of observations into data ranges or classes.\ntmap provides a total of ten data classification methods (i.e. fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, jenks).\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\nPlotting choropleth maps with built-in classification\nWithin the tm_fill() argument, the number of classes can be customised. First we will use the jenks method, which is also known as natural breaks, is based on natural groupings inherent in the data. Data is clustered into groups that minimise the within-group variance and maximises the between-group variance.\nThe following code chunk depicts a quantile data classification that uses 5 classes.\n\njenks\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"jenks\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\nequal\nNext, we will try the equal data classification method.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"equal\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\nThe distribution of jenks data classification is more evenly distributed than the equal data classification method.\n\ntmap actually has 10 data classification methods: - jenks (or natural breaks as mentioned) - equal (as mentioned) - fixed - sd - pretty (default) - quantile - kmeans - fisher - hclust - bclust\nLooking closer at… #### sd\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"sd\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\nkmeans\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"kmeans\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=10,\n          style=\"kmeans\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\nfisher\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"fisher\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\nAt a glance, using Fisher and KMeans lead to similar visualisations.\n\n\n\nhclust\nhclust is hierarchical clustering. It is a method aiming to create a hierarchy of clusters based on their similarity. Each data point starts as an individual cluster and then progressively merges or splits clusters until a stopping criterion is met.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"hclust\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=20,\n          style=\"hclust\") +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\nbclust\nbclust is bagged clustering which creates multiple subsets of the original dataset through resampling. Each subset is then used to train an individual clustering model, and the final cluster assignments are obtained by combining the results from all models.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=5,\n          style=\"bclust\") +\n  tm_borders(alpha=0.5)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n=4,\n          style=\"bclust\") +\n  tm_borders(alpha=0.5)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\n### Plotting choropleth maps with custom breaks\nBreakpoints can be set explicitly to override the default category breaks. This can be done with the help of the *breaks* argument in *tm_fill()*. For n categories, n+1 elements must be included in the *breaks*.\n\nGet descriptive statistics before setting the break points.\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n:::\nLooking at the summary statistics, the break point can be set to 0.60, 0.70, 0.80, and 0.90. The minimum and maximum breaks must also be included, which are 0 adn 100 respectively. These would translate to the breaks vector, c(0, 0.60, 0.70, 0.80, 0.90, 1.00).\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Victoria",
    "section": "",
    "text": "Check out this space soon!"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages.\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-r-packages",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, I will install and load tidyverse and sf packages.\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-the-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-the-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Plotting the Geospatial Data",
    "text": "Plotting the Geospatial Data\n\nMasterplan Subzone 2014 (URA)\n\nplot(mpsz)\n\n\n\n\nFocusing on a specific attribute,\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\nCycling Path\n\nplot(cyclingpath)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-st_geometry",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-st_geometry",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Working with st_geometry()",
    "text": "Working with st_geometry()\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\nPlotting with st_geometry()\n\nplot(st_geometry(mpsz))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-glimpse",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-glimpse",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Working with glimpse()",
    "text": "Working with glimpse()\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-head",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-head",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Working with head()",
    "text": "Working with head()\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Assigning EPSG code to a simple feature data frame",
    "text": "Assigning EPSG code to a simple feature data frame\nThe initial EPSG code of a data frame may not be the correct code for svy21, i.e. 3414. Hence, assign 3414 to the mpsz data frame:\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nCheck if the CRS is correct.\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nFrom the last line of the code chunk, the CRS for mpsz3414 is indefinitely 3414."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#transforming-the-projection-of-preschool-from-wgs84-to-svy21",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#transforming-the-projection-of-preschool-from-wgs84-to-svy21",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Transforming the projection of preschool from wgs84 to svy21",
    "text": "Transforming the projection of preschool from wgs84 to svy21\nwgs84 is inappropriate for analysis involving the use of distance and/or area measurements:\n\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPerform project transformation:\n\npreschool3414 &lt;- st_transform(preschool, crs = 3414)\n\nDisplaying the content of preschool3414 sf data frame:\n\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nPreschool is in the svy21 projected coordinate system now."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-aspatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Importing aspatial data",
    "text": "Importing aspatial data\nUse read_csv() in the readr package to import listing.csv.\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nExamine if listings.csv has been imported correctly (3483 rows and 18 columns).\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,483 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,473 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Creating a simple feature data frame from an aspatial data frame",
    "text": "Creating a simple feature data frame from an aspatial data frame\nConvert listing data frame into a simple feature data frame using st_as_sf() in sf package.\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nBreakdown of the above arguments:\n\ncoords - to provide the column name of the x-coordinates first, followed by the column name of the y-coordinates\ncrs - to provide the coordinates system in EPSG format. (Search for country EPSG codes at epsg.io)\n%&gt;% is used to nest st_transform() to transform the newly created simple feature data frame into svy21 projected coordinates system.\n\nExamine content of newly created simple feature data frame:\n\nglimpse(listings_sf)\n\nRows: 3,483\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 55, 69, 220, 85, 75, 45, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 20, 24, 47, 22, 17, 12, 133, 18, 6, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.14, 0.16, 0.31, 0.17, 0.12, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 52, 52, 5, 7, 52, 52, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 89, 89, 89, 275, 274, 89, 365, 365, 365…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 3, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…\n\n\nA new column called geometry has been added into the data frame. The longitude and latitude columns have been dropped from the data frame."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#buffering",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#buffering",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Buffering",
    "text": "Buffering\nTake for instance that the authority wants to acquire 5 metres fo reserved land on both sides of the current cycling path.\nSuch a scenario is possible if the authority is planning to upgrade an exiting cycling path.\nSkill: Determining the extent of the land required to acquire and the total land area.\n\nst_buffer() of sf package is used to compute the 5-metre buffers around cycling paths\n\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, dist=5, nQuadSegs=30)\n\n\nCalculate the area of the buffers as shown below:\n\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\n\nsum() of Base R is used to derive the total land involved in this upgrade.\n\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#point-in-polygon-count",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#point-in-polygon-count",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "Point-in-polygon count",
    "text": "Point-in-polygon count\nCase: A pre-school service group wants to find out the number of preschools in each planning subzone.\n\nIdentify preschools located inside each subzone using st_intersects. Then use length() of Base R to calculate the number of preschools that fall within each subzone.\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\nNote: st_intersects and st_intersection are two different functions.\nCheck summary statistics of newly derived PreSch Count field by using summary() as shown in the code chunk below.\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nTo list the planning subzone with the most number of preschools, the top_n() of the dplyr package is used:\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nCalculate the density of preschools by planning subzone 1. Use st_area() of sf package to get the area of each planning subzone\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\n\nTo compute the density, use mutate() in the dplyr package.\n\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/ Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Data",
    "text": "Data\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format from [Department of Statistics, Singapore] (https://singstat.gov.sg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#package",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Package",
    "text": "Package\ntmap package is used for this exercise. To install these packages in RStudio:\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#colour-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#colour-scheme",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Colour Scheme",
    "text": "Colour Scheme\ntmap also supports colour ramps. They can be defined by the analyst or preselected from the RColorBrewer package.\n\nColorBrewer palette\nThe colour of the choropleth map can be reassigned to a colour of our preference. Simply add the palette argument into tm_fill as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nTo reverse the colour shading, add a “-” prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nThe colour scheme has been reversed as depicted by the decreasing colour intensity in the legend."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#map-layouts",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Map Layouts",
    "text": "Map Layouts\nMap layout refers to the combination of all map elements into a comprehensive map. In maps, it is crucial to include their elements – title, scale bar, compass, margins and aspect ratios.\n\nMap Legend\nIn tmap, the legend options can be customised to change the placement, format and its appearance.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMap Style\nThe layout of the map can also be adjusted using tmap_style().\n\nClassic\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\nCartographic Furniture\ntmap also provides arguments to draw other important map elements like compass, scale bar and grid lines.\nTo add compass, scale and gridlines, pay attention to how tm_compass(), tm_scale_bar() and tm_grid() are used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\n by Planning Subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authority (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Drawing Small Multiple Choropleth Maps",
    "text": "Drawing Small Multiple Choropleth Maps\nSmall multiple maps, also referred as facet maps, comprise of many adjacent maps. These facets enable easier visualisation of how spatial relationships change with respect to another variable such as time.\nIn tmap, small multiple maps can be plotted in three ways: 1. Assigning multiple values to at least one of the aesthetic arguments 2. Defining a group-by variable in tm_facets(), and 3. Creating multiple stand-alone maps with tmap_arrange()\n\nAssigning multiple values to at least one of the aesthetic arguments\nSmall multiple choropleth maps can be created by defining the number of columns, ncols, in tm_fill().\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\nMultiple values can be assigned to aesthetic arguments like style and palette. The visual output of the maps will be according to the corresponding order of the argument values.\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\nDefining a group-by variable in tm_facets()\ntm_facets() can help to group categorical data like regions and subzone areas such that the generated facet maps will zoom in to the specified variable.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nCreating multiple stand-alone maps with tmap_arrange()\nThe order of the maps can be reorganised by assigning each map to a unique variable then ordering the variables using tmap_arrange().\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\nasp refers to th aspect ratio of the maps. Its default value is 0."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#mapping-spatial-objects-meeting-a-selection-criterion",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#mapping-spatial-objects-meeting-a-selection-criterion",
    "title": "Hands-on Exercise 2: Thematic Mapping and Geovisualisation with R",
    "section": "Mapping Spatial Objects Meeting a Selection Criterion",
    "text": "Mapping Spatial Objects Meeting a Selection Criterion\nMap outputs can be targeted by using selection functions to meet the selection criterion\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that considers non-stationary variables, including but not withstanding climate, demographic factors, and physical environment characteristics. GWR also models local relationships between these independent variables and the outcome of interest, i.e. dependent variable.\nThis exercise is working on building hedonic pricing models using GWR methods. The dependent variable is the condominium resale prices in 2015, and the independent variables are divided in to either structural and locational."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "These exercises train on the collection of geospatial statistical methods specially designed for measuring global and local spatial association.\nThese spatial statistics are well suited for: - detecting clusters or outliers - identifying hot spot or cold spot areas - assessing the assumptions of stationarity - identifying distances beyond which no discernible association obtains."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#overview",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Overview",
    "text": "Overview\nIn Section A, we are learning how to compute Global and Local Measure of SPatial Autocorrelation (GSLA) by using the spdep package. The aim of this exercise is to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package\ncompute Getis-Ord’s Gi-statistics for detecting hot spot and/or cold spot area by using appropriate functions of spdep package, and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Getting Started",
    "text": "Getting Started\n\nAsking ourselves\nPolicymakers need to verify if development has been evenly distributed or implemented within a county or province. Thus, this study involves the application of appropriate spatial statistical methods if the development is evenly distributed geographically.\nIf the answer to that is no, then we should observe if there is the presence of spatial clustering. If the answer to this question is yes, then we should check where are these clusters.\nWe are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Province, the People’s Republic of China.\n\n\nThe Study Area and Data\nTwo data sets will be used in this hands-on exercise:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n\nSetting the Analytical Tools\nBefore starting, ensure that spdep, sf, tmap and tidyverse packages of R are installed.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-geospatial-data",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Importing geospatial data",
    "text": "Importing geospatial data\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#updating-crs-information",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#updating-crs-information",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Updating CRS information",
    "text": "Updating CRS information\n\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\nVerify the transformed CRS\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nReveal coordinate extenets of mpsz_svy21 by using st_bbox() of the sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-aspatial-data",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Importing aspatial data",
    "text": "Importing aspatial data\n\ncondo_resale = read_csv(\"data/aspatial/condo_resale_2015.csv\")\n\nUnderstand the data structure using glimpse()\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nStatistics summary.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Converting aspatial data frame into a sf object",
    "text": "Converting aspatial data frame into a sf object\nUse st_as_sf()\n\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\n*st_transform() is used to convert the coordinates from wgs84 to svy21\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#eda-using-statistical-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#eda-using-statistical-graphics",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "EDA using statistical graphics",
    "text": "EDA using statistical graphics\nDistribution of selling price\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\nThere is a right-skewed distribution of the selling price, indicating that more condominium units were sold at lower prices.\n\nThe skewed distribution can be normalised by using log transformation. A new variable LOG_SELLING_PRICE can contain the transformed selling prices. The transformation is performed using dplyr’s mutate().\n\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nPlotting LOG_SELLING_PRICE\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-histogram-plots-distribution",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-histogram-plots-distribution",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Multiple Histogram Plots distribution",
    "text": "Multiple Histogram Plots distribution\nSmall multiple histograms, or trellis plots, are drawn using ggarrange() in the ggpubr package.\nThe code chunk below is used to create 12 histograms. ggarrange() is used to organise these histograms into a 3-columns by-4-rows small multiple plot.\n\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Drawing Statistical Point Map",
    "text": "Drawing Statistical Point Map\nUsing tmap, we can reveal the geospatial distribution of the condominium resale prices in Singapore.\nTurning on the interactive mode of tmap,\n\ntmap_mode(\"view\")\n\n\ntmap_mode(\"plot\")\n\nCreating an interactive point symbol map,\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\ntm_dots() is used instead of tm_bubbles\n\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nNow turn the R display into plot mode.\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#simple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#simple-linear-regression-method",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Simple Linear Regression Method",
    "text": "Simple Linear Regression Method\nBuild a simple linear regression model using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nlm() returns an object of class lm or for multiple responses of class c(“mlm”, “lm”).\n\nThe functions summary and anova() can be used to obtain and print a summasry and analysis of variance tables of the results. The generic accessor functions coefficients, effevts, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nLooking at the summary statistic, SELLING_PRICE, y, can be explained as:\n\\[\ny = -258121.1 + 14719x_{1}\n\\] The R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nThe best fit curve can be visualised using lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\nThe figure above reveals that there are a few statistical outliers with relatively high selling prices."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Multiple Linear Regression Method",
    "text": "Multiple Linear Regression Method\n\nVisualising relationships between independent variables\nIn order to build a more reliable multiple regression model, it is important to verify that the independent variables are not highly correlated to one another, i.e. multicolinearity. Otherwise, the quality of the model will be compromised.\nA correlation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() in R, there are many packages supporting the display of correlation matrices. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in the condo_resale data frame.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Building a hedonic pricing model using multiple linear regression",
    "text": "Building a hedonic pricing model using multiple linear regression\nUsing lm() to calibrate the multiple linear regression model\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Preparing Publication Quality Table",
    "text": "Preparing Publication Quality Table\n\nUsing olsrr\nNot all the independent variables are statistically significant. The model can be revised by removing the variables that are not statisically significant.\nCalibrate the revised model using the following code chunk,\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nusing gtsummary\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R\nThe following code chunk shows how tbl_regression is used to create a well-formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note().\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\nChecking for multicolinearity\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\nTest for Non-linearity\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data poitns are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n\nTest for Normality Assumption\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#testing-for-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#testing-for-spatial-autocorrelation",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Testing for Spatial Autocorrelation",
    "text": "Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nUse tmap package to display the distribution of the residuals on an interactive map.\n\ntmap_mode(\"view\")\n\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n*Important: Switch back to plot mode before continuing.\n\ntmap_mode(\"plot\")\n\nThe figure above reveals that there is sign of spatial autocorrelation.\nTo prove that our observation is indeed true, the Moran’s I test will be performed.\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep package will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nlm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-fixed-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-fixed-bandwidth-gwr-model",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Building Fixed Bandwidth GWR Model",
    "text": "Building Fixed Bandwidth GWR Model\n\nComputing fixed bandwidth\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach agreement.\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\nGWModel method - fixed bandwidth\n\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-01-10 15:24:54.019 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2024-01-10 15:24:54.745185 \n\n\nThe report shows that the AICc of the gwr is 42263.61 which is significantly smaller than the globel multiple linear regression model of 42967.1."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Building Adaptive Bandwidth GWR Model",
    "text": "Building Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth approach.\n\nComputing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\nConstructing the adaptive bandwidth GWRmodel\nTo calibrate the gwr-based hedonic pricing model, use the adaptive bandwidth and Gaussian kernel as shown below.\n\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nTo display the model output,\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-01-10 15:24:59.98734 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-01-10 15:25:00.821876"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Visualising GWR Output",
    "text": "Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local colinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-sdf-into-sf-data.frame",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-sdf-into-sf-data.frame",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Converting SDF into sf data.frame",
    "text": "Converting SDF into sf data.frame\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       &lt;dbl&gt; 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Visualising local R2",
    "text": "Visualising local R2\nCreating an interactive point symbol map.\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "title": "Hands-on Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Visualising coefficient estimates",
    "text": "Visualising coefficient estimates\n\ntmap_mode(\"view\")\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nBy Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#asking-ourselves",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#asking-ourselves",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Asking ourselves",
    "text": "Asking ourselves\nPolicymakers need to verify if development has been evenly distributed or implemented within a county or province. Thus, this study involves the application of appropriate spatial statistical methods if the development is evenly distributed geographically.\nIf the answer to that is no, then we should observe if there is the presence of spatial clustering. If the answer to this question is yes, then we should check where are these clusters.\nWe are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Province, the People’s Republic of China."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#the-study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#the-study-area-and-data",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "The Study Area and Data",
    "text": "The Study Area and Data\nTwo data sets will be used in this hands-on exercise:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#setting-the-analytical-tools",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#setting-the-analytical-tools",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Setting the Analytical Tools",
    "text": "Setting the Analytical Tools\nBefore starting, ensure that spdep, sf, tmap and tidyverse packages of R are installed.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-shapefiles",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-shapefiles",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Importing shapefiles",
    "text": "Importing shapefiles\nUse st_read() of the sf package to import the Hunan shapefile.\n\nhunan &lt;- st_read(dsn=\"data/geospatial\", layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-csv",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-csv",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Importing csv",
    "text": "Importing csv\nNext, import the csv file by using read_csv() of readr().\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#performing-relational-joins",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#performing-relational-joins",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Performing relational joins",
    "text": "Performing relational joins\nCheck the column headers in the csv file.\n\nnames(hunan2012)\n\n [1] \"County\"      \"City\"        \"avg_wage\"    \"deposite\"    \"FAI\"        \n [6] \"Gov_Rev\"     \"Gov_Exp\"     \"GDP\"         \"GDPPC\"       \"GIO\"        \n[11] \"Loan\"        \"NIPCR\"       \"Bed\"         \"Emp\"         \"EmpR\"       \n[16] \"EmpRT\"       \"Pri_Stu\"     \"Sec_Stu\"     \"Household\"   \"Household_R\"\n[21] \"NOIP\"        \"Pop_R\"       \"RSCG\"        \"Pop_T\"       \"Agri\"       \n[26] \"Service\"     \"Disp_Inc\"    \"RORP\"        \"ROREmp\"     \n\n\nPerform the relational join.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\nThe left_join() function from the dplyr package is used to combine two datasets, hunan and hunan2012, based on common columns, i.e.County and GDPPC . It keeps all the rows from hunan and adds matching rows from hunan2012. The result is a new dataset that includes information from both datasets.\nThe pipe operator, %&gt;%, takes the result from the left_join() step and passes it as the first argument to the next step.\nselect(1:4, 7, 15)` chooses columns 1 to 4, column 7 and column 15.\nThe output is a new dataframe containing the abovementioned columns"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Visualising Regional Development Indicator",
    "text": "Visualising Regional Development Indicator\nPrepare a basemap and choropleth map showing the distribution of GDPPC 2012 using qtm() of tmap package\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#row-standardised-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#row-standardised-weight-matrix",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Row-standardised weight matrix",
    "text": "Row-standardised weight matrix\nNext, equal weights are assigned to each neighbouring polygon. The weight will be evenly assigned using 1/nNeighbours to each county, then summing up the weighted income values.\n\nDespite the intuitiveness, polygons along the edges of the study area will base their lagged on fewer polygons and there may be an over- or under-estimation of the spatial autocorrelation.\n\nFor this exercise, the style=“W” will be used to achieve the aim of using equal weights.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe input of nb2listw() must be an object of class neighbourhood, i.e. nb.\nstyle\n\nTakes in values:\n\nB - basic binary\nW - row-standardised, i.e. sums over all links to n\nC - global-standardised, i.e. sums over all links to n\nU - proportion of C over the number of neighbours, i.e. sums over all links to unity\nS - the variance-stabilising code scheme, i.e. sums over all links to n\n\n\nzero policy\n\nWhen it is set to TRUE, weight vectors of zero length are inserted for regions without neighbours inthe neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row, t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-spatial-autocorrelation-morans-i",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Global Spatial AUtocorrelation: Moran’s I",
    "text": "Global Spatial AUtocorrelation: Moran’s I\nThis section performs Moran’s I statistics using moran.test() of spdep\n\nMoran’s I Test\nMoran’s I is a statistic measuring the spatial autocorrelation of a variable across a set of spatial units. It quantifies the degree of similarity (~+1) or dissimilarity (~-1) between neighbouring observations. The greater the degree of similarity, there is more positive spatial autocorrelation.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nIt can be inferred that there is a weak positive spatial autocorrelation in the variable GDPPC, where regions with similar values tend to be spatially clustered together.\n\n\n\nMonte Carlo Moran’s I\nMonte Carlo Moran’s I extends this measure by conducting a randomisation procedure to determine the statistical significance of the observed spatial autocorrelation. Monte Carlo Moran’s I is particularly useful when assessing whether the observed spatial autocorrelation is statistically significant or simply due to chance.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nSince p-value is 0.001, it is highly unlikely that the observed spatial autocorrelation occurred by chance, which further supports the alternative hypothesis of greater spatial correlation.\nUsing set.seed() is helpful for reproducibility. It sets a starting point, or seed, to generate the sequence of random numbers each time the seed value is used to run with the code.\n\n\n\nVisualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nlibrary(ggplot2)\n\n\n# Initialize the plot canvas\nplot.new()\n\n# Simulated Moran's I values stored in bperm$res\nsimulated_values &lt;- bperm$res\n\n# Create the histogram\nhist(simulated_values, freq = TRUE, breaks = 20, xlab = \"Simulated Moran's I\")\n\n# Add a vertical line at 0\nabline(v = 0, col = \"red\")\n\n\n\n\n\nSince the simulated values follow a normal distribution, it suggests that the simulated values follow a random pattern and there is no structured spatial autocorrelation present."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-spatial-autocorrelation-gearys",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#global-spatial-autocorrelation-gearys",
    "title": "Hands-on Exercise 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation: Geary’s",
    "text": "Global Spatial Autocorrelation: Geary’s\n\nGeary’s C test\nGeary’s C statistic, also known as the Geary’s coefficient or Geary’s ratio, is a measure of spatial autocorrelation that quantifies the similarity or dissimilarity of neighboring observations in a dataset.\nThe formula for calculating Geary’s C statistic is:\n\\[\nC = (1 / (2 * W)) * sum((x_i - x_j)^2 / w_ij * s^2)\n\\] Where:\n\nC is the Geary’s C statistic.\nW is the sum of the weights between all neighboring pairs of observations.\nx_i and x_j are the values of the variable being analyzed for observations i and j.\nw_ij is the weight between observations i and j, which represents the spatial relationship or distance between them.\ns^2 is the sample variance of the variable being analyzed. Geary’s C statistic ranges from 0 to 2, with the following interpretations:\nC close to 0 indicates strong positive spatial autocorrelation, meaning neighboring observations are very similar.\n\n\n\nC close to 1 indicates no spatial autocorrelation, meaning neighboring observations are not more similar or dissimilar than expected by chance.\nC close to 2 indicates strong negative spatial autocorrelation, meaning neighboring observations are very dissimilar.\nIn practice, the observed Geary’s C statistic is compared to the expected value under the null hypothesis of no spatial autocorrelation to assess the significance of spatial patterns in the data. Deviations from the expected value indicate the presence of spatial autocorrelation, either positive or negative, depending on the value of C.\n\nPerforming Geary’s C test requires the use of spdep’s geary.test()\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\nThere is strong evidence of positive spatial autocorrelation in GDPPC.\nThe observed Geary C statistic significantly deviates from the expectation under the null hypothesis, indicating that neighbouring observationss are more similar than expected by chance alone.\n\n\n\nComputing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nThere is strong evidence to reject the null hypothesis of no spatial autocorrelation, i.e. p-value&lt;0.05.\nHence, there is a significant positive spatial autocorrelation present.\n\n\n\nVisualising Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Packages that will be used:\n\narrow, to read and write Parquet files (format which data is in)\nlubridate, to work with time-related data more easily\ntidyverse\ntmap\nsf\n\n\n\nCode\npacman::p_load(arrow, lubridate, tidyverse, tmap, sf) \n\n\n\n\n\n\nCode\ndf &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\nCode\nhead(df)\n\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp rawlat rawlng speed bearing accuracy\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;           &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt;\n1 70014  car          android    1554943236   1.34   104.  18.9     248      3.9\n2 73573  car          android    1555582623   1.32   104.  17.7      44      4  \n3 75567  car          android    1555141026   1.33   104.  14.0      34      3.9\n4 1410   car          android    1555731693   1.26   104.  13.0     181      4  \n5 4354   car          android    1555584497   1.28   104.  14.8      93      3.9\n6 32630  car          android    1555395258   1.30   104.  23.2      73      3.9\n\n\n\nOne trajectory id, trj_id, represents one Grab ride.\nThere may be multiple repeated trj_id as the ride data is collected every minute\n\n\n\n\n\n\nCode\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp) ## $ to overwrite the variable in df\n\n\nCheck updated df\n\n\nCode\nhead(df)\n\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;\n1 70014  car          android 2019-04-11 00:40:36   1.34   104.  18.9     248\n2 73573  car          android 2019-04-18 10:17:03   1.32   104.  17.7      44\n3 75567  car          android 2019-04-13 07:37:06   1.33   104.  14.0      34\n4 1410   car          android 2019-04-20 03:41:33   1.26   104.  13.0     181\n5 4354   car          android 2019-04-18 10:48:17   1.28   104.  14.8      93\n6 32630  car          android 2019-04-16 06:14:18   1.30   104.  23.2      73\n# ℹ 1 more variable: accuracy &lt;dbl&gt;\n\n\n\npingtimestamp looks better now\n\n\n\n\n\n\nCode\n# Using lubridate\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;% \n  filter(row_number()==1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, \n                        label=TRUE,\n                        abbr=TRUE), \n         start_hr = factor(hour(pingtimestamp)), \n         day = factor(mday(pingtimestamp)))\n\n\n\n\nCode\n# head(origin_df)\n\n\n\narranges sorts out the time stamps in ascending order.\nThe first row of each trajectory data contains the trip origin’s coordinates.\nwday defines the workday.\n\n\n\n\n\n\nCode\ndest_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;% \n  filter(row_number()==1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, \n                        label=TRUE,\n                        abbr=TRUE), \n         end_hr = factor(hour(pingtimestamp)), \n         day = factor(mday(pingtimestamp)))\n\n\n\n\nCode\n# head(dest_df)\n\n\n\n\n\nThe original dataset takes up a lot of space.\n\n\nCode\nwrite_rds(origin_df,\"data/rds/origin_df.rds\")\nwrite_rds(dest_df,\"data/rds/dest_df.rds\")\n\n\n\nObject classes will be intact\nSaving data in rds format also allows the updated dataframe to be reusable"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-grab-posisi-dataset",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-grab-posisi-dataset",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Code\ndf &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\n\nCode\nhead(df)\n\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp rawlat rawlng speed bearing accuracy\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;           &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt;\n1 70014  car          android    1554943236   1.34   104.  18.9     248      3.9\n2 73573  car          android    1555582623   1.32   104.  17.7      44      4  \n3 75567  car          android    1555141026   1.33   104.  14.0      34      3.9\n4 1410   car          android    1555731693   1.26   104.  13.0     181      4  \n5 4354   car          android    1555584497   1.28   104.  14.8      93      3.9\n6 32630  car          android    1555395258   1.30   104.  23.2      73      3.9\n\n\n\nOne trajectory id, trj_id, represents one Grab ride.\nThere may be multiple repeated trj_id as the ride data is collected every minute"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#section",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#section",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Code\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp) ## $ to overwrite the variable in df\n\n\nCheck updated df\n\n\nCode\nhead(df)\n\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;\n1 70014  car          android 2019-04-11 00:40:36   1.34   104.  18.9     248\n2 73573  car          android 2019-04-18 10:17:03   1.32   104.  17.7      44\n3 75567  car          android 2019-04-13 07:37:06   1.33   104.  14.0      34\n4 1410   car          android 2019-04-20 03:41:33   1.26   104.  13.0     181\n5 4354   car          android 2019-04-18 10:48:17   1.28   104.  14.8      93\n6 32630  car          android 2019-04-16 06:14:18   1.30   104.  23.2      73\n# ℹ 1 more variable: accuracy &lt;dbl&gt;\n\n\n\npingtimestamp looks better now"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-starting-locations",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-starting-locations",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Code\n# Using lubridate\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;% \n  filter(row_number()==1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, \n                        label=TRUE,\n                        abbr=TRUE), \n         start_hr = factor(hour(pingtimestamp)), \n         day = factor(mday(pingtimestamp)))\n\n\n\n\nCode\n# head(origin_df)\n\n\n\narranges sorts out the time stamps in ascending order.\nThe first row of each trajectory data contains the trip origin’s coordinates.\nwday defines the workday."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-ending-locations",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-ending-locations",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Code\ndest_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;% \n  filter(row_number()==1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, \n                        label=TRUE,\n                        abbr=TRUE), \n         end_hr = factor(hour(pingtimestamp)), \n         day = factor(mday(pingtimestamp)))\n\n\n\n\nCode\n# head(dest_df)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#overwrite-the-dataset-with-the-new-variables",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#overwrite-the-dataset-with-the-new-variables",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "The original dataset takes up a lot of space.\n\n\nCode\nwrite_rds(origin_df,\"data/rds/origin_df.rds\")\nwrite_rds(dest_df,\"data/rds/dest_df.rds\")\n\n\n\nObject classes will be intact\nSaving data in rds format also allows the updated dataframe to be reusable"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "",
    "text": "Spatial point patterns can be seen through many events and they are not limited to human activities. When there is data captured from a location, it can be considered as a spatial point. Such spatial points help analysts to observe any statistical patterns that are significant. In this context, we will only consider the points to be on isotropic (flat) planes.\nSpatial point patterns exist in a Euclidean space which is in a 2-dimensional space. When the arrangement of the points is non-random, there should be underlying factors causing it.\n\n\n\n\n\nExpected values of spatial point patterns vary across space, like the intensity of spatial point pattern\n\nKernel Density\n\nDepending on how points you want to capture, the bandwidth can be adjusted, i.e Adaptive bandwidth\nWhen data is sparse, we can consider Fixed bandwidth\n\nQuadrat Analysis\n\nUsed more frequently in Ecology\nCount the frequency of events in each region thencalculate the intensity of events in each region\nVariance-Mean Ratio (VMR)\n\nUniform distribution, VMR ~ 0\nRandom distribution, VMR ~ 1\nCluster distribution, VMR &gt; 1\n\n\n\n\n\n\nCovariance and correlation between spatial points of different regions\nMeasured using G, K and L function.\n\nNearest Neighbour Index (NNI)\n\nRandom distribution when Mean Distance ~ 1\nClustered distribution when Mean Distance ~ 0\nUniformed distribution when Mean Distance &gt; 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#spatial-point-pattern-analysis-techniques",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#spatial-point-pattern-analysis-techniques",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "",
    "text": "Expected values of spatial point patterns vary across space, like the intensity of spatial point pattern\n\nKernel Density\n\nDepending on how points you want to capture, the bandwidth can be adjusted, i.e Adaptive bandwidth\nWhen data is sparse, we can consider Fixed bandwidth\n\nQuadrat Analysis\n\nUsed more frequently in Ecology\nCount the frequency of events in each region thencalculate the intensity of events in each region\nVariance-Mean Ratio (VMR)\n\nUniform distribution, VMR ~ 0\nRandom distribution, VMR ~ 1\nCluster distribution, VMR &gt; 1\n\n\n\n\n\n\nCovariance and correlation between spatial points of different regions\nMeasured using G, K and L function.\n\nNearest Neighbour Index (NNI)\n\nRandom distribution when Mean Distance ~ 1\nClustered distribution when Mean Distance ~ 0\nUniformed distribution when Mean Distance &gt; 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#preparation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#preparation",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Preparation",
    "text": "Preparation\n\nPackages\nLet’s use pacman() to first load the packages we will need to use. We require:\n\nsf to import and process vector geospatial data\ntmap to plot high quality (interactive) maps\nmaptools for manipulating geographic data\nspatstat for point pattern analysis\nraster to read, write, manipulate, analyse and model gridded spatial data (raster)\ntidyverse for data transformation\n\nmaptools has been deprecated so,\n\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\npacman::p_load(sf, tmap, spatstat, raster,sp, maptools, tidyverse)\n\n\n\nData\n\n\n\nName\nSource\n\n\n\n\nChild Care Location (geojson)\ndata.gov.sg\n\n\nMaster Plan 2014 Subzone Boundary (Web)\ndata.gov.sg\n\n\nCoastal Outline\nSLA"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#spatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#spatial-data-wrangling",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Spatial Data Wrangling",
    "text": "Spatial Data Wrangling\n\nImporting Spatial Data\nGeospatial data will be imported using *st_read()* from the sf package.\n\nchildcare_sf &lt;- st_read(dsn = \"data/geospatial/ChildCareServices.geojson\") %&gt;% st_transform(crs=3414)\n\nReading layer `ChildCareServices' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\geospatial\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nmpsz_sf &lt;- st_read(dsn=\"data/geospatial\", layer=\"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nprint(class(mpsz_sf))\n\n[1] \"sf\"         \"data.frame\"\n\n\n\nsg_sf &lt;- st_read(dsn = \"data/geospatial\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\nLearning from Lesson 1, we can also extract the coastal outline from the MP14 SUBZONE_WEB_PL layer.\n\nsg_sf &lt;- mpsz_sf %&gt;% st_union()\nplot(sg_sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#inspecting-and-reprojecting-crs",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#inspecting-and-reprojecting-crs",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Inspecting and Reprojecting CRS",
    "text": "Inspecting and Reprojecting CRS\nChildcare Data\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNow convert to the SVY21 Projected Coordinate System.\n\nchildcare_sf &lt;- st_transform(childcare_sf , crs = 3414)\n\nCoastal Outline Data\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nSince the ID provided is EPSG:9001 which does not match the SVY21 Projected CRS, let’s correct the CRS ID.\n\nsg_sf &lt;- st_set_crs(sg_sf,3414)\n\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nNote that there is the correct CRS now, EPSG3414.\n\nMaster Plan Subzone Inspect the CRS of mpsz_sf.\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz_sf &lt;- st_set_crs(mpsz_sf,3414)\n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nID has been set correctly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#mapping-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#mapping-geospatial-data",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Mapping Geospatial Data",
    "text": "Mapping Geospatial Data\nAfter checking the CRS of each geospatial data frame, we can plot a map to see their spatial patterns.\n\nStatic Map\n\nchildcare_sf\n\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     Name\n1   kml_1\n2   kml_2\n3   kml_3\n4   kml_4\n5   kml_5\n6   kml_6\n7   kml_7\n8   kml_8\n9   kml_9\n10 kml_10\nescription\n1                                   &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;467903&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, LIMAU GARDEN, BEDOK PARK, SINGAPORE 467903&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;APOLLO INTERNATIONAL PRESCHOOL PRIVATE LIMITED&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;0A2D85D9BC6DA78E&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n2                                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;768019&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, NORTHPOINT DRIVE, #02 - 201, NORTHPOINT CITY, SINGAPORE 768019&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;APPLE TREE PLAYHOUSE PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;BD725D1719396336&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n3                      &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;650165&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;165, BUKIT BATOK WEST AVENUE 8, #01 - 286, SINGAPORE 650165&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;Appleland Montessori Child Care Centre Pte Ltd&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;FF040EB9367BFB2E&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n4                                                                &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;103104&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;104C, DEPOT ROAD, #01 - 03, SINGAPORE 103104&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;APPLELAND PLAYHOUSE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;BB912CBA276356B3&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n5                        &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;449290&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;5000G, MARINE PARADE ROAD, #01 - 28/30, LAGUNA PARK, SINGAPORE 449290&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;APRICOT ACADEMY (LAGUNA) PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;20068306D2B9B484&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n6                                                                                    &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;589240&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;2B Hindhede Road   S(589240)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;Arise Preschool&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;B77B9CE171F312A4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n7  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;521866&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;866A Tampines Street 83, #02-01, Tampines Central Community Complex, Singapore 521866&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;Artemis Preskool @ Tampines Pte Ltd (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;870CF4E816284199&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n8                                                 &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;341115&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;115A, ALKAFF CRESCENT, #03 - 12 , SINGAPORE 341115&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;Artemis Preskool @ Woodleigh&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;463BC61A07F46A1F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n9                                      &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;159640&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;11, CHANG CHARN ROAD, #02 - 02, SHRIRO HOUSE, SINGAPORE 159640&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ARTS JUNIOR MONTESSORI  LLP&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;21D734D7CD3D5AC4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n10                                                                 &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;88702&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;10 Raeburn Park   #02-33 S(088702)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;Arts Kidz Pre-School Pte Ltd&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;E7B915330EE2F196&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n                        geometry\n1  POINT Z (40985.94 33848.38 0)\n2  POINT Z (28308.65 45530.47 0)\n3  POINT Z (17828.84 36607.36 0)\n4  POINT Z (25579.73 29221.89 0)\n5  POINT Z (38981.02 32483.41 0)\n6     POINT Z (21588.47 36307 0)\n7   POINT Z (39239.78 37501.4 0)\n8  POINT Z (32389.52 35403.72 0)\n9  POINT Z (25554.36 30090.82 0)\n10    POINT Z (28004.17 28442 0)\n\n\n\ntm_shape(sg_sf)+\n  tm_polygons() +\ntm_shape(mpsz_sf) +\n  tm_polygons() +\ntm_shape(childcare_sf) +\n  tm_dots()\n\n\n\n\nFor an interactive map,\n\ntmap_mode('view')\ntm_shape(childcare_sf)+tm_dots()\n\n\n\n\n\n\nRemember to switch the mode to plot.\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nCoverting sf Dataframes to sp Spatial* Class\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\nView information of Spatial* classes:\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\nCoverting the Spatial* Class into Generic sp Format\nspstat requires the analytical data to be in ppp object form. As there is no direct method to convert Spatial* classes to ppp object, we need to convert the Spatial* classes into an intermediate Spatial object first.\nConvert Spatial* Classes into generic sp objects.\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nCheck the sp object properties,\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\nThe variables, names, min and max values are omitted from the sp object but present in Spatial* Classes."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-generic-sp-format-into-spatstats-ppp-format",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Converting Generic sp Format into spatstat’s ppp Format",
    "text": "Converting Generic sp Format into spatstat’s ppp Format\nLet’s use as.ppp() of spatstat to convert the spatial data into object format.\nPlot childcare_ppp and examine the difference.\n\nchildcare_ppp &lt;- as.ppp(st_coordinates(childcare_sf), st_bbox(childcare_sf)) \nplot(childcare_ppp)\n\n\n\n\nSummary statistics:\n\nsummary(childcare_ppp)\n\nMarked planar point pattern:  2290 points\nAverage intensity 2.875673e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    3    4    1    7    7    1    1    1    2    1    1    1    1    2 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    4    1    1    1    1    1    5    1    2    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    2    2    1    1    1    1    1    2    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   5    1    1    2    1    1    1    1    1    1    1    2    1    1    1    4 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1   10    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    4    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1   10 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n  10   10    1    1    1    1    1    1    1    1    1    1    1    1    3    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    2    1   10    1    1    1    1    1    1    2    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    3    1    1    1    1    1    3    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    2    1    1    3    1    1    1    2    1    2    2    2    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    1    1    2    1    1    1    1    1    2    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    2    1    1    1    1    1    1    3    1    1    1    4    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    1    1    1    1    1    1    1    1    1    2    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    3    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    2    7    1    3    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   2    1    1    1    1    1    1    1    3    2    1    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    2    1    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    1    1    1    1    1    2    3    2    1    2    1    1    1    1    5 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    3    1    1    1    1    1    1    5    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    4    1    1    1    1    1    1    1    1    3    1    1    2 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    2    1    1    1    1    1    1    3    1    1    1    1    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    2    1    1    1    1    1    2    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    2    2    1    1    1    1    1   10    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   2    1    1    1    2    1    3    1    1    1    1    1    1    1    1    2 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   2    1    1    3    1    1    1    1    1    1    3    1    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    3    1    1    1    3    1    3    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    2    2    2    1    1    2    3    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    2    1    1    1    1    3    1    1    3    1    1    1    1    2 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    2    1    2    1   10    1    4    2    2    1    1    1    1    4    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    3    1    1    1    1    4    1    2    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    3    1    1    1    1    1    2    1    1    1    2    2    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    4    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   2    1    1    1    1    1    1    1    1    1    1    1   10    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    3    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    3    3    3    3    1    1    1    1    1    1    1    3    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   3    1    1    1    1    1    1    1    1    3    1    3    1    1    1    3 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   2    2    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   2    1    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    4    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    3    1    3    3    3    3    1    1    1    1    3    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    3    1    2    1    1    1    1    1    3    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   3    1    3    1    3    1    1    1    1    1    1    1    1    1    2    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    2    3    1    1    1    1    1   10    1    2    4    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    4    1    7    1    1    1    1    3    1    1    1    1    1    3 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   3    1    1    1    1    3    1    1    1    3    1    3    1    1    1    3 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   3    1    1    1    1    2    1    1    1    1    3    1    1    3    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    3    3    1    1    3    1    2    1    3    1    3    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    3    1    1    1    1    3    1    1    1    1    3    1    3 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    1    1    3    1    1    3    1    1    1    1    2    1    1    1    3 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    3    1    1    1    1    1    1    3    3    3    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    2    1    1    3    1    1    1    1    1    1    1    3    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   3    3    3    3    3    1    1    1    3    1    4    3    1    3    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   3    4    3    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    4    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    3    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    3    1    1    1    1    1    1    1   10    1    1    1    1    1    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    3    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    2    2    3    1    1    1    7    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    1    1    1    2    1    1    1    1    4    2    3    2    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    2    2    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    3    3    2    2    2    2    2    2    2    2    2    3    3    3 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    2    3    2    3    2    3    2    2    2    2    2    2    2    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    2    1    1    1    1    1    1    3    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    2    1    1    1    1    5    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    7    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   3    1    1    5    1    3    2    3    3    3    3    2    2    4    3    2 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   2    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    1    5    1    1    3    1    1    1    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    2 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   2    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   2    2    2    3    2    2    2    2    2    2    2    4    2    2    2    2 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   2    4    3    2    2    2    2    3    2    2    2    2    2    2    2    2 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   2    2    4    2    2    2    2    2    2    2    1    2    2    2    2    2 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   3    2    2    2    2    2    2    2    2    2    3    2    2    2    2    2 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   2    2    2    2    2    2    2    5    2    2    2    7    2    2    2    2 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   2    2    2    2    2    2    7    2    4    2    2    2    2    2    2    2 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   2    2    2    2    2    2    2    2    3    2    2    2    2    2    1    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   2    2    2    3    2    2    2    2    3    2    2    2    2    3    2    2 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    2    2    2    3    2    2    3    3    3    3    3    2    3    2    3 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   3    3    3    2    2    3    3    2    3    3    2    2    2    2    2    3 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   2    3    3    3    3    2    2    2    2    2    3    2    2    2    3    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   3    3    2    2    2    2    3    3    3    3    3    3    3    2    2    3 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   2    2    2    2    3    3    3    3    2    2    3    3    2    2    3    2 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    3    2    2    3    3    2    2    3    4    3    3    2    3    2    2 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   3    2    2    2    2    3    2    2    2    7    2    1    2    7    2    2 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   4    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 \n   2    2    2    2    2    2    5    2    2    2    2    2    4    1    1    1 \n1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 \n   1    1    1    1    1    1    1    1    1    3    3    3    3    1    3    1 \n1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 \n   3    3    3    3    3    3    3    3    3    3    3    3    3    1    3    3 \n1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 \n   3    3    3    3    3    3    3    3    3    3    3    1    1    3    3    3 \n2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 \n   2    3    3    3    3    3    4    3    2    3    3    3    3    3    3    3 \n2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 \n   3    3    3    3    3    3    3    3    2    3    3    3    2    2    2    2 \n2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 \n   3    2    2    2    2    2    2    2    4    2    2    2    2    1    2    2 \n2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 \n   2    2    2    2    2    3    2    3    2    2    2    3    3    2    2    2 \n2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 \n   3    2    3    2    2    2    2    2    2    3    2    2    3    2    2    2 \n2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 2108 2109 2110 2111 2112 \n   2    2    3    2    2    2    2    2    2    2    2    2    3    2    2    2 \n2113 2114 2115 2116 2117 2118 2119 2120 2121 2122 2123 2124 2125 2126 2127 2128 \n   2    2    2    2    2    2    4    2    7    2    2    2    1    2    2    2 \n2129 2130 2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 \n   2    1    2    2    2    2    2    7    2    4    2    2    2    2    2    2 \n2145 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 \n   2    2    2    2    2    2    2    2    2    3    2    2    2    2    2    2 \n2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175 2176 \n   1    2    2    2    2    3    2    2    3    1    2    2    2    2    2    2 \n2177 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 2192 \n   2    2    1    3    2    2    2    3    2    2    2    2    2    2    2    2 \n2193 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205 2206 2207 2208 \n   2    2    2    2    2    2    2    2    2    2    2    2    2    2    2    2 \n2209 2210 2211 2212 2213 2214 2215 2216 2217 2218 2219 2220 2221 2222 2223 2224 \n   2    2    2    2    2    4    2    7    2    7    2    2    4    2    2    2 \n2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 \n   2    2    3    2    2    2    2    2    2    2    2    2    2    4    2    2 \n2241 2242 2243 2244 2245 2246 2247 2248 2249 2250 2251 2252 2253 2254 2255 2256 \n   2    2    2    2    3    2    2    2    2    2    2    2    2    2    2    2 \n2257 2258 2259 2260 2261 2262 2263 2264 2265 2266 2267 2268 2269 2270 2271 2272 \n   2    2    2    2    2    4    2    2    2    2    2    2    2    2    2    4 \n2273 2274 2275 2276 2277 2278 2279 2280 2281 2282 2283 2284 2285 2286 2287 2288 \n   2    2    2    2    2    2    2    3    3    2    2    2    2    2    2    2 \n2289 2290 \n   2    2 \n\n\n\nsum(multiplicity(childcare_ppp)&gt;1)\n\n[1] 885\n\n\nView duplicated point events by plotting.\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha = 0.4,\n          size = 0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nThere are a few ways to overcome this problem:\n\nDelete the duplicates. However, some useful point events will be lost\njittering. Adds small perturrbations to duplicate points so that they do not occupy the same exact space\nMake each point “unique” and then attach duplicates of points to the patterns as marks, as attributes of the points. Then we can use analytical techniques that take into account the marks.\n\nUsing jittering,\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp,\n                             retry = TRUE,\n                             nsim = 1,\n                             drop = TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-owin-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-owin-object",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Creating owin object",
    "text": "Creating owin object\nWhen analysing spatial point patterns, it is good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to convert the sg simplefeatures object into owin object of spatstat.\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1            14650  6.97996e+08      8.93e-01\npolygon 2 (hole)         3 -2.21090e+00     -2.83e-09\npolygon 3              285  1.61128e+06      2.06e-03\npolygon 4 (hole)         3 -2.05920e-03     -2.63e-12\npolygon 5 (hole)         3 -8.83647e-03     -1.13e-11\npolygon 6              668  5.40368e+07      6.91e-02\npolygon 7               44  2.26577e+03      2.90e-06\npolygon 8               27  1.50315e+04      1.92e-05\npolygon 9              711  1.28815e+07      1.65e-02\npolygon 10 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 11 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 12 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 13 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 14              77  3.29939e+05      4.22e-04\npolygon 15              30  2.80002e+04      3.58e-05\npolygon 16 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 17              71  8.18750e+03      1.05e-05\npolygon 18 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 19 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 20 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 21 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 22 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 24 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 25 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 26 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 27              91  1.49663e+04      1.91e-05\npolygon 28 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 29 (hole)      349 -1.21433e+03     -1.55e-06\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 32 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 33              40  1.38607e+04      1.77e-05\npolygon 34 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 35 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 36 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 37              45  2.51218e+03      3.21e-06\npolygon 38             142  3.22293e+03      4.12e-06\npolygon 39             148  3.10395e+03      3.97e-06\npolygon 40              75  1.73526e+04      2.22e-05\npolygon 41              83  5.28920e+03      6.76e-06\npolygon 42             211  4.70521e+05      6.02e-04\npolygon 43             106  3.04104e+03      3.89e-06\npolygon 44             266  1.50631e+06      1.93e-03\npolygon 45              71  5.63061e+03      7.20e-06\npolygon 46              10  1.99717e+02      2.55e-07\npolygon 47             478  2.06120e+06      2.64e-03\npolygon 48             155  2.67502e+05      3.42e-04\npolygon 49            1027  1.27782e+06      1.63e-03\npolygon 50 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 51              65  8.42861e+04      1.08e-04\npolygon 52              47  3.82087e+04      4.89e-05\npolygon 53               6  4.50259e+02      5.76e-07\npolygon 54             132  9.53357e+04      1.22e-04\npolygon 55 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 56               4  2.69313e+02      3.44e-07\npolygon 57 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 58            1045  4.44510e+06      5.68e-03\npolygon 59              22  6.74651e+03      8.63e-06\npolygon 60              64  3.43149e+04      4.39e-05\npolygon 61 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63              14  5.86546e+03      7.50e-06\npolygon 64              95  5.96187e+04      7.62e-05\npolygon 65 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 66 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 67 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 68 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 69             234  2.08755e+06      2.67e-03\npolygon 70              10  4.90942e+02      6.28e-07\npolygon 71             234  4.72886e+05      6.05e-04\npolygon 72 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 73              15  4.03300e+04      5.16e-05\npolygon 74             227  1.10308e+06      1.41e-03\npolygon 75              10  6.60195e+03      8.44e-06\npolygon 76              19  3.09221e+04      3.95e-05\npolygon 77             145  9.61782e+05      1.23e-03\npolygon 78              30  4.28933e+03      5.49e-06\npolygon 79              37  1.29481e+04      1.66e-05\npolygon 80               4  9.47108e+01      1.21e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\nCombining point events object and owin object\nThis step of geospatial data wrangling, we will extract childcare events that are located within Singapore.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nThe output object combined both the point and polygon feature in one ppp object class.\n\nsummary(childcareSG_ppp)\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.461811e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1            14650  6.97996e+08      8.93e-01\npolygon 2 (hole)         3 -2.21090e+00     -2.83e-09\npolygon 3              285  1.61128e+06      2.06e-03\npolygon 4 (hole)         3 -2.05920e-03     -2.63e-12\npolygon 5 (hole)         3 -8.83647e-03     -1.13e-11\npolygon 6              668  5.40368e+07      6.91e-02\npolygon 7               44  2.26577e+03      2.90e-06\npolygon 8               27  1.50315e+04      1.92e-05\npolygon 9              711  1.28815e+07      1.65e-02\npolygon 10 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 11 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 12 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 13 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 14              77  3.29939e+05      4.22e-04\npolygon 15              30  2.80002e+04      3.58e-05\npolygon 16 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 17              71  8.18750e+03      1.05e-05\npolygon 18 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 19 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 20 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 21 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 22 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 24 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 25 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 26 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 27              91  1.49663e+04      1.91e-05\npolygon 28 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 29 (hole)      349 -1.21433e+03     -1.55e-06\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 32 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 33              40  1.38607e+04      1.77e-05\npolygon 34 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 35 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 36 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 37              45  2.51218e+03      3.21e-06\npolygon 38             142  3.22293e+03      4.12e-06\npolygon 39             148  3.10395e+03      3.97e-06\npolygon 40              75  1.73526e+04      2.22e-05\npolygon 41              83  5.28920e+03      6.76e-06\npolygon 42             211  4.70521e+05      6.02e-04\npolygon 43             106  3.04104e+03      3.89e-06\npolygon 44             266  1.50631e+06      1.93e-03\npolygon 45              71  5.63061e+03      7.20e-06\npolygon 46              10  1.99717e+02      2.55e-07\npolygon 47             478  2.06120e+06      2.64e-03\npolygon 48             155  2.67502e+05      3.42e-04\npolygon 49            1027  1.27782e+06      1.63e-03\npolygon 50 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 51              65  8.42861e+04      1.08e-04\npolygon 52              47  3.82087e+04      4.89e-05\npolygon 53               6  4.50259e+02      5.76e-07\npolygon 54             132  9.53357e+04      1.22e-04\npolygon 55 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 56               4  2.69313e+02      3.44e-07\npolygon 57 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 58            1045  4.44510e+06      5.68e-03\npolygon 59              22  6.74651e+03      8.63e-06\npolygon 60              64  3.43149e+04      4.39e-05\npolygon 61 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63              14  5.86546e+03      7.50e-06\npolygon 64              95  5.96187e+04      7.62e-05\npolygon 65 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 66 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 67 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 68 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 69             234  2.08755e+06      2.67e-03\npolygon 70              10  4.90942e+02      6.28e-07\npolygon 71             234  4.72886e+05      6.05e-04\npolygon 72 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 73              15  4.03300e+04      5.16e-05\npolygon 74             227  1.10308e+06      1.41e-03\npolygon 75              10  6.60195e+03      8.44e-06\npolygon 76              19  3.09221e+04      3.95e-05\npolygon 77             145  9.61782e+05      1.23e-03\npolygon 78              30  4.28933e+03      5.49e-06\npolygon 79              37  1.29481e+04      1.66e-05\npolygon 80               4  9.47108e+01      1.21e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#kernel-density-estimation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#kernel-density-estimation",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Kernel Density Estimation",
    "text": "Kernel Density Estimation\n\nComputing Kernel Density Estimation using Automatic Bandwidth Selection Method\nThe code below computes a kernel density by using the following configurations of density() of spatstat:\n\nbw.diggle() automatic bandwidth selection method. Other recommended methods include: bw.CvL, bw.scott(), bw.ppl().\nThe smoothing kernel used by default is gaussian. Other smoothing methods include: epanechnikov, quartic or disc\nThe intensity estimate is corrected for edge effect bias by using the method described by Jones (1993) and Diggle (2010). The default is FALSE.\n\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\nplot(kde_childcareSG_bw)\n\n\n\n\nThe density values of the output range is too small for us to derive any practical insights. The output range is due to the default unit of measurement of svy21 being in meter. As such, the density values computed is in “number of points per square meter”.\nWe can check the bandwidth used to compute the kde layer by using the following code:\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n295.4419 \n\n\n\n\nRescaling KDE values\nThe function rescale() is used to convert the unit of measurement from metres to kilometres.\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\n\nNow re-run density() using the resale data set and plot the output kde map.\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\n\nNow the data values are better and more readible and comprehensible."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-different-automatic-bandwidth-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-different-automatic-bandwidth-methods",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Working with different automatic bandwidth methods",
    "text": "Working with different automatic bandwidth methods\nBesides bw.diggle(), there are three other spatstat functions can be used to determine the bandwidth, they are: bw.CvL(), bw.scott(), and bw.ppl().\n\nbw.CvL(childcareSG_ppp.km)\n\n  sigma \n4.54311 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.159749 1.396455 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897017 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2954419 \n\n\nBaddeley et al. (2016) suggested the use of bw.ppl() algorithm because in their experience, the algorithm tends to produce the more appropriate values when the pattern consists predominantly tight clusters. However, they also insist that if the purpose is to detect a single tight cluster in the midst of random noise then bw.diggle() is the best.\nComparing the output of using bw.diggle and bw.ppl methods,\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-different-kernel-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-different-kernel-methods",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Working with different kernel methods",
    "text": "Working with different kernel methods\nThe default kernel method used in density.ppp() is gaussian. There are other options, namely epanechnikov, quartic and dics.\nThe code chunk below will be used to compute three more kernel density estimations by using these three kernel functions.\n\npar(mfrow = c(2, 2))\npar(mar = c(3, 3, 2, 1))  # adjust the margin values to resolve margin issue\n\nplot(density(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, kernel = \"gaussian\"), main = \"Gaussian\")\nplot(density(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, kernel = \"epanechnikov\"), main = \"Epanechnikov\")\nplot(density(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, kernel = \"quartic\"), main = \"Quartic\")\nplot(density(childcareSG_ppp.km, sigma = bw.ppl, edge = TRUE, kernel = \"disc\"), main = \"Disc\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#fixed-and-adaptive-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#fixed-and-adaptive-kde",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Fixed and Adaptive KDE",
    "text": "Fixed and Adaptive KDE\n\nComputing KDE by using fixed bandwidth\nCompute a KDE layer by defining a bandwidth of 600m. The sigma value depends on the unit of measurement in the kde variable. In our case, childcareSG_ppp.km object is in kilometres, hence, 600m will be 0.6km.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\nComputing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example urban versus rural. One way to overcome this problem is by using adaptive bandwidth instead.\nThis section derive s the adaptive kernel density estimation by using density.adaptive() of spatstat.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\nCompare the fixed and adaptive kernel density estimation outputs by using the following code chunk,\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\nComputing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geological units, i.e. urban vs rural. One way to overcome this problem is by using adaptive bandwidth instead.\nThis section focuses on how to derive adaptive kernel density estimation by using density.adaptive() of spatstat.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive) \n\n\n\n\nCompare the fixed and adaptive kernel density estimation outputs,\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\nConverting KDE output into grid object\nConvert the result into grid object such that it is suitable for mapping purposes.\n\n# to solve \"could not find function \"as.SpatialGridDataFrame.im\"\"\n#install.packages(\"spatial\")\n#install.packages(\"sp\")\n\n\n# to solve \"could not find function \"as.SpatialGridDataFrame.im\"\" \nlibrary(spatial)\nlibrary(sp)\n\n\n# Debugging: check if object class is im\nif (\"im\" %in% class(kde_childcareSG.bw)) {\n  print(\"The object is of class 'im'\")\n} else {\n  print(\"The object is not of class 'im'\")\n}\n\n[1] \"The object is of class 'im'\"\n\n\n\ngridded_kde_childcareSG_bw &lt;- as(kde_childcareSG.bw, \"SpatialGridDataFrame\")\n\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\nConverting Gridded Output into Raster\nNext, do the conversion by using raster() from the raster package.\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\n\nThen observe the properties of the raster layer,\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.293897e-14, 37.27443  (min, max)\n\n\n\nA raster layer does not have any CRS property, thus its value is NA after the grid (vector) is rasterised.\n\n\n\nAssigning projection systems\nThe code below will be used to include CRS information\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.293897e-14, 37.27443  (min, max)\n\n\n\n\n\nVisualising tmap output\nFinally, we can display the raster in cartographic quality map using tmap package.\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\nNote that the raster values are encoded explicitly onto the raster pixel using the values in the “v” field.\n\n\n\nComparing Spatial Point Patterns using KDE\nHere, we will compare the KDE of childcare centres at various planning areas.\n\nExtracting Study Areas Let’s categorise and extract the planning areas of interest.\n\npg &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N == \"JURONG WEST\")\n\nThen plot the planning areas.\n\npar(mfrow=c(2,2))\npar(mar = c(3,3,2,1))\nplot(pg, main = \"Punggol\")\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\nCreating owin object\nNow, we will convert the SpatialPolygons objects into owin objects required by spatstat.\n\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\n\n\nCombining childcare points and the study area\nExtract the childcare centre points within each of the study planning areas.\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nThen use rescale() to transform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThen plot the four study areas together with their childcare centres.\n\npar(mfrow=c(2,2))\npar(mar = c(3,3,2,1))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\nComputing KDE\nThe code chunk below is used to compute the KDE of the four planning areas. bw.diggle is used to derive the bandwidth of each planning area.\n\npar(mfrow=c(2,2))\npar(mar = c(3,3,2,1))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\nComputing fixed bandwidth KDE\nFor comparison purposes, let’s use 250m as the bandwidth\n\npar(mfrow=c(2,2))\npar(mar = c(3,3,2,1))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#computing-kde-by-using-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#computing-kde-by-using-adaptive-bandwidth",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Computing KDE by using adaptive bandwidth",
    "text": "Computing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example urban versus rural. One way to overcome this problem is by using adaptive bandwidth instead.\nThis section derive s the adaptive kernel density estimation by using density.adaptive() of spatstat.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\nCompare the fixed and adaptive kernel density estimation outputs by using the following code chunk,\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#computing-kde-by-using-adaptive-bandwidth-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#computing-kde-by-using-adaptive-bandwidth-1",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Computing KDE by using adaptive bandwidth",
    "text": "Computing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geological units, i.e. urban vs rural. One way to overcome this problem is by using adaptive bandwidth instead.\nThis section focuses on how to derive adaptive kernel density estimation by using density.adaptive() of spatstat.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive) \n\n\n\n\nCompare the fixed and adaptive kernel density estimation outputs,\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-kde-output-into-grid-object",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-kde-output-into-grid-object",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Converting KDE output into grid object",
    "text": "Converting KDE output into grid object\nConvert the result into grid object such that it is suitable for mapping purposes.\n\n# to solve \"could not find function \"as.SpatialGridDataFrame.im\"\"\n#install.packages(\"spatial\")\n#install.packages(\"sp\")\n\n\n# to solve \"could not find function \"as.SpatialGridDataFrame.im\"\" \nlibrary(spatial)\nlibrary(sp)\n\n\n# Debugging: check if object class is im\nif (\"im\" %in% class(kde_childcareSG.bw)) {\n  print(\"The object is of class 'im'\")\n} else {\n  print(\"The object is not of class 'im'\")\n}\n\n[1] \"The object is of class 'im'\"\n\n\n\ngridded_kde_childcareSG_bw &lt;- as(kde_childcareSG.bw, \"SpatialGridDataFrame\")\n\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\nConverting Gridded Output into Raster\nNext, do the conversion by using raster() from the raster package.\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\n\nThen observe the properties of the raster layer,\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.274202e-14, 41.20628  (min, max)\n\n\n\nA raster layer does not have any CRS property, thus its value is NA after the grid (vector) is rasterised.\n\n\n\nAssigning projection systems\nThe code below will be used to include CRS information\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.274202e-14, 41.20628  (min, max)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#visualising-tmap-output",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#visualising-tmap-output",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Visualising tmap output",
    "text": "Visualising tmap output\nFinally, we can display the raster in cartographic quality map using tmap package.\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\nNote that the raster values are encoded explicitly onto the raster pixel using the values in the “v” field."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#comparing-spatial-point-patterns-using-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#comparing-spatial-point-patterns-using-kde",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Comparing Spatial Point Patterns using KDE",
    "text": "Comparing Spatial Point Patterns using KDE\nHere, we will compare the KDE of childcare centres at various planning areas. ### Extracting Study Areas Let’s categorise and extract the planning areas of interest.\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nprint(class(pg))\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\n\nThen plot the planning areas.\n\npar(mfrow = c(2, 2)) \n\npar(fig = c(0, 0.8, 0, 0.8))   \nplot(pg, main = \"Punggol\")\n\n\n\npar(fig = c(0.2, 1, 0, 0.8)) \nplot(tm, main = \"Tampines\")\n\n\n\npar(fig = c(0, 0.8, 0.2, 1))  \nplot(ck, main = \"Choa Chu Kang\")\n\n\n\npar(fig = c(0.2, 1, 0.2, 1))  \nplot(jw, main = \"Jurong West\")\n\n\n\n\n\nConverting spatial point data frame into generic sp format\nNext, we will convert the SpatialPolygonsDataFrame layers into generic SpatialPolygons layer.\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\nCreating owin object\nNow, convert the SpatialPolygons objects into owin objects that is required by spastat.\n\npg_owin &lt;- as.owin(owin(polygons = slot(pg_sp, \"polygons\")[[1]]@Polygons[[1]]))\ntm_owin &lt;- as.owin(owin(polygons = slot(tm_sp, \"polygons\")[[1]]@Polygons[[1]]))\nck_owin &lt;- as.owin(owin(polygons = slot(ck_sp, \"polygons\")[[1]]@Polygons[[1]]))\njw_owin &lt;- as.owin(owin(polygons = slot(jw_sp, \"polygons\")[[1]]@Polygons[[1]]))\n\n\nIn the code above, each sp object converts to an owin object by extracting the polygon coordinates using slot() and @Polygons. The extracted polygon coordinates are then passed to the owin() constructor within as.owin() to create the owin object.\n\n\n\nCombining childcare points and the study area\nWe can extract the childcare centres that are within the specific region for our analysis.\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nNow rescale() helps us to transform the unit of metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThe following code plots the four study areas and the location of the childcare centres.\n\npar(mfrow = c(2,2)) \n\npar(fig = c(0, 0.8, 0, 0.8))   \nplot(childcare_pg_ppp.km, main=\"Punggol\")\n\n\n\npar(fig = c(0.2, 1, 0, 0.8)) \nplot(childcare_tm_ppp.km, main=\"Tampines\")\n\n\n\npar(fig = c(0, 0.8, 0.2, 1))  \nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\n\n\n\npar(fig = c(0.2, 1, 0.2, 1))  \nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#computing-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#computing-kde",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Computing KDE",
    "text": "Computing KDE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-generic-sf-format-into-spatstats-ppp-format",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-generic-sf-format-into-spatstats-ppp-format",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Converting Generic sf Format into spatstat’s ppp Format",
    "text": "Converting Generic sf Format into spatstat’s ppp Format\nLet’s use as.ppp() of spatstat to convert the sf into ppp format.\nPlot childcare_ppp and examine the difference.\n\nchildcare_ppp &lt;- as.ppp(st_coordinates(childcare_sf), st_bbox(childcare_sf)) \nplot(childcare_ppp)\n\n\n\n\nSummary statistics:\n\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0       0       0       0 \n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    3    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    4    1    1    1    1    1    1    1    1    1    1    2 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    3    1    1    1    2    1   10    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    2    1    1    3    1    1    1    2    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    2    2    2    1    1    1    1    1    1    1    1    2    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    2    2    2    1    1    1    1    1    2    1    4    1    1    2 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   3    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1   10    1    1    3    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    2    6    1    2    1    1    2    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   3    2    3    2    1    2    1    1    2    4    1    6    6    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   2    1    1    1    1    2    1    1    1    1    1    1    3    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    2    1    1    1    2    1    1    1    2    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    2    1    2    2    1    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   4    1    1    1    1    2    1    1    1    1    1    1    2    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   2    2    1    1    1    1    1   10    1    2    1    1    1    2    1    3 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1   10   10   10    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    2    1    2    1    1    1    1    3    1    2    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    3    1    1    1    1    1    2    1    1    2 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    3    1    1    1    1    1    1    1    1    2    2    2    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    3    1    1    1    2    1    1    1    2    2    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    4    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    4    1    1    1    1    1    1    4    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    2    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    3    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1   10    1    1    1    1    1    2 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    2    1    2    1   10    1    4    1    2    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   3    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    3    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    2 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    2    1    1    1    1    1    2    2    1    1    1    1    2    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    2    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    2    1    1    2    1    1    1    1    1    1    1    1    2    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    2    2    1    1    1    1    2    1    1    1    1    2    1    1    2 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    2    4    1    1    1    1    1    1    2    1    2    2    2 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   2    1    1    1    1    2    1    1    2    2    2    2    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    2    2    2    1    1    1    1    1    2    1    1    2    2    2    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    2    1    1    2    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   2    1    2    1    2    1    1    1    1    1    1    2    2    1    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    2    1    2    1    2    1    1    1    1    1    2    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    2    1    2    2    2    2    2    1    1    1    1    1    2    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    2    1    1    2    1    1    1    1    2    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    3    1    1    1    1    1    1    1   10 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   2    1    3    2    1    2    1    1    2    3    2    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    2    1    2    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    4    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n  10    1    2    4    1    1    1    4    1    4    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    4    2    3    2    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   2    2    1    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   2    2    2    1    1    1    6    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    4    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    2    2    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    2    1    1    1    1    2    1    1    1    1    2    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   2    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    6    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    3    1    1    4    1    1    2    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   2    1    1    1    2    1    4    1    2    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    2    1    1    2    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    2    1    1    3    1    1    1    2    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   2    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   3    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    4    1    1    1    6    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    2    1    1    1    2    1    1    1    1    1    2    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    2    1    1    1    1    1    1    1    1    2    2    2    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   2    1    2    1    2    1    2    1    1    2    1    2    2    2    2    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    2    1    1    1    2    1    1    1    1    2    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    4    1    4    1    4    1    1    2    1    1    1    1    1    3    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    2    2    2    2    2    2    2    2    1    1    2    2    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    2    1    1    1    1    1    2    2    2    1    2    2    2    2    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    1    1    1    1    1    1    1    2    2    1    2    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    2    1    2    2    2    2    2    2    1    1    2    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    2    2    2    2    2    1    1    1    2    1    1    2    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    2    1    1    2    1    1    2    2    2    1    2    1    2    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    2    1    1    1    1    4    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    2    2    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    2    1    2    2    1    1    1    1    1    2    1    1    2    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    3    2    2    2    1    2    1    3    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 \n   1    1    1    1    3 \n\n\n\nsum(multiplicity(childcare_ppp)&gt;1)\n\n[1] 338\n\n\nView duplicated point events by plotting.\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha = 0.4,\n          size = 0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nThere are a few ways to overcome this problem:\n\nDelete the duplicates. However, some useful point events will be lost\njittering. Adds small perturbations to duplicate points so that they do not occupy the same exact space\nMake each point “unique” and then attach duplicates of points to the patterns as marks, as attributes of the points. Then we can use analytical techniques that take into account the marks.\n\nUsing jittering,\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp,\n                             retry = TRUE,\n                             nsim = 1,\n                             drop = TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Testing Spatial Point Patterns using Clark and Evans Test",
    "text": "Testing Spatial Point Patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.49534, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nAs P &lt; 0.05, we reject the null hypothesis that the childcare services are randomly distributed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Clark and Evans Test: Choa Chu Kang planning area",
    "text": "Clark and Evans Test: Choa Chu Kang planning area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.90078, p-value = 0.1025\nalternative hypothesis: two-sided\n\n\nAs P &gt; 0.05, we cannot reject the null hypothesis that the childcare services are randomly distributed in Choa Chu Kang."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#clark-and-evans-test-tampines-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#clark-and-evans-test-tampines-planning-area",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Clark and Evans Test: Tampines planning area",
    "text": "Clark and Evans Test: Tampines planning area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.68438, p-value = 6.532e-11\nalternative hypothesis: two-sided\n\n\nAs P &lt; 0.05, we reject the null hypothesis that the childcare services are randomly distributed.\nWe can infer from the R value (Nearest Neighbour Index) that since R = 0.69037 &lt; 1, the pattern exhibits clustering in Tampines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#choa-chu-kang-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#choa-chu-kang-planning-area",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Choa Chu Kang planning area",
    "text": "Choa Chu Kang planning area\n\nComputing G-function estimation\nThe code chunk below is used to comput G-function using Gest() of spastat package\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nH0: The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1: The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-fucntion\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_CK.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tampines-planning-area",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tampines-planning-area",
    "title": "Hands-on Exercise 3: Spatial Point Patterns Analysis",
    "section": "Tampines planning area",
    "text": "Tampines planning area\n\nComputing G-function estimation\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "",
    "text": "Human mobility, the movement of people in space and time, reflects the spatial-temporal characteristics of human behaviour (Wang et al., 2021). With the advancement Information and Communication Technologies (ICT), pertinent through the ubiquitous use of smartphones, a large and growing volume of data relating to human mobility is available today. By using appropriate GIS analysis methods, such data are potentially useful in supporting smart-city planning and management.\n\n\n\nIn 2020, an interesting human mobility data set called Grab Posisi was released by Grab, one of the largest shared taxi operators in Southeast Asia. One of the two data sets released is soley focusing on Singapore!\nIn Singapore, relevant human mobility data can be extracted from Land Transport Authority (LTA) DataMall. In particular, two data sets related to human mobility are provided by the portal: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops.\n\n\n\nA limitation of the LTA data sets is that their locations are biased to either bus stops or MRT/LRT stations. Hence, there will naturally be clusters of embarking and disembarking passengers at stops and stations, and other interesting clusters by other modes of transport are overlooked."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "",
    "text": "Set up\n\npacman::p_load(sf, tmap, spNetwork, classInt, virdis, tidyverse, sp)\n\n\n\nImporting data\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer=\"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nchildcare &lt;- st_read(dsn = \"data/geospatial\", layer=\"Punggol_CC\")\n\nReading layer `Punggol_CC' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\nnetwork &lt;- st_read(dsn = \"data/geospatial\", layer=\"Punggol_St\")\n\nReading layer `Punggol_St' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\n\nExamine the structure of the SpatialDataFrame output.\n\nstr(network)\n\nClasses 'sf' and 'data.frame':  2642 obs. of  3 variables:\n $ LINK_ID : num  1.16e+08 1.16e+08 1.16e+08 1.16e+08 1.16e+08 ...\n $ ST_NAME : chr  \"PUNGGOL RD\" \"PONGGOL TWENTY-FOURTH AVE\" \"PONGGOL SEVENTEENTH AVE\" \"PONGGOL SEVENTEENTH AVE\" ...\n $ geometry:sfc_LINESTRING of length 2642; first list element:  'XY' num [1:2, 1:2] 36547 36559 44575 44614\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA\n  ..- attr(*, \"names\")= chr [1:2] \"LINK_ID\" \"ST_NAME\"\n\nstr(childcare)\n\nClasses 'sf' and 'data.frame':  61 obs. of  2 variables:\n $ Name    : chr  \"kml_10\" \"kml_99\" \"kml_100\" \"kml_101\" ...\n $ geometry:sfc_POINT of length 61; first list element:  'XYZ' num  36174 42550 0\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA\n  ..- attr(*, \"names\")= chr \"Name\"\n\n\nLet’s have a look at how the childcare centres and the network look on the map!\n\ntmap_mode('view') # to zoom\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\ntmap_mode('plot')\n\nIn order to run the Network Constraint Analysis,\n\nSegment the lines\nSnap\n\nCreating the line segment,\n\nlixels &lt;- lixelize_lines(network,\n                         750, # max dist ppl are willing to walk to a CC\n                         mindist=375) #midpoint\n\n\nsamples &lt;- lines_center(lixels)\n\n\n\nPerforming KDE\nMore information at https://github.com/JeremyGelb/spNetwork/tree/master\n\ndensities &lt;- nkde(network, \n                  events = childcare,\n                  w = rep(1,nrow(childcare)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\n# rescaling to help the mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\nVisualise\n\ntmap_mode('view')\ntm_shape(lixels)+\n  tm_lines(col='density')+\ntm_shape(childcare)+\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#introduction",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "",
    "text": "Human mobility, the movement of people in space and time, reflects the spatial-temporal characteristics of human behaviour (Wang et al., 2021). With the advancement Information and Communication Technologies (ICT), pertinent through the ubiquitous use of smartphones, a large and growing volume of data relating to human mobility is available today. By using appropriate GIS analysis methods, such data are potentially useful in supporting smart-city planning and management."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "",
    "text": "In 2020, an interesting human mobility data set called Grab Posisi was released by Grab, one of the largest shared taxi operators in Southeast Asia. One of the two data sets released is soley focusing on Singapore!\nIn Singapore, relevant human mobility data can be extracted from Land Transport Authority (LTA) DataMall. In particular, two data sets related to human mobility are provided by the portal: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#limitation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#limitation",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "",
    "text": "A limitation of the LTA data sets is that their locations are biased to either bus stops or MRT/LRT stations. Hence, there will naturally be clusters of embarking and disembarking passengers at stops and stations, and other interesting clusters by other modes of transport are overlooked."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preprocessing",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preprocessing",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Data preprocessing",
    "text": "Data preprocessing\nMaster Plan 2019 Subzone Boundary\nFirst, we want to get a clear Singapore boundary layer.\nExtracted from data.gov.sg, let’s read the 2019 master plan subzone boundary layer.\n\nmpsz &lt;- st_read(\"data/geospatial/master-plan-2019-subzone-boundary-no-sea-kml.kml\")\nsummary(mpsz)\n\n\nThe dimension contains XYZ, meaning that mpsz contains 3D geometries\n\nConvert mpsz to 2D geometry using st_zm() from sf and save the converted form as a shapefile.\n\nmpsz &lt;- st_zm(mpsz, drop = TRUE) # Convert 3D geometries to 2D\n\nCreate a new column SUBZONE_N containing the subzone names.\n\n# create a new column 'SUBZONE_N' and extract subzone names from 'Dscrptn' field\nmpsz &lt;- mpsz %&gt;%\n  rowwise() %&gt;%\n  mutate(SUBZONE_N = str_extract(Description, \"&lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;(.*?)&lt;/td&gt;\")) %&gt;%\n  ungroup()\n\n# remove HTML tags and 'SUBZONE_N' from 'SUBZONE_N' column\nmpsz$SUBZONE_N &lt;- str_remove_all(mpsz$SUBZONE_N, \"&lt;.*?&gt;|SUBZONE_N\")\n\n# view the updated 'mpsz3414' dataframe\nhead(mpsz$SUBZONE_N)\n\nCreate a new column PLN_AREA_N containing the planning area names.\n\n# create a new column 'PLN_AREA_N' and extract subzone names from 'Dscrptn' field\nmpsz &lt;- mpsz %&gt;%\n  rowwise() %&gt;%\n  mutate(PLN_AREA_N = str_extract(Description, \"&lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;(.*?)&lt;/td&gt;\")) %&gt;%\n  ungroup()\n\n# remove HTML tags and 'PLN_AREA_N' from 'PLN_AREA_N' column\nmpsz$PLN_AREA_N &lt;- str_remove_all(mpsz$PLN_AREA_N, \"&lt;.*?&gt;|PLN_AREA_N\")\n\n\n# remove the 'Description' column using the $ operator\nmpsz$Description &lt;- NULL\n\n\n#st_write(mpsz, \"data/geospatial/mpsz.shp\")\n\n\nmpsz_sf &lt;- st_read(\"data/geospatial/mpsz.shp\")\n\nReading layer `mpsz' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial\\mpsz.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nclass(mpsz_sf)\n\n[1] \"sf\"         \"data.frame\"\n\n\nThen transform the CRS from WGS84 to SVY21.\n\nmpsz3414 &lt;- st_transform(mpsz_sf, 3414)\nclass(mpsz3414)\n\n[1] \"sf\"         \"data.frame\"\n\n\nNo commercial ride hailing services are available in the outer islands of Singapore. Let’s identify them first.\n\n\n\nOuter Islands Subzones Viewed with QGIS\n\n\nFilter out the outer islands.\n\nouter_islands &lt;- c(\"SEMAKAU\", \"SUDONG\", \"NORTH-EASTERN ISLANDS\", \"SOUTHERN GROUP\")\n\n# remove rows where 'SUBZONE_N' is in the list\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  filter(!str_trim(SUBZONE_N) %in% str_trim(outer_islands))\nclass(mpsz3414)\n\n[1] \"sf\"         \"data.frame\"\n\n\nThen dissolve all the inner subzone boundaries using st_union() (if necessary).\n\nsg_sf &lt;- mpsz3414 %&gt;% st_union()\nplot(sg_sf)\n\n\n\n\nOSM Singapore Roads\nGet the roads layer from OSM. Since the file is very large, it takes a long time to get the intersection between Singapore and roads (I took about 7 minutes to execute this step).\n\nroads &lt;- st_read(dsn=\"data/geospatial\", layer=\"gis_osm_roads_free_1\") %&gt;%\n  st_transform(crs=3414)\n\nsg_roads &lt;- st_intersection(roads,sg_sf)\n\nplot(sg_roads) \n\nAlternatively you may use QGIS to select the roads in Singapore and save the roads into a shape file.\nThe following two code chunks can be uncommented if you are taking this approach.\n\nsg_roads &lt;- st_read(dsn= \"data/geospatial\", layer=\"sg_roads\")\nstr(sg_roads)\n\nVerify that roads are in the correct in CRS\n\nst_crs(sg_roads) &lt;- st_crs(3414)\nst_crs(sg_roads)\n\n\nThe CRS ID is 3414 which is correct."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-size-management",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-size-management",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Data Size Management",
    "text": "Data Size Management\nBefore further data manipulation, save the files in rds format as the size of roads3414 is very large.\n\nwrite_rds(sg_roads,\"data/geospatial/rds/sg_roads.rds\")\n\nRead the written roads file.\n\nsg_roads &lt;- read_rds(\"data/geospatial/rds/sg_roads.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preprocessing-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preprocessing-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Data preprocessing",
    "text": "Data preprocessing\nRead all the Grab-Posisi using arrow’s read_parquet() function to read the parquet files containing the ride trajectories.\n\ndf0 &lt;- read_parquet(\"data/aspatial/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf1 &lt;- read_parquet(\"data/aspatial/part-00001-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf2 &lt;- read_parquet(\"data/aspatial/part-00002-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf3 &lt;- read_parquet(\"data/aspatial/part-00003-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf4 &lt;- read_parquet(\"data/aspatial/part-00004-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf5 &lt;- read_parquet(\"data/aspatial/part-00005-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf6 &lt;- read_parquet(\"data/aspatial/part-00006-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf7 &lt;- read_parquet(\"data/aspatial/part-00007-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf8 &lt;- read_parquet(\"data/aspatial/part-00008-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\ndf9 &lt;- read_parquet(\"data/aspatial/part-00009-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\nThen combine the rows using the bindrows function in the dplyr package embedded in the tidyverse package.\n\ndf &lt;- bind_rows(df0, df1, df2, df3, df4, df5, df6, df7, df8, df9)\nhead(df)\n\nThe observed pingtimestamp is not easily comprehensible, thus it needs to be amended to a proper timestamp.\n\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp) ## $ to overwrite the variable in df\nhead(df$pingtimestamp)\n\nThe data can be further segmented to two groups:\n\norigin_df representing the starting locations of trips taken\ndest_df representing the ending locations of trips taken\n\nStarting Locations\n\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;% \n  filter(row_number()==1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, \n                        label=TRUE,\n                        abbr=TRUE), \n         start_hr = factor(hour(pingtimestamp)), \n         day = factor(mday(pingtimestamp)))\n\nEnding Locations\n\ndest_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;% \n  filter(row_number()==1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, \n                        label=TRUE,\n                        abbr=TRUE), \n       end_hr = factor(hour(pingtimestamp)), \n         day = factor(mday(pingtimestamp)))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#further-observation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#further-observation",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Further Observation",
    "text": "Further Observation\nInspect the fields in origin_df and dest_df.\n\nlist(origin_df)\n\n[[1]]\n# A tibble: 28,000 × 12\n# Groups:   trj_id [28,000]\n   trj_id driving_mode osname  pingtimestamp       rawlat rawlng  speed bearing\n   &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;int&gt;\n 1 70895  car          android 2019-04-08 00:09:26   1.38   104.  9.95      111\n 2 21926  car          android 2019-04-08 00:09:48   1.29   104. 11.0        75\n 3 47498  car          ios     2019-04-08 00:09:50   1.38   104. 18.6       307\n 4 18103  car          android 2019-04-08 00:09:55   1.45   104.  0.404     159\n 5 41322  car          android 2019-04-08 00:09:57   1.28   104. 17.9       232\n 6 64813  car          ios     2019-04-08 00:10:03   1.31   104. 17.1       106\n 7 81518  car          ios     2019-04-08 00:10:14   1.31   104.  6.24      213\n 8 66542  car          android 2019-04-08 00:11:17   1.36   104.  9.11      179\n 9 25201  car          ios     2019-04-08 00:12:05   1.37   104. 12.0       211\n10 82401  car          android 2019-04-08 00:12:11   1.30   104. 10.6       107\n# ℹ 27,990 more rows\n# ℹ 4 more variables: accuracy &lt;dbl&gt;, weekday &lt;ord&gt;, start_hr &lt;fct&gt;, day &lt;fct&gt;\n\nlist(dest_df)\n\n[[1]]\n# A tibble: 28,000 × 12\n# Groups:   trj_id [28,000]\n   trj_id driving_mode osname  pingtimestamp       rawlat rawlng  speed bearing\n   &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;int&gt;\n 1 81574  car          ios     2019-04-21 23:56:49   1.34   104. 15.3       103\n 2 54687  car          android 2019-04-21 23:56:46   1.44   104.  8.15      299\n 3 17190  car          android 2019-04-21 23:56:36   1.34   104. 12.4       202\n 4 13793  car          android 2019-04-21 23:56:30   1.32   104.  6.47      170\n 5 39014  car          ios     2019-04-21 23:56:27   1.33   104.  3.59      169\n 6 41170  car          ios     2019-04-21 23:56:13   1.32   104. 13.1        71\n 7 64519  car          ios     2019-04-21 23:55:49   1.43   104. 14.3       239\n 8 70461  car          ios     2019-04-21 23:55:32   1.29   104.  0.970      51\n 9 41154  car          ios     2019-04-21 23:55:10   1.32   104. 10.8       118\n10 65488  car          ios     2019-04-21 23:54:47   1.38   104.  0         244\n# ℹ 27,990 more rows\n# ℹ 4 more variables: accuracy &lt;dbl&gt;, weekday &lt;ord&gt;, end_hr &lt;fct&gt;, day &lt;fct&gt;"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-size-management-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-size-management-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Data Size Management",
    "text": "Data Size Management\nBefore further data manipulation, save the files in rds format as the size of the data frames are very large. Running the whole tibble data frame will not be practical and the processing time will be very long.\n\nwrite_rds(origin_df,\"data/aspatial/rds/origin_df.rds\")\nwrite_rds(dest_df,\"data/aspatial/rds/dest_df.rds\")\n\n\norigin_df &lt;- read_rds(\"data/aspatial/rds/origin_df.rds\")\ndest_df &lt;- read_rds(\"data/aspatial/rds/dest_df.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Creating a Simple Feature Data Frame from an Aspatial Data Frame",
    "text": "Creating a Simple Feature Data Frame from an Aspatial Data Frame\nConvert the data frames into simple features data frame such that the locations can be plotted."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#locations",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#locations",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Locations",
    "text": "Locations\n\nStarting Locations\n\norigin_sf &lt;- origin_df %&gt;% \n  st_as_sf(coords=c(\"rawlng\",\"rawlat\"),\n           crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\n\n\nEnding Locations\n\ndest_sf &lt;- dest_df %&gt;% \n  st_as_sf(coords=c(\"rawlng\",\"rawlat\"),\n           crs=4326) %&gt;%\n  st_transform(crs = 3414)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-sf-format-into-spatstats-ppp-format",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-sf-format-into-spatstats-ppp-format",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Converting sf Format into spatstat’s ppp Format",
    "text": "Converting sf Format into spatstat’s ppp Format\nUse as.ppp() of spatstat to convert the sf object ppp format.\nStarting Locations\n\norigin_ppp &lt;- as.ppp(st_coordinates(origin_sf), st_bbox(origin_sf))\nplot(origin_ppp)\n\n\n\n\nEnding Locations\n\ndest_ppp &lt;- as.ppp(st_coordinates(dest_sf), st_bbox(dest_sf))\nplot(dest_ppp)\n\n\n\n\nLook at summary statistics.\nStarting Locations\n\nsummary(origin_ppp)\n\nPlanar point pattern:  28000 points\nAverage intensity 2.473666e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [3628.24, 49845.23] x [25198.14, 49689.64] units\n                    (46220 x 24490 units)\nWindow area = 1131920000 square units\n\n\nEnding Locations\n\nsummary(dest_ppp)\n\nPlanar point pattern:  28000 points\nAverage intensity 2.493661e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [3637.21, 49870.63] x [25221.3, 49507.79] units\n                    (46230 x 24290 units)\nWindow area = 1122850000 square units\n\n\n\nany(duplicated(origin_ppp))\n\n[1] FALSE\n\nany(duplicated(dest_ppp))\n\n[1] FALSE\n\n\n\nWith no duplicated starting locations nor ending locations, we can proceed to set up for our spatial point patterns analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-owin-object",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#creating-owin-object",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Creating owin object",
    "text": "Creating owin object\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n56 separate polygons (36 holes)\n                  vertices         area relative.area\npolygon 1            15307  7.00834e+08      9.92e-01\npolygon 2              285  1.61128e+06      2.28e-03\npolygon 3               27  1.50315e+04      2.13e-05\npolygon 4 (hole)        41 -4.01660e+04     -5.69e-05\npolygon 5 (hole)       317 -5.11280e+04     -7.24e-05\npolygon 6 (hole)         3 -4.14099e-04     -5.86e-13\npolygon 7               30  2.80002e+04      3.97e-05\npolygon 8 (hole)         4 -2.86396e-01     -4.06e-10\npolygon 9 (hole)         3 -1.81439e-04     -2.57e-13\npolygon 10 (hole)        3 -8.68789e-04     -1.23e-12\npolygon 11 (hole)        3 -5.99535e-04     -8.49e-13\npolygon 12 (hole)        3 -3.04561e-04     -4.31e-13\npolygon 13 (hole)        3 -4.46076e-04     -6.32e-13\npolygon 14 (hole)        3 -3.39794e-04     -4.81e-13\npolygon 15 (hole)        3 -4.52043e-05     -6.40e-14\npolygon 16 (hole)        3 -3.90173e-05     -5.53e-14\npolygon 17 (hole)        3 -9.59850e-05     -1.36e-13\npolygon 18 (hole)        4 -2.54488e-04     -3.60e-13\npolygon 19 (hole)        4 -4.28453e-01     -6.07e-10\npolygon 20 (hole)        4 -2.18616e-04     -3.10e-13\npolygon 21 (hole)        5 -2.44411e-04     -3.46e-13\npolygon 22 (hole)        5 -3.64686e-02     -5.16e-11\npolygon 23              71  8.18750e+03      1.16e-05\npolygon 24 (hole)        6 -8.37554e-01     -1.19e-09\npolygon 25 (hole)       38 -7.79904e+03     -1.10e-05\npolygon 26 (hole)        3 -3.41897e-05     -4.84e-14\npolygon 27 (hole)        3 -3.65499e-03     -5.18e-12\npolygon 28 (hole)        3 -4.95057e-02     -7.01e-11\npolygon 29              91  1.49663e+04      2.12e-05\npolygon 30 (hole)        3 -3.79135e-02     -5.37e-11\npolygon 31 (hole)        5 -2.92235e-04     -4.14e-13\npolygon 32 (hole)        3 -7.43616e-06     -1.05e-14\npolygon 33 (hole)      270 -1.21455e+03     -1.72e-06\npolygon 34 (hole)       19 -4.39650e+00     -6.23e-09\npolygon 35 (hole)       35 -1.38385e+02     -1.96e-07\npolygon 36 (hole)       23 -1.99656e+01     -2.83e-08\npolygon 37              40  1.38607e+04      1.96e-05\npolygon 38 (hole)       41 -6.00381e+03     -8.50e-06\npolygon 39 (hole)        7 -1.40546e-01     -1.99e-10\npolygon 40 (hole)       11 -8.36705e+01     -1.18e-07\npolygon 41 (hole)        3 -2.33435e-03     -3.31e-12\npolygon 42              45  2.51218e+03      3.56e-06\npolygon 43             139  3.22293e+03      4.56e-06\npolygon 44             148  3.10395e+03      4.40e-06\npolygon 45 (hole)        4 -1.72650e-04     -2.44e-13\npolygon 46              75  1.73526e+04      2.46e-05\npolygon 47              83  5.28920e+03      7.49e-06\npolygon 48             106  3.04104e+03      4.31e-06\npolygon 49             264  1.50631e+06      2.13e-03\npolygon 50              71  5.63061e+03      7.97e-06\npolygon 51              10  1.99717e+02      2.83e-07\npolygon 52 (hole)        3 -1.37223e-02     -1.94e-11\npolygon 53             487  2.06117e+06      2.92e-03\npolygon 54              65  8.42861e+04      1.19e-04\npolygon 55              47  3.82087e+04      5.41e-05\npolygon 56              22  6.74651e+03      9.55e-06\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n                     (53270 x 28810 units)\nWindow area = 706156000 square units\nFraction of frame area: 0.46"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-point-events-object-and-owin-object",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#combining-point-events-object-and-owin-object",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Combining point events object and owin object",
    "text": "Combining point events object and owin object\nExtract points that are located within Singapore\nStarting Locations\n\noriginSG_ppp = origin_ppp[sg_owin]\n\nEnding Locations\n\ndestSG_ppp = dest_ppp[sg_owin]\n\nThe output object contains the combination of the point and polygon feature into one ppp object class.\nStarting Locations\n\nsummary(originSG_ppp)\n\nPlanar point pattern:  28000 points\nAverage intensity 3.965129e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n56 separate polygons (36 holes)\n                  vertices         area relative.area\npolygon 1            15307  7.00834e+08      9.92e-01\npolygon 2              285  1.61128e+06      2.28e-03\npolygon 3               27  1.50315e+04      2.13e-05\npolygon 4 (hole)        41 -4.01660e+04     -5.69e-05\npolygon 5 (hole)       317 -5.11280e+04     -7.24e-05\npolygon 6 (hole)         3 -4.14099e-04     -5.86e-13\npolygon 7               30  2.80002e+04      3.97e-05\npolygon 8 (hole)         4 -2.86396e-01     -4.06e-10\npolygon 9 (hole)         3 -1.81439e-04     -2.57e-13\npolygon 10 (hole)        3 -8.68789e-04     -1.23e-12\npolygon 11 (hole)        3 -5.99535e-04     -8.49e-13\npolygon 12 (hole)        3 -3.04561e-04     -4.31e-13\npolygon 13 (hole)        3 -4.46076e-04     -6.32e-13\npolygon 14 (hole)        3 -3.39794e-04     -4.81e-13\npolygon 15 (hole)        3 -4.52043e-05     -6.40e-14\npolygon 16 (hole)        3 -3.90173e-05     -5.53e-14\npolygon 17 (hole)        3 -9.59850e-05     -1.36e-13\npolygon 18 (hole)        4 -2.54488e-04     -3.60e-13\npolygon 19 (hole)        4 -4.28453e-01     -6.07e-10\npolygon 20 (hole)        4 -2.18616e-04     -3.10e-13\npolygon 21 (hole)        5 -2.44411e-04     -3.46e-13\npolygon 22 (hole)        5 -3.64686e-02     -5.16e-11\npolygon 23              71  8.18750e+03      1.16e-05\npolygon 24 (hole)        6 -8.37554e-01     -1.19e-09\npolygon 25 (hole)       38 -7.79904e+03     -1.10e-05\npolygon 26 (hole)        3 -3.41897e-05     -4.84e-14\npolygon 27 (hole)        3 -3.65499e-03     -5.18e-12\npolygon 28 (hole)        3 -4.95057e-02     -7.01e-11\npolygon 29              91  1.49663e+04      2.12e-05\npolygon 30 (hole)        3 -3.79135e-02     -5.37e-11\npolygon 31 (hole)        5 -2.92235e-04     -4.14e-13\npolygon 32 (hole)        3 -7.43616e-06     -1.05e-14\npolygon 33 (hole)      270 -1.21455e+03     -1.72e-06\npolygon 34 (hole)       19 -4.39650e+00     -6.23e-09\npolygon 35 (hole)       35 -1.38385e+02     -1.96e-07\npolygon 36 (hole)       23 -1.99656e+01     -2.83e-08\npolygon 37              40  1.38607e+04      1.96e-05\npolygon 38 (hole)       41 -6.00381e+03     -8.50e-06\npolygon 39 (hole)        7 -1.40546e-01     -1.99e-10\npolygon 40 (hole)       11 -8.36705e+01     -1.18e-07\npolygon 41 (hole)        3 -2.33435e-03     -3.31e-12\npolygon 42              45  2.51218e+03      3.56e-06\npolygon 43             139  3.22293e+03      4.56e-06\npolygon 44             148  3.10395e+03      4.40e-06\npolygon 45 (hole)        4 -1.72650e-04     -2.44e-13\npolygon 46              75  1.73526e+04      2.46e-05\npolygon 47              83  5.28920e+03      7.49e-06\npolygon 48             106  3.04104e+03      4.31e-06\npolygon 49             264  1.50631e+06      2.13e-03\npolygon 50              71  5.63061e+03      7.97e-06\npolygon 51              10  1.99717e+02      2.83e-07\npolygon 52 (hole)        3 -1.37223e-02     -1.94e-11\npolygon 53             487  2.06117e+06      2.92e-03\npolygon 54              65  8.42861e+04      1.19e-04\npolygon 55              47  3.82087e+04      5.41e-05\npolygon 56              22  6.74651e+03      9.55e-06\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n                     (53270 x 28810 units)\nWindow area = 706156000 square units\nFraction of frame area: 0.46\n\n\nEnding Locations\n\nsummary(destSG_ppp)\n\nPlanar point pattern:  27997 points\nAverage intensity 3.964704e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n56 separate polygons (36 holes)\n                  vertices         area relative.area\npolygon 1            15307  7.00834e+08      9.92e-01\npolygon 2              285  1.61128e+06      2.28e-03\npolygon 3               27  1.50315e+04      2.13e-05\npolygon 4 (hole)        41 -4.01660e+04     -5.69e-05\npolygon 5 (hole)       317 -5.11280e+04     -7.24e-05\npolygon 6 (hole)         3 -4.14099e-04     -5.86e-13\npolygon 7               30  2.80002e+04      3.97e-05\npolygon 8 (hole)         4 -2.86396e-01     -4.06e-10\npolygon 9 (hole)         3 -1.81439e-04     -2.57e-13\npolygon 10 (hole)        3 -8.68789e-04     -1.23e-12\npolygon 11 (hole)        3 -5.99535e-04     -8.49e-13\npolygon 12 (hole)        3 -3.04561e-04     -4.31e-13\npolygon 13 (hole)        3 -4.46076e-04     -6.32e-13\npolygon 14 (hole)        3 -3.39794e-04     -4.81e-13\npolygon 15 (hole)        3 -4.52043e-05     -6.40e-14\npolygon 16 (hole)        3 -3.90173e-05     -5.53e-14\npolygon 17 (hole)        3 -9.59850e-05     -1.36e-13\npolygon 18 (hole)        4 -2.54488e-04     -3.60e-13\npolygon 19 (hole)        4 -4.28453e-01     -6.07e-10\npolygon 20 (hole)        4 -2.18616e-04     -3.10e-13\npolygon 21 (hole)        5 -2.44411e-04     -3.46e-13\npolygon 22 (hole)        5 -3.64686e-02     -5.16e-11\npolygon 23              71  8.18750e+03      1.16e-05\npolygon 24 (hole)        6 -8.37554e-01     -1.19e-09\npolygon 25 (hole)       38 -7.79904e+03     -1.10e-05\npolygon 26 (hole)        3 -3.41897e-05     -4.84e-14\npolygon 27 (hole)        3 -3.65499e-03     -5.18e-12\npolygon 28 (hole)        3 -4.95057e-02     -7.01e-11\npolygon 29              91  1.49663e+04      2.12e-05\npolygon 30 (hole)        3 -3.79135e-02     -5.37e-11\npolygon 31 (hole)        5 -2.92235e-04     -4.14e-13\npolygon 32 (hole)        3 -7.43616e-06     -1.05e-14\npolygon 33 (hole)      270 -1.21455e+03     -1.72e-06\npolygon 34 (hole)       19 -4.39650e+00     -6.23e-09\npolygon 35 (hole)       35 -1.38385e+02     -1.96e-07\npolygon 36 (hole)       23 -1.99656e+01     -2.83e-08\npolygon 37              40  1.38607e+04      1.96e-05\npolygon 38 (hole)       41 -6.00381e+03     -8.50e-06\npolygon 39 (hole)        7 -1.40546e-01     -1.99e-10\npolygon 40 (hole)       11 -8.36705e+01     -1.18e-07\npolygon 41 (hole)        3 -2.33435e-03     -3.31e-12\npolygon 42              45  2.51218e+03      3.56e-06\npolygon 43             139  3.22293e+03      4.56e-06\npolygon 44             148  3.10395e+03      4.40e-06\npolygon 45 (hole)        4 -1.72650e-04     -2.44e-13\npolygon 46              75  1.73526e+04      2.46e-05\npolygon 47              83  5.28920e+03      7.49e-06\npolygon 48             106  3.04104e+03      4.31e-06\npolygon 49             264  1.50631e+06      2.13e-03\npolygon 50              71  5.63061e+03      7.97e-06\npolygon 51              10  1.99717e+02      2.83e-07\npolygon 52 (hole)        3 -1.37223e-02     -1.94e-11\npolygon 53             487  2.06117e+06      2.92e-03\npolygon 54              65  8.42861e+04      1.19e-04\npolygon 55              47  3.82087e+04      5.41e-05\npolygon 56              22  6.74651e+03      9.55e-06\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n                     (53270 x 28810 units)\nWindow area = 706156000 square units\nFraction of frame area: 0.46\n\n\nPlot the before and after to compare the outputs Starting Locations\n\npar(mfrow=c(1,2))\npar(mar = c(3,3,2,1))\nplot(origin_ppp)\nplot(originSG_ppp)\n\n\n\n\nEnding Locations\n\npar(mfrow=c(1,2))\npar(mar = c(3,3,2,1))\nplot(dest_ppp)\nplot(destSG_ppp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-kernel-density-estimation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-kernel-density-estimation",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Computing Kernel Density Estimation",
    "text": "Computing Kernel Density Estimation"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#add-a-count-column-for-starting-and-ending-locations-in-mpsz3414",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#add-a-count-column-for-starting-and-ending-locations-in-mpsz3414",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Add a count column for starting and ending locations in mpsz3414",
    "text": "Add a count column for starting and ending locations in mpsz3414\n\n# form common identifier by passing SUBZONE_N and PLN_AREA_N over\njoined_origin &lt;- st_join(origin_sf, mpsz3414)\njoined_dest &lt;- st_join(dest_sf, mpsz3414)\n\n\n# create count number by subzone\norigin_counts &lt;- joined_origin %&gt;%\n  group_by(SUBZONE_N) %&gt;%\n  summarise(total_origin = n())\n\ndest_counts &lt;- joined_dest %&gt;%\n  group_by(SUBZONE_N) %&gt;%\n  summarise(total_dest = n())\n\n\n# insert the count columns into mpsz3414\nmpsz3414 &lt;- st_join(mpsz3414, origin_counts, by = \"SUBZONE_N\")\n\nmpsz3414 &lt;- st_join(mpsz3414, dest_counts, by = \"SUBZONE_N\")\n\n# remove the duplicated subzone column\nmpsz3414 &lt;- mpsz3414[, -which(names(mpsz3414) == \"SUBZONE_N.x\")]\nnames(mpsz3414)[names(mpsz3414) == \"SUBZONE_N.y\"] &lt;- \"SUBZONE_N\""
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choropleth-map",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choropleth-map",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Choropleth map",
    "text": "Choropleth map\n\n# set planning area as the first column so that it can be viewed for the interactive map\nmpsz3414 &lt;- mpsz3414[, c(\"SUBZONE_N\", setdiff(names(mpsz3414), \"SUBZONE_N\"))]\n\n\norigin_choropleth &lt;-\n  tm_shape(mpsz3414) +\n  tm_polygons(col=\"total_origin\",\n              palette=\"Blues\",\n              style=\"equal\",\n              n=20,\n              title=\"Pick-up Locations\") +\n  tm_layout(main.title = \"Distribution of Pick-up Locations\", main.title.size = 1, legend.width = 0.2, legend.height = 0.4) +\n  tm_basemap(\"OpenStreetMap\")\n\n\ndest_choropleth &lt;-\n  tm_shape(mpsz3414) +\n  tm_polygons(col=\"total_dest\",\n              palette=\"Blues\",\n              style=\"equal\",\n              n=20,\n              title=\"Drop-off Locations\") +\n  tm_layout(main.title = \"Distribution of Drop-off Locations\", main.title.size = 1, legend.width = 0.2, legend.height = 0.4) +\n  tm_basemap(\"OpenStreetMap\")\n\n\ntmap_mode(\"plot\")\ntmap_arrange(origin_choropleth, dest_choropleth, nrow=1)\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nAt a quick glance, we can observe that there are the most pick-up and drop-off locations at the Changi subzone. The quick inference is that there are many travellers commuting to and from the airport via Grab ride-hailing services.\nAnother two subzones, Tampines East and Xilin, also stand out for pick-up points, with each containing 600 of them.\nTampines East also contains a significant 496 drop-off points, which is the highest number of all subzones.\n\nTampines planning area has piqued my interest. Let’s have a closer look.\n\ntampines &lt;- mpsz3414[mpsz3414$PLN_AREA_N == 'TAMPINES', ]\n\nroads_tampines &lt;- sg_roads[st_intersection(sg_roads, tampines), ]\n\norigin_tampines &lt;- joined_origin[st_intersection(joined_origin, tampines), ]\n\n\ntmap_mode(\"view\")\n\ntm_basemap(\"OpenStreetMap\")+\n  tm_shape(tampines) +\n    tm_borders(lwd=0.5) +\n  tm_shape(roads_tampines) +\n    tm_lines() +\n  tm_shape(origin_tampines) +\n    tm_dots()\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nLet’s explore other areas like CBD. From prior knowledge, CBD is within the planning area of Downtown Core.\nStarting Locations\n\ndowntown_core &lt;- mpsz3414[mpsz3414$PLN_AREA_N == 'DOWNTOWN CORE', ]\n\nroads_downtown_core &lt;- sg_roads[st_intersection(sg_roads, downtown_core), ]\n\norigin_downtown_core &lt;- joined_origin[st_intersection(joined_origin, downtown_core), ]\n\n\ntmap_mode(\"view\")\n\n\ntm_basemap(\"OpenStreetMap\")+\n  tm_shape(downtown_core) +\n    tm_borders(lwd=0.5) +\n  tm_shape(roads_downtown_core) +\n    tm_lines() +\n  tm_shape(origin_downtown_core) +\n    tm_dots()\n\n\n\n\n\n\nTo gain a better initial sensing, a choropleth map of the respective locations can be plotted.\nStarting Locations\n\norigin_prop &lt;- tm_shape(mpsz_sf) +\n  tm_fill(\"prop_functional\",\n          n=10,\n          title=\"Proportion\",\n          style=\"equal\",\n          palette=\"Blues\") +\n  tm_borders(lwd=0.2,\n             alpha=1) +\n  tm_layout(main.title = \"Distribution of Pick-up Locations\",\n            legend.outside=FALSE,\n            main.title.size=1)\n\nEnding Locations*\n\ndest_prop &lt;- tm_shape(mpsz_sf) +\n  tm_fill(\"prop_functional\",\n          n=10,\n          title=\"Proportion\",\n          style=\"equal\",\n          palette=\"Blues\") +\n  tm_borders(lwd=0.2,\n             alpha=1) +\n  tm_layout(main.title = \"Distribution of Pick-up Locations\",\n            legend.outside=FALSE,\n            main.title.size=1)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#rescaling-kde-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#rescaling-kde-values",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Rescaling KDE Values",
    "text": "Rescaling KDE Values\nConvert the unit of measurement from metres to kilometres using rescale().\n\norigin_ppp.km &lt;- rescale(originSG_ppp,1000,\"km\")\ndest_ppp.km &lt;- rescale(destSG_ppp,1000,\"km\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-kde-by-using-adaptive-bandwidth",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#computing-kde-by-using-adaptive-bandwidth",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Computing KDE by using Adaptive Bandwidth",
    "text": "Computing KDE by using Adaptive Bandwidth"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "This exercise focuses on how to compute spatial weights. The objectives of it are being able to: - import geospatial data using appropriate function(s) of sf package, - import csv file using the readr package, - perform relational joins using the dplyr package, - compute spatial weights using spdep package, and - calculate spatially lagged variables using appropriate functions of spdep"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#setting-up",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#setting-up",
    "title": "Hands-on Exercise 4",
    "section": "Setting up",
    "text": "Setting up\nEnsure that the necessary packages are installed and loaded\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr,dplyr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#shapefile",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#shapefile",
    "title": "Hands-on Exercise 4",
    "section": "shapefile",
    "text": "shapefile\n\nhunan &lt;- st_read(dsn=\"data/geospatial\", layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#csv-file",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#csv-file",
    "title": "Hands-on Exercise 4",
    "section": "csv file",
    "text": "csv file\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#performing-relational-join",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#performing-relational-join",
    "title": "Hands-on Exercise 4",
    "section": "Performing relational join",
    "text": "Performing relational join\nWe can update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of the dplyr package.\n\nhunan &lt;- left_join(hunan, hunan2012, by = \"County\") %&gt;%\n  dplyr::select(1:4, 7, 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-queen-contiguity-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-queen-contiguity-based-neighbours",
    "title": "Hands-on Exercise 4",
    "section": "Computing (QUEEN) contiguity based neighbours",
    "text": "Computing (QUEEN) contiguity based neighbours\nComput the Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbour.\nFor each polygon in our polygon object, wm_q lists all neighboring polygons. For example, to see the neighbors for the first polygon in the object, type:\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nThe numbers represent the poly IDs store in the hunan SpatialPolygonsDataFrame class. Thus Polygon 1 has five neighbours as there are five numbers shown.\nThe county name of Polygon ID = 1 can be retrieved using the following:\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nThe output shows that Polygon ID = 1 is Anxiang county.\nTo reveal the county names of the five neighbouring polygons, the following code chunk will be:\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nRetrieve the GDPPC of these five counties.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nThe printed output above shows that the GDPPC of the five nearest neighbours based on Queen’s method are 20981, 34592, 24473, 21311 and 22879 respectively.\nDisplay the complete weight matrix.\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#creating-rook-contiguity-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#creating-rook-contiguity-based-neighbours",
    "title": "Hands-on Exercise 4",
    "section": "Creating (ROOK) contiguity based neighbours",
    "text": "Creating (ROOK) contiguity based neighbours\nCompute the Rook contiguity weight matrix.\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connect area unit has 10 neighbours. There are two area units with only one heighbours."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-contiguity-weights",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-contiguity-weights",
    "title": "Hands-on Exercise 4",
    "section": "Visualising contiguity weights",
    "text": "Visualising contiguity weights\nTo obtain the latitude and longitude values of polygon centroids from an “sf” object, you can use the purrr and sf packages in R.\nMake sure you have the sf and purrr packages installed and loaded in your R environment.\nAssuming you have an “sf” object named us.bound containing polygons, you can extract the centroid coordinates by applying the st_centroid() function to the geometry column of us.bound.\nUse the purrr::map_dbl() function to map the st_centroid() function over the geometry column of us.bound. This will return a vector of centroid points.\nTo obtain the longitude values, access the longitude coordinate in each centroid point using double bracket notation [[1]].\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nDo the same with latitude, just that hte double bracket notation reference should be [[2]].\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nUse cbind() to put the coordinates into the same object.\n\ncoords &lt;- cbind(longitude, latitude)\n\nCheck if things are formatted correctly.\n\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\nPlotting Queen contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\nPlotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\nPlotting both Queen & Rook contiguity-based neighbours maps\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#determine-the-cut-off-distance",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#determine-the-cut-off-distance",
    "title": "Hands-on Exercise 4",
    "section": "Determine the cut-off distance",
    "text": "Determine the cut-off distance\nFirst, determine the upper limit for distance band by using the steps below: - Return a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\n\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\nThe largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-fixed-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-fixed-distance-weight-matrix",
    "title": "Hands-on Exercise 4",
    "section": "Computing fixed distance weight matrix",
    "text": "Computing fixed distance weight matrix\nCompute the distance weight matric using dnearneigh().\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nEach region has about 3.68 neighouring regions within the spcified distance of 62 units.\n\nNext, use str() to display the content of wm_d62 weight matrix.\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\nn_comp &lt;- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\nPlotting fixed distance weight matrix\nPlot the distance weight matrix.\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\nThe red lines show the links of 1st nearest neighbours and the black lines show the links of neighbours within the cut-off distance of 62km.\nAlternatively, we can plot both of them next to each other by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-adaptive-distance-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-adaptive-distance-weight-matrix",
    "title": "Hands-on Exercise 4",
    "section": "Computing adaptive distance weight matrix",
    "text": "Computing adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\nEach county has six neighbours exactly.\n\n\nPlotting distance based neighbours\nPlot the weight matrix\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#row-standardised-weights-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#row-standardised-weights-matrix",
    "title": "Hands-on Exercise 4",
    "section": "Row-standardised weights matrix",
    "text": "Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe zero.policy=TRUE option allows for lists of non-neighbors. This should be used with caution since the user may not be aware of missing neighbors in their dataset however, a zero.policy of FALSE would return an error.\nTo see the weight of the first polygon’s eight neighbors type:\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\nEach neighbor is assigned a 0.125 of the total weight. This means that when R computes the average neighboring income values, each neighbor’s income will be multiplied by 0.2 before being tallied.\nUsing the same method, we can also derive a row standardised distance weight matrix by using the code chunk below.\n\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-with-row-standardised-weights",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-with-row-standardised-weights",
    "title": "Hands-on Exercise 4",
    "section": "Spatial lag with row-standardised weights",
    "text": "Spatial lag with row-standardised weights\nCompute the average neighbor GDPPC value for each polygon. These values are often referred to as spatially lagged values.\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nAppend the spatially lag GDPPC values onto hunan sf data frame.\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\nThe following table shows the average neighboring income values (stored in the Inc.lag object) for each county.\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nNext, we will plot both the GDPPC and spatial lag GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-as-a-sum-of-neighbouring-values",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-lag-as-a-sum-of-neighbouring-values",
    "title": "Hands-on Exercise 4",
    "section": "Spatial lag as a sum of neighbouring values",
    "text": "Spatial lag as a sum of neighbouring values\nWe can calculate spatial lag as a sum of neighboring values by assigning binary weights. This requires us to go back to our neighbors list, then apply a function that will assign binary weights, then we use glist = in the nb2listw function to explicitly assign these weights.\nWe start by applying a function that will assign a value of 1 per each neighbor. This is done with lapply, which we have been using to manipulate the neighbors structure throughout the past notebooks. Basically it applies a function across each value in the neighbors structure.\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nWith the proper weights assigned, we can use lag.listw to compute a lag variable from our weight and GDPPC.\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nNext, we will append the lag_sum GDPPC field into hunan sf data frame by using the code chunk below.\n\nhunan &lt;- left_join(hunan, lag.res)\n\nNow, We can plot both the GDPPC and Spatial Lag Sum GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-average",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-average",
    "title": "Hands-on Exercise 4",
    "section": "Spatial window average",
    "text": "Spatial window average\nThe spatial window average uses row-standardized weights and includes the diagonal element. To do this in R, we need to go back to the neighbors structure and add the diagonal element before assigning weights.\nTo add the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nTake a look at the neighbour list of area [1]\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\n\n[1] has six neighbours now instead of five.\n\nNow obtain the weights with nb2listw()\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nLastly, we just need to create the lag variable from our weight structure and GDPPC variable.\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nNext, we will convert the lag variable listw object into a data.frame by using as.data.frame().\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nNext, the code chunk below will be used to append lag_window_avg GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  dplyr::select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_gdppc and w_ave_gdppc maps next to each other for quick comparison.\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-sum",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#spatial-window-sum",
    "title": "Hands-on Exercise 4",
    "section": "Spatial window sum",
    "text": "Spatial window sum\nThe spatial window sum is the counter part of the window average, but without using row-standardized weights.\nTo add the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nNext, we will assign binary weights to the neighbour structure that includes the diagonal element.\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nNotice that now [1] has six neighbours instead of five.\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nWith our new weight structure, we can compute the lag variable with lag.listw().\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nConvert the lag variable last object into a data frame by using as.data.frame().\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\nNext, the code chunk below will be used to append w_sum GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  dplyr::select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nqtm() of tmap package is used to plot the lag_sum GDPPC and w_sum_gdppc maps next to each other for quick comparison.\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#additional-data-consolidation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#additional-data-consolidation",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Additional Data Consolidation",
    "text": "Additional Data Consolidation\nAdd a count column for starting and ending locations in mpsz3414\n\n# form common identifier by passing SUBZONE_N and PLN_AREA_N over\njoined_origin &lt;- st_join(origin_sf, mpsz3414)\njoined_dest &lt;- st_join(dest_sf, mpsz3414)\n\n\n# create count number by subzone\norigin_counts &lt;- joined_origin %&gt;%\n  group_by(SUBZONE_N) %&gt;%\n  summarise(total_origin = n())\n\ndest_counts &lt;- joined_dest %&gt;%\n  group_by(SUBZONE_N) %&gt;%\n  summarise(total_dest = n())\n\n\n# insert the count columns into mpsz3414\nmpsz3414 &lt;- st_join(mpsz3414, origin_counts, by = \"SUBZONE_N\")\n\nmpsz3414 &lt;- st_join(mpsz3414, dest_counts, by = \"SUBZONE_N\")\n\n# remove the duplicated subzone columns\nmpsz3414 &lt;- mpsz3414[, !names(mpsz3414) %in% c(\"SUBZONE_N.x\", \"SUBZONE_N.y\")]\n\nFirst let’s check for any null values.\n\nany(is.na(mpsz3414$total_origin))\n\n[1] TRUE\n\nany(is.na(mpsz3414$total_dest))\n\n[1] TRUE\n\n\nFill NA with zero using coalesce() from dplyr.\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(total_origin = coalesce(total_origin, 0),\n         prop_origin = total_origin / sum(total_origin))\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(total_dest = coalesce(total_dest, 0),\n         prop_dest = total_dest / sum(total_dest))\n\n\nany(is.na(mpsz3414$total_origin))\n\n[1] FALSE\n\nany(is.na(mpsz3414$total_dest))\n\n[1] FALSE\n\nclass(mpsz3414)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\nNow there are no null values.\n\nSince I have added critical data in mpsz3414, it is easier to plot the choropleth from the it. However, mpsz3414 is missing the geometry attribute. So let’s insert it from mpsz_sf.\n\n# reorder columns for readability\nmpsz3414 &lt;- mpsz3414[c(\"SUBZONE_N\", \"PLN_AREA_N\", \"Name\", \"total_origin\", \"prop_origin\", \"total_dest\", \"prop_dest\", \"geometry\")]"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choropleth-maps",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#choropleth-maps",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nNow, let’s have a general overview of the distribution of pick-up and drop-off points.\nStarting Locations\n\ntmap_options(check.and.fix = TRUE)\n\norigin_choropleth &lt;-\ntm_shape(mpsz3414) +\n  tm_fill(\"prop_origin\",\n          n=10,\n          title=\"Proportion\",\n          style=\"equal\",\n          palette=\"YlOrRd\") +\n  tm_borders(lwd=0.2,\n             alpha=1) +\n  tm_layout(main.title = \"Distribution of Pick-up Points\",\n            legend.outside=FALSE,\n            main.title.size=1)\n\nEnding Locations\n\ndest_choropleth &lt;-\ntm_shape(mpsz3414) +\n  tm_fill(\"prop_dest\",\n          n=10,\n          title=\"Proportion\",\n          style=\"equal\",\n          palette=\"YlOrRd\") +\n  tm_borders(lwd=0.2,\n             alpha=1) +\n  tm_layout(main.title = \"Distribution of Drop-off Points\",\n            legend.outside=FALSE,\n            main.title.size=1) \n\nComparing Starting and Ending Locations\n\ntmap_mode(\"plot\")\ntmap_arrange(origin_choropleth, dest_choropleth, nrow=1)\n\n\n\n\n\nAt a quick glance, we can observe that there are the most pick-up and drop-off locations at the Changi Airport subzone. The quick inference is that there are many travellers commuting to and from the airport via Grab ride-hailing services."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#locations-with-top-proportions",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#locations-with-top-proportions",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Locations with top proportions",
    "text": "Locations with top proportions\nSort prop_origin in descending order using desc().\n\norigin_top &lt;- mpsz3414 %&gt;%\n  arrange(desc(prop_origin)) %&gt;%\n  slice(1:10)\n\norigin_top &lt;- origin_top[, c(\"SUBZONE_N\", \"PLN_AREA_N\", \"total_origin\", \"prop_origin\")]\n\norigin_top\n\nSimple feature collection with 10 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 11411.94 ymin: 31874.91 xmax: 50271.73 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n         SUBZONE_N  PLN_AREA_N total_origin prop_origin\n1   CHANGI AIRPORT      CHANGI         1456  0.05200000\n2            XILIN    TAMPINES          660  0.02357143\n3    TAMPINES EAST    TAMPINES          600  0.02142857\n4   WOODLANDS EAST   WOODLANDS          474  0.01692857\n5            SIMEI    TAMPINES          418  0.01492857\n6           YUNNAN JURONG WEST          403  0.01439286\n7   WOODLANDS WEST   WOODLANDS          367  0.01310714\n8        WOODGROVE   WOODLANDS          362  0.01292857\n9         ALJUNIED     GEYLANG          305  0.01089286\n10 WOODLANDS SOUTH   WOODLANDS          305  0.01089286\n                         geometry\n1  MULTIPOLYGON (((45818.88 41...\n2  MULTIPOLYGON (((44832.31 33...\n3  MULTIPOLYGON (((42196.76 38...\n4  MULTIPOLYGON (((24786.75 46...\n5  MULTIPOLYGON (((42267.54 36...\n6  MULTIPOLYGON (((12670.56 35...\n7  MULTIPOLYGON (((21900.33 45...\n8  MULTIPOLYGON (((22694.69 46...\n9  MULTIPOLYGON (((34449.13 33...\n10 MULTIPOLYGON (((24091.47 46...\n\n\nSort prop_dest in descending order using desc().\n\ndest_top &lt;- mpsz3414 %&gt;%\n  arrange(desc(prop_dest)) %&gt;%\n  slice(1:10) \n\ndest_top &lt;- dest_top[, c(\"SUBZONE_N\", \"PLN_AREA_N\", \"total_dest\", \"prop_dest\")]\n\ndest_top\n\nSimple feature collection with 10 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 20830.46 ymin: 31874.91 xmax: 50271.73 ymax: 46337.37\nProjected CRS: SVY21 / Singapore TM\n                 SUBZONE_N              PLN_AREA_N total_dest  prop_dest\n1           CHANGI AIRPORT                  CHANGI       1633 0.05832768\n2            TAMPINES EAST                TAMPINES        496 0.01771618\n3                    XILIN                TAMPINES        409 0.01460871\n4  CENTRAL WATER CATCHMENT CENTRAL WATER CATCHMENT        406 0.01450155\n5                WOODGROVE               WOODLANDS        350 0.01250134\n6             KAMPONG JAVA                 KALLANG        340 0.01214416\n7               SWISS CLUB             BUKIT TIMAH        330 0.01178698\n8                 ALJUNIED                 GEYLANG        326 0.01164410\n9                BENDEMEER                 KALLANG        296 0.01057256\n10               HILLCREST             BUKIT TIMAH        296 0.01057256\n                         geometry\n1  MULTIPOLYGON (((45818.88 41...\n2  MULTIPOLYGON (((42196.76 38...\n3  MULTIPOLYGON (((44832.31 33...\n4  MULTIPOLYGON (((25073.29 43...\n5  MULTIPOLYGON (((22694.69 46...\n6  MULTIPOLYGON (((30089.09 32...\n7  MULTIPOLYGON (((24031.39 36...\n8  MULTIPOLYGON (((34449.13 33...\n9  MULTIPOLYGON (((31277.37 34...\n10 MULTIPOLYGON (((25392.54 35...\n\n\n\nAfter Changi, planning areas like Tampines- and Woodlands-related subzones are in the top 10 for the proportions of pick-up and drop-off locations.\nInterestingly, Central Water Catchment planning area is one of the top few drop-off locations.\n\n\nTampines\nThe Tampines planning area has piqued my interest. Let’s have a closer look.\n\ntampines &lt;- mpsz3414[mpsz3414$PLN_AREA_N == 'TAMPINES', ]\n\nroads_tampines &lt;- sg_roads[st_intersection(sg_roads, tampines), ]\n\norigin_tampines &lt;- joined_origin[st_intersection(joined_origin, tampines), ]\n\n\ntmap_mode(\"plot\")\n\ntm_basemap(\"OpenStreetMap\")+\n  tm_shape(tampines) +\n    tm_borders(lwd=0.5) +\n  tm_shape(roads_tampines) +\n    tm_lines() +\n  tm_shape(origin_tampines) +\n    tm_dots()\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n\nWoodlands\n\nwoodlands &lt;- mpsz3414[mpsz3414$PLN_AREA_N == 'WOODLANDS', ]\n\nroads_woodlands &lt;- sg_roads[st_intersection(sg_roads, woodlands), ]\n\norigin_woodlands &lt;- joined_origin[st_intersection(joined_origin, woodlands), ]\n\n\ntmap_mode(\"plot\")\n\ntm_basemap(\"OpenStreetMap\")+\n  tm_shape(woodlands) +\n    tm_borders(lwd=0.5) +\n  tm_shape(roads_woodlands) +\n    tm_lines() +\n  tm_shape(origin_woodlands) +\n    tm_dots()\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n\nCentral Water Catchment (CWC)\nSince CWC area popped up as one of the top ten drop off locations, we should specify joined dest.\n\ncwc &lt;- mpsz3414[mpsz3414$PLN_AREA_N == 'CENTRAL WATER CATCHMENT', ]\n\nroads_cwc &lt;- sg_roads[st_intersection(sg_roads, cwc), ]\n\ndest_cwc &lt;- joined_dest[st_intersection(joined_dest, cwc), ]\n\n\ntmap_mode(\"plot\")\n\n\ntm_basemap(\"OpenStreetMap\")+\n  tm_shape(cwc) +\n    tm_borders(lwd=0.5) +\n  tm_shape(roads_cwc) +\n    tm_lines() +\n  tm_shape(dest_cwc) +\n    tm_dots()\n\n\n\n\n\n\n\n\n\n\nInteresting\n\n\n\nMany of the drop-off points are along the parameters of the CWC planning area!\n\n\n\ntmap_mode(\"plot\")\n\n\n\nDowntown Core\nLet’s explore other areas like CBD as my assumption is that office workers might use Grab to travel to their workplaces. From prior knowledge, CBD is within the planning area of Downtown Core.\nStarting Locations\n\ndowntown_core &lt;- mpsz3414[mpsz3414$PLN_AREA_N == 'DOWNTOWN CORE', ]\n\nroads_downtown_core &lt;- sg_roads[st_intersection(sg_roads, downtown_core), ]\n\norigin_downtown_core &lt;- joined_origin[st_intersection(joined_origin, downtown_core), ]\n\n\ntmap_mode(\"plot\")\n\n\ntm_basemap(\"OpenStreetMap\")+\n  tm_shape(downtown_core) +\n    tm_borders(lwd=0.5) +\n  tm_shape(roads_downtown_core) +\n    tm_lines() +\n  tm_shape(origin_downtown_core) +\n    tm_dots()\n\n\n\n\n\n\n\n\n\n\nInteresting\n\n\n\nCompared to the sparse distribution of points previously for CWC, the pick-up points seem to be distributed all over the roads in CBD.\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-spatial-point-patterns-using-kde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-spatial-point-patterns-using-kde",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Comparing Spatial Point Patterns using KDE",
    "text": "Comparing Spatial Point Patterns using KDE\nHere, we shall compare the kernel density estimation of pick-up and drop-off points at the pre-selected planning areas.\n\nCreate owin object\nConvert the SpatialPolygons objects into owin objects as required by spatstat.\n\ntm_owin &lt;- as.owin(tampines)\nwd_owin &lt;- as.owin(woodlands)\ndt_owin &lt;- as.owin(downtown_core)\ncwc_owin &lt;- as.owin(cwc)\n\n\n\nCombining points and the interested areas\nExtract the pick-up and drop-off points within each of the study planning areas.\nInterested Starting Locations\n\norigin_tm_ppp = origin_ppp[tm_owin]\norigin_wd_ppp = origin_ppp[wd_owin]\norigin_dt_ppp = origin_ppp[dt_owin]\norigin\n\nstandardGeneric for \"origin\" defined from package \"terra\"\n\nfunction (x, ...) \nstandardGeneric(\"origin\")\n&lt;bytecode: 0x0000011a8589db40&gt;\n&lt;environment: 0x0000011a858a1f88&gt;\nMethods may be defined for arguments: x\nUse  showMethods(origin)  for currently available ones.\n\n\n\n\n\n\n\n\nNote\n\n\n\nUsing origin_ppp or originSG_ppp does not matter as the restriction to the various planning area object windows will extract the necessary points.\n\n\nLet’s use rescale() to transform the unit of measurement from metres to kilometres.\n\norigin_tm_ppp.km = rescale(origin_tm_ppp, 1000, \"km\")\norigin_wd_ppp.km = rescale(origin_wd_ppp, 1000, \"km\")\norigin_dt_ppp.km = rescale(origin_dt_ppp, 1000, \"km\")\n\nThen look at the output.\n\npar(mfrow=c(2,2))\npar(mar = c(3,3,2,1))\nplot(origin_tm_ppp.km, main= \"Origin Tampines\")\nplot(origin_wd_ppp.km, main= \"Origin Woodlands\")\nplot(origin_dt_ppp.km, main= \"Origin Downtown Core\")\n\n\n\n\nRepeat the same steps for the interested ending locations!\nInterested Ending Locations\n\ndest_tm_ppp = dest_ppp[tm_owin]\ndest_wd_ppp = dest_ppp[wd_owin]\ndest_dt_ppp = dest_ppp[dt_owin]\ndest_cwc_ppp = dest_ppp[cwc_owin]\n\nLet’s use rescale() to transform the unit of measurement from metres to kilometres.\n\ndest_tm_ppp.km = rescale(dest_tm_ppp, 1000, \"km\")\ndest_wd_ppp.km = rescale(dest_wd_ppp, 1000, \"km\")\ndest_dt_ppp.km = rescale(dest_dt_ppp, 1000, \"km\")\ndest_cwc_ppp.km = rescale(dest_cwc_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\npar(mar = c(3,3,2,1))\nplot(dest_tm_ppp, main= \"Dest Tampines\")\nplot(dest_wd_ppp, main= \"Dest Woodlands\")\nplot(dest_dt_ppp, main= \"Dest Downtown Core\")\nplot(dest_cwc_ppp, main=\"Dest CWC\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#bandwidth-methods",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#bandwidth-methods",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Bandwidth Methods",
    "text": "Bandwidth Methods\nThere are multiple methods in determining the bandwidth type to use for kernel density. Here, let’s experiment with the different bandwidth methods before proceeding further.\n\nAutomatic Bandwidth Selection\nThe purpose for this project is to visualise where the pick-up and drop-off points are clustered. Let’s observe the cluster visualisations produced by the various bandwidth functions.\n\n\nInterested Starting Locations\n###Tampines\n\n\nbw.CvL\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.CvL,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tamp Origin CvL\")\n\n\n\n\n\n\nbw.scott\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.scott,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tamp Origin scott\")\n\n\n\n\n\n\nbw.diggle\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tamp Origin diggle\")\n\n\n\n\n\n\nbw.ppl\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tamp Origin ppl\")\n\n\n\n\n\n\n\nFrom the visualisations of Tampines, let’s go ahead with bw.diggle for the Tampines starting locations.\n\n\n\nWoodlands\n\nbw.CvLbw.scottbw.digglebw.ppl\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.CvL,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Origin CvL\")\n\n\n\n\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.scott,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Origin scott\")\n\n\n\n\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Origin diggle\")\n\n\n\n\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Origin ppl\")\n\n\n\n\n\n\n\n\nThe bw.ppl method can be used as it shows better visualisation of predominant tight clusters in Woodlands.\n\n\n\nDowntown Core\n\nbw.CvLbw.scottbw.digglebw.ppl\n\n\n\nplot(density(origin_dt_ppp.km,\n        sigma=bw.CvL,\n        edge=TRUE,\n        kernel=\"gaussian\"),\n        main=\"Downtown Origin CvL\")\n\n\n\n\n\n\n\nplot(density(origin_dt_ppp.km,\n        sigma=bw.scott,\n        edge=TRUE,\n        kernel=\"gaussian\"),\n        main=\"Downtown Origin scott\")\n\n\n\n\n\n\n\nplot(density(origin_dt_ppp.km,\n        sigma=bw.diggle,\n        edge=TRUE,\n        kernel=\"gaussian\"),\n        main=\"Downtown Origin\")\n\n\n\n\n\n\n\nplot(density(origin_dt_ppp.km,\n        sigma=bw.ppl,\n        edge=TRUE,\n        kernel=\"gaussian\"),\n        main=\"Downtown Origin ppl\")\n\n\n\n\n\n\n\n\nThe bw.ppl method also seems to produce the best visualisation for CBD Downtown Core.\n\n\n\nInterested Ending Locations\n\n\nTampines\n\nbw.CvLbw.scottbw.digglebw.ppl\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.CvL,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tampines Dest CvL\")\n\n\n\n\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.scott,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tampines Dest scott\")\n\n\n\n\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tampines Dest diggle\")\n\n\n\n\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Tampines Dest ppl\")\n\n\n\n\n\n\n\n\nIn my opinion, the bw.ppl method showcases tighter clusters better than bw.diggle. Hence the bw.diggle method will be used for the Tampines drop-off locations.\n\n\n\nWoodlands\n\nbw.CvLbw.scottbw.digglebw.ppl\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.CvL,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Dest CvL\")\n\n\n\n\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.scott,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Dest scott\")\n\n\n\n\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Dest diggle\")\n\n\n\n\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"Woodlands Dest ppl\")\n\n\n\n\n\n\n\n\nThe bw.ppl method seems to work best for the Woodlands drop-off locations.\n\nCentral Water Catchment\n\nbw.CvLbw.scottbw.digglebw.ppl\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.CvL,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"CWC Dest CvL\")\n\n\n\n\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.scott,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"CWC Dest scott\")\n\n\n\n\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"CWC Dest diggle\")\n\n\n\n\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n             main=\"CWC Dest ppl\")\n\n\n\n\n\n\n\n\nAgain, the bw.ppl method seems to work best for the Central Water Catchment drop-off points.\n\nTo summarise the automatic bandwidth selection process, the bw.ppl method is chosen for all areas of interest except for Tampines Pick-ups.\nBaddeley et al. (2016) suggested the use of bw.ppl() algorithm because in their experience, the algorithm tends to produce the more appropriate values when the pattern consists predominantly tight clusters.\nHowever, they also insist that if the purpose is to detect a single tight cluster in the midst of random noise then bw.diggle() is the best. Thus we can test for this using the Tampines Pick-ups."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-method",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-method",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Kernel Method",
    "text": "Kernel Method\nThe different kernel methods are demonstrated below.\n\nInterested Starting Locations\n\n\nTampines\n\nGaussianQuadratic (Epanechnikov)QuarticDisc\n\n\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\n\n\n\n\n\n\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"epanechnikov\"),\n     main=\"Quadratic\")\n\n\n\n\n\n\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"quartic\"),\n     main=\"Quartic\")\n\n\n\n\n\n\n\nplot(density(origin_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"disc\"),\n     main=\"Disc\")\n\n\n\n\n\n\n\n\nThere are no significant differences observed across the Tampines Origin kernels, so we will use the default which is Gaussian.\n\n\n\nWoodlands\n\nGaussianQuadratic (Epanechnikov)QuarticDisc\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\n\n\n\n\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"epanechnikov\"),\n     main=\"Quadratic\")\n\n\n\n\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"quartic\"),\n     main=\"Quartic\")\n\n\n\n\n\n\n\nplot(density(origin_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"disc\"),\n     main=\"Disc\")\n\n\n\n\n\n\n\n\nFor Woodlands pick-ups, the disc kernel method seems best for visualisation.\n\n\n\nDowntown Core (CBD)\n:::{.panel-tabset}\n\nGaussian\n\nplot(density(origin_dt_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\n\n\n\n\n\n\nQuadratic (Epanechnikov)\n\nplot(density(origin_dt_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"epanechnikov\"),\n     main=\"Quadratic\")\n\n\n\n\n\n\nQuartic\n\nplot(density(origin_dt_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"quartic\"),\n     main=\"Quartic\")\n\n\n\n\n\n\nDisc\n\nplot(density(origin_dt_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"disc\"),\n     main=\"Disc\")\n\n\n\n\n\nThe visualisation outputs across the kernel methods are similar, hence we will adopt the default Gaussian kernel method for CBD pick-ups.\n\n\n\n\nInterested Ending Locations\n\n\nTampines\n\nGaussianQuadratic (Epanechnikov)QuarticDisc\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\n\n\n\n\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"epanechnikov\"),\n     main=\"Epanechnikov\")\n\n\n\n\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"quartic\"),\n     main=\"Quartic\")\n\n\n\n\n\n\n\nplot(density(dest_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"disc\"),\n     main=\"Disc\")\n\n\n\n\n\n\n\n\nThe visualisation outputs across the kernel methods are similar, hence we will adopt the default Gaussian kernel method for Tampines drop-offs.\n\n\n\nWoodlands\n\nGaussianQuadratic (Epanechnikov)QuarticDisc\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\n\n\n\n\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"epanechnikov\"),\n     main=\"Epanechnikov\")\n\n\n\n\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"quartic\"),\n     main=\"Quartic\")\n\n\n\n\n\n\n\nplot(density(dest_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"disc\"),\n     main=\"Disc\")\n\n\n\n\n\n\n\n\nThe visualisation outputs across the kernel methods are similar, hence we will adopt the default Gaussian kernel method for Woodlands drop-offs.\n\nCWC\n\nGaussianQuadratic (Epanechnikov)QuarticDisc\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\"),\n     main=\"Gaussian\")\n\n\n\n\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"epanechnikov\"),\n     main=\"Epanechnikov\")\n\n\n\n\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"quartic\"),\n     main=\"Quartic\")\n\n\n\n\n\n\n\nplot(density(dest_cwc_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"disc\"),\n     main=\"Disc\")\n\n\n\n\n\n\n\n\nThe visualisation outputs across the kernel methods are similar, hence we will adopt the default Gaussian kernel method for Woodlands drop-offs."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-to-spatial-grid-data-frame",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#converting-to-spatial-grid-data-frame",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Converting to Spatial Grid Data Frame",
    "text": "Converting to Spatial Grid Data Frame\nFirst set the KDE maps into Spatial Grids.\n\ngridded_kde_origin_tm_bw &lt;- as(kde_origin_tm.bw, \"SpatialGridDataFrame\")\n\ngridded_kde_origin_wd_bw &lt;- as(kde_origin_wd.bw, \"SpatialGridDataFrame\")\n\ngridded_kde_origin_dt_bw &lt;- as(kde_origin_dt.bw, \"SpatialGridDataFrame\")\n\ngridded_kde_dest_tm_bw &lt;- as(kde_dest_tm.bw, \"SpatialGridDataFrame\")\n\ngridded_kde_dest_wd_bw &lt;- as(kde_dest_wd.bw, \"SpatialGridDataFrame\")\n\ngridded_kde_dest_cwc_bw &lt;- as(kde_dest_cwc.bw, \"SpatialGridDataFrame\")\n\nView the gridded outputs.\n\nTampines OriginWoodlands OriginDowntown Core OriginTampines DestinationWoodlands DestinationCentral Water Catchment\n\n\n\nspplot(gridded_kde_origin_tm_bw)\n\n\n\n\n\n\n\nspplot(gridded_kde_origin_wd_bw)\n\n\n\n\n\n\n\nspplot(gridded_kde_origin_dt_bw)\n\n\n\n\n\n\n\nspplot(gridded_kde_dest_tm_bw)\n\n\n\n\n\n\n\nspplot(gridded_kde_dest_wd_bw)\n\n\n\n\n\n\n\nspplot(gridded_kde_dest_cwc_bw)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#rasterisation-of-grid-outputs",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#rasterisation-of-grid-outputs",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Rasterisation of Grid Outputs",
    "text": "Rasterisation of Grid Outputs\nConvert the gridded outputs into rasters.\n\nkde_origin_tm_bw_raster &lt;- raster(gridded_kde_origin_tm_bw)\n\nkde_origin_wd_bw_raster &lt;- raster(gridded_kde_origin_wd_bw)\n\nkde_origin_dt_bw_raster &lt;- raster(gridded_kde_origin_dt_bw)\n\nkde_dest_tm_bw_raster &lt;- raster(gridded_kde_dest_tm_bw)\n\nkde_dest_wd_bw_raster &lt;- raster(gridded_kde_dest_wd_bw)\n\nkde_dest_cwc_bw_raster &lt;- raster(gridded_kde_dest_cwc_bw)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#assigning-projection-systems",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#assigning-projection-systems",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Assigning Projection Systems",
    "text": "Assigning Projection Systems\nNow include the CRS information.\n\nprojection(kde_origin_tm_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\n\nprojection(kde_origin_wd_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\n\nprojection(kde_origin_dt_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\n\nprojection(kde_dest_tm_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\n\nprojection(kde_dest_wd_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\n\nprojection(kde_dest_cwc_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualise-tmap-outputs",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualise-tmap-outputs",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Visualise tmap Outputs",
    "text": "Visualise tmap Outputs\n::: panel-tabset ## Tampines Origin\n\ntmap_mode(\"plot\")\ntm_shape(kde_origin_tm_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"left\",\"bottom\"),frame=FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#segmentation-snapping",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#segmentation-snapping",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Segmentation & Snapping",
    "text": "Segmentation & Snapping\nTo perform NKDE, events like pick-up and drop-off points need to be snapped onto the road network. This will enable the lines to gain the necessary spatial weights based on point events.\n\n\n\nSnapped events are shown in green (Credit: Jeremy Gelb, 2024)\n\n\nCreate the line segments for all the road networks of our areas of interest.\n\n\n\n\n\n\nDetermining the maximum distance\n\n\n\nLocals often walk up to 80 metres to hop onto their Grab vehicle.\n\n\nPlot out the network densities\nTampines"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#origin-nkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#origin-nkde",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Origin NKDE",
    "text": "Origin NKDE\n\nunique_types &lt;- unique(st_geometry_type(roads_tampines))\n\n# debugging: filter roads_tampines to keep only linestrings\nif (\"LINESTRING\" %in% unique_types) {\n  roads_tampines &lt;- st_cast(roads_tampines, \"LINESTRING\")\n} else {\n  # handle the case when no linestrings are found\n  stop(\"No linestrings found in roads_tampines.\")\n}\nlixels_tm &lt;- lixelize_lines(roads_tampines,\n                         80,\n                         mindist=40)\n\nsamples_tm &lt;- lines_center(lixels_tm)\n\ndensities_tm_origin &lt;- nkde(roads_tampines, \n                  events = origin_tampines,\n                  w = rep(1,nrow(origin_tampines)),\n                  samples = samples_tm,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\nsamples_tm$density_origin &lt;- densities_tm_origin\nlixels_tm$density_origin &lt;- densities_tm_origin\n\nsamples_tm$density_origin &lt;- samples_tm$density_origin*1000\nlixels_tm$density_origin &lt;- lixels_tm$density_origin*1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_tm)+\n  tm_lines(col=\"density_origin\")+\ntm_shape(origin_tampines)+\n  tm_dots(alpha=0.1) +\ntm_basemap(\"OpenStreetMap\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#destination-nkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#destination-nkde",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Destination NKDE",
    "text": "Destination NKDE\n\ndest_tampines &lt;- joined_dest[st_intersection(joined_dest, tampines), ]\n\ndensities_tm_dest &lt;- nkde(roads_tampines, \n                  events = dest_tampines,\n                  w = rep(1,nrow(dest_tampines)),\n                  samples = samples_tm,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\nsamples_tm$density_dest &lt;- densities_tm_dest\nlixels_tm$density_dest &lt;- densities_tm_dest\n\nsamples_tm$density_dest &lt;- samples_tm$density_dest*1000\nlixels_tm$density_dest &lt;- lixels_tm$density_dest*1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_tm)+\n  tm_lines(col=\"density_dest\")+\ntm_shape(origin_tampines)+\n  tm_dots(alpha=0.1) +\ntm_basemap(\"OpenStreetMap\")\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#analysis-of-tampines",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#analysis-of-tampines",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Analysis of Tampines",
    "text": "Analysis of Tampines\n\nOrigin: KDE vs NKDE\nBased on the traditional KDE results, we can generally comment that the densest cluster of pick-up points amounting up to 12,000 is concentrated at the north-eastern ridge of Tampines, which in particular lies in Xilin Subzone (Simei). However, this most significant finding from the KDE result overlooks at the insights from the NKDE results featuring the varying intensities of road utility in Tampines.\nFor the Tampines pick-ups, it seems that there are a few more intense road networks. First, there is an intensity value of up to 0.8 at the cross junction of Xilin Avenue and Upper Changi Road East (i.e. southwestern ridge of ITE College East), and at the T-junction intersecting Simei St 3 and Simei Avenue providing values (i.e. Southeast of Changi General Hospital) of up to 0.8. Furthermore, there is an intensity value of up to 0.6 at the cross-junction of Sompah Road and Upper Changi Road East that is adjacent to the southwestern corner of SUTD.\n\n\n\n\n\n\nIdea\n\n\n\nThese highlighted areas can suggest that people leaving work or appointments utilise Grab services. We can try to verify this with Temporal Network Kernel Density Estimation later!\n\n\nThe other prominent location is Tampines Ave 2, along the same side as Blk 302, as it has the highest NKDE value of up to 1.0. Given the high concentration of activity along this bus stop road, it may be advisable for Grab users to choose a different pick-up location since this road seems congested with just Grab data alone. The actual NKDE of this road stretch may be significantly higher if we considered the buses.\n\n\n\n\n\n\nIdea\n\n\n\nAn interesting fact to note is that this road is always congested during peak morning hours. I experience this first-hand on a regular basis while waiting for a long time for my bus at Block 302! I hypothesise that there are more Grab pick-ups in the morning than at night, so we may explore any temporal differences later!\n\n\n\n\nNKDE: Origin vs Destination\nA similarity across the pick-up and drop-offs is that the road along Blk 302 remains as one of the most intense and thus many Grab rides either start or end along this stretch. However, the intensity of drop-offs here is lower at 0.6, which shows that there is a comparatively lower drop-off occurrences here than pick-ups.\nNevertheless, the greatest NKDE value for drop-offs in Tampines is situated at the cross junction of Tampines Ave 2 and Simei Avenue, where neighbourhood hub spots like SAFRA Tampines and Tampines Round Market are at. When Grab users are going to Tampines, they could be intending to use recreational facilities or to eat at economical hawker food.\n(TBC possibly with NKDE analysis of other locations and TKDE.)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#origin-kde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#origin-kde",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Origin KDE",
    "text": "Origin KDE\n\ntmap_mode(\"plot\")\ntm_shape(kde_origin_tm_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"left\",\"bottom\"),frame=FALSE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr,dplyr, GWmodel)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#fyi",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#fyi",
    "title": "In-class Exercise 4",
    "section": "FYI",
    "text": "FYI\nGWmodel has not migrated, so the data has to be defined as sp object class as mentioned in the documentation, p. 81."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html",
    "title": "Take-home Exercise 1 Report",
    "section": "",
    "text": "Since we are plotting histograms and interactive maps, we will need to import tmap and ggplot2 respectively. The files I am importing also need to rely on tidyverse. Other geowrangling and plotting tools like sf and spNetwork are required too.\n\npacman::p_load(tmap, ggplot2, tidyverse, sf, spNetwork)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#importing-data",
    "title": "Take-home Exercise 1 Report",
    "section": "Importing data",
    "text": "Importing data\n\n# import\nroads_tampines &lt;- read_rds(\"data/analysis/roads_tampines.rds\")\norigin_tampines &lt;- read_rds(\"data/analysis/origin_tampines.rds\")\ndest_tampines &lt;- read_rds(\"data/analysis/dest_tampines.rds\")\n\nroads_downtown_core &lt;- read_rds(\"data/analysis/roads_downtown_core.rds\")\norigin_downtown_core &lt;- read_rds(\"data/analysis/origin_downtown_core.rds\")\n\nroads_woodlands &lt;- read_rds(\"data/analysis/roads_woodlands.rds\")\norigin_woodlands &lt;- read_rds(\"data/analysis/origin_woodlands.rds\")\n\nroads_cwc &lt;- read_rds(\"data/analysis/roads_cwc.rds\")\ndest_cwc &lt;- read_rds(\"data/analysis/dest_cwc.rds\")\n\nmpsz3414 &lt;- st_read(\"data/geospatial/mpsz.shp\")\n\nReading layer `mpsz' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial\\mpsz.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz3414 &lt;- st_transform(mpsz3414, 3414)\nsummary(mpsz3414)\n\n     Name            SUBZONE_N          PLN_AREA_N                 geometry  \n Length:332         Length:332         Length:332         MULTIPOLYGON :332  \n Class :character   Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   Mode  :character   +proj=tmer...:  0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#segmentation-snapping",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#segmentation-snapping",
    "title": "Take-home Exercise 1 Report",
    "section": "Segmentation & Snapping",
    "text": "Segmentation & Snapping\nTo perform NKDE, events like pick-up and drop-off points need to be snapped onto the road network. This will enable the lines to gain the necessary spatial weights based on point events.\n\n\n\nSnapped events are shown in green (Credit: Jeremy Gelb, 2024)\n\n\nCreate the line segments for all the road networks of our areas of interest.\n\n\n\n\n\n\nDetermining the maximum distance\n\n\n\nLocals often walk up to 80 metres to hop onto their Grab vehicle.\n\n\nPlot out the network densities\nTampines"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#origin-kde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#origin-kde",
    "title": "Take-home Exercise 1 Report",
    "section": "Origin KDE",
    "text": "Origin KDE\n\ntmap_mode(\"plot\")\ntm_shape(kde_origin_tm_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"left\",\"bottom\"),frame=FALSE)\n\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#origin-nkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#origin-nkde",
    "title": "Take-home Exercise 1 Report",
    "section": "Origin NKDE",
    "text": "Origin NKDE\n\nunique_types &lt;- unique(st_geometry_type(roads_tampines))\n\n# debugging: filter roads_tampines to keep only linestrings\nif (\"LINESTRING\" %in% unique_types) {\n  roads_tampines &lt;- st_cast(roads_tampines, \"LINESTRING\")\n} else {\n  # handle the case when no linestrings are found\n  stop(\"No linestrings found in roads_tampines.\")\n}\nlixels_tm &lt;- lixelize_lines(roads_tampines,\n                         80,\n                         mindist=40)\n\nsamples_tm &lt;- lines_center(lixels_tm)\n\ndensities_tm_origin &lt;- nkde(roads_tampines, \n                  events = origin_tampines,\n                  w = rep(1,nrow(origin_tampines)),\n                  samples = samples_tm,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\nsamples_tm$density_origin &lt;- densities_tm_origin\nlixels_tm$density_origin &lt;- densities_tm_origin\n\nsamples_tm$density_origin &lt;- samples_tm$density_origin*1000\nlixels_tm$density_origin &lt;- lixels_tm$density_origin*1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_tm)+\n  tm_lines(col=\"density_origin\")+\ntm_shape(origin_tampines)+\n  tm_dots(alpha=0.1) +\ntm_basemap(\"OpenStreetMap\")\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#destination-nkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#destination-nkde",
    "title": "Take-home Exercise 1 Report",
    "section": "Destination NKDE",
    "text": "Destination NKDE\n\n#dest_tampines &lt;- joined_dest[st_intersection(joined_dest, tampines), ]\n\ndensities_tm_dest &lt;- nkde(roads_tampines, \n                  events = dest_tampines,\n                  w = rep(1,nrow(dest_tampines)),\n                  samples = samples_tm,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\nsamples_tm$density_dest &lt;- densities_tm_dest\nlixels_tm$density_dest &lt;- densities_tm_dest\n\nsamples_tm$density_dest &lt;- samples_tm$density_dest*1000\nlixels_tm$density_dest &lt;- lixels_tm$density_dest*1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_tm)+\n  tm_lines(col=\"density_dest\")+\ntm_shape(origin_tampines)+\n  tm_dots(alpha=0.1) +\ntm_basemap(\"OpenStreetMap\")\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#destination-nkde-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#destination-nkde-1",
    "title": "Take-home Exercise 1 Report",
    "section": "Destination NKDE",
    "text": "Destination NKDE\n\n#dest_cwc &lt;- joined_dest[st_intersection(joined_dest, cwc), ]\n\nunique_types &lt;- unique(st_geometry_type(roads_cwc))\n\n# debugging: filter roads_cwc to keep only linestrings\nif (\"LINESTRING\" %in% unique_types) {\n  roads_cwc &lt;- st_cast(roads_cwc, \"LINESTRING\")\n} else {\n  # handle the case when no linestrings are found\n  stop(\"No linestrings found in roads_cwc.\")\n}\nlixels_cwc &lt;- lixelize_lines(roads_cwc,\n                         80,\n                         mindist=40)\n\nsamples_cwc &lt;- lines_center(lixels_cwc)\n\ndensities_cwc_dest &lt;- nkde(roads_cwc, \n                  events = dest_cwc,\n                  w = rep(1,nrow(dest_cwc)),\n                  samples = samples_cwc,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\nsamples_cwc$density_dest &lt;- densities_cwc_dest\nlixels_cwc$density_dest &lt;- densities_cwc_dest\n\nsamples_cwc$density_dest &lt;- samples_cwc$density_dest*1000\nlixels_cwc$density_dest &lt;- lixels_cwc$density_dest*1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_cwc)+\n  tm_lines(col=\"density_dest\")+\ntm_shape(dest_cwc)+\n  tm_dots(alpha=0.1) +\ntm_basemap(\"OpenStreetMap\") +\ntm_scale_bar()\n\n\n\n\n\n\nThere is a particular within the Central Water Catchment (CWC) area that caught my attention with respect to the drop-offs.\nAt northern region, the T-junction of Mandai Road and Mandai Lake Road, adjacent to the Before Mandai Lake Road bus stop, and the tail-end of Mandai Lake Road captured the most intense density score of up to 0.30.\nI believe the above statistics may be explained by people visiting the Rainforest Park and the Night Safari, where the latter is not directly acessible by public transport.\nIt is also worth mentioning that there is a relatively NKDE intensity score of 0.25 along the eateries at Bird Paradise, Mandai Lake Road compared to the whole CWC area."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#temporal-network-kernel-density-estimation-tnkde",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01a.html#temporal-network-kernel-density-estimation-tnkde",
    "title": "Take-home Exercise 1 Report",
    "section": "Temporal Network Kernel Density Estimation (TNKDE)",
    "text": "Temporal Network Kernel Density Estimation (TNKDE)\nI assume there is only one main drop-off/pick-up area for the Singapore Zoo and Night Safari. At the same time, I am curious if there is much of a difference in the intensity of drop-offs at this particular area before and after 6pm.\n\n\n\n\n\n\nTip\n\n\n\nThe operating hours for Singapore Zoo and Night Safari are 8.30am-6pm and 7.15pm-12mn respectively.\n\n\nLet’s have a look at the distribution of drop offs across the days in our dataset (Source code adapted from Jeremy Gelb.)\n\n# convert to POSIXct type\ndest_cwc$pingtimestamp &lt;- as.POSIXct(dest_cwc$pingtimestamp, format = \"%Y%/m/%d %H:%M:%S\")\n\n# create new column for date\ndest_cwc$date &lt;- format(dest_cwc$pingtimestamp, \"%d-%m\")\n\n# group by date and weekday, and count the instances\n\ndate_counts &lt;- dest_cwc %&gt;% \n  group_by(date,weekday) %&gt;%\n  summarise(count=n())\n\n# distribution histogram\n\nggplot(date_counts, aes(x=date, y=count)) +\n   geom_bar(stat = \"identity\") + \n   labs(x=\"Date\", y=\"Count\") +\n   ggtitle(\"Number of Drop-offs across dates\") +\n   theme_minimal()\n\n\n\n\nAcross the two weeks in 2019, there seems to be quite an even distribution of drop-offs in CWC regardless which day of the week.\nNow let’s visualise the TKNDE before and after 7pm.\n\n# filter dest_cwc to include instances where end_hr is &lt; 19\ndest_cwc$end_hr &lt;- as.numeric(as.character(dest_cwc$end_hr))\n\ndest_cwc_before_7pm &lt;- dest_cwc[dest_cwc$end_hr &lt; 19, ]\n\ndensities_cwc_dest_before_7pm &lt;- nkde(roads_cwc, \n                           events = dest_cwc_before_7pm,  # replace dest_cwc with dest_cwc_before_7pm\n                           w = rep(1, nrow(dest_cwc_before_7pm)),  # replace dest_cwc with dest_cwc_before_7pm\n                           samples = samples_cwc,\n                           kernel_name = \"quartic\",\n                           bw = 300, \n                           div = \"bw\", \n                           method = \"simple\", \n                           digits = 1, \n                           tol = 1,\n                           grid_shape = c(1, 1), \n                           max_depth = 8,\n                           agg = 5, \n                           sparse = TRUE,\n                           verbose = FALSE)\n\nsamples_cwc$density_dest_before_7pm &lt;- densities_cwc_dest_before_7pm\nlixels_cwc$density_dest_before_7pm &lt;- densities_cwc_dest_before_7pm\n\nsamples_cwc$density_dest_before_7pm &lt;- samples_cwc$density_dest_before_7pm * 1000\nlixels_cwc$density_dest_before_7pm &lt;- lixels_cwc$density_dest_before_7pm * 1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_cwc) +\n  tm_lines(col = \"density_dest_before_7pm\") +\ntm_shape(dest_cwc_before_7pm) +  # Replace dest_cwc with dest_cwc_before_7pm\n  tm_dots(alpha = 0.1) +\ntm_basemap(\"OpenStreetMap\") +\ntm_scale_bar()\n\n\n\n\n\n\n\n# filter dest_cwc to include instances where end_hr is &gt;= 19\ndest_cwc$end_hr &lt;- as.numeric(as.character(dest_cwc$end_hr))\n\ndest_cwc_after_7pm &lt;- dest_cwc[dest_cwc$end_hr &gt;= 19, ]\n\ndensities_cwc_dest_after_7pm &lt;- nkde(roads_cwc, \n                           events = dest_cwc_after_7pm,  # Replace dest_cwc with dest_cwc_after_7pm\n                           w = rep(1, nrow(dest_cwc_after_7pm)),  # Replace dest_cwc with dest_cwc_after_7pm\n                           samples = samples_cwc,\n                           kernel_name = \"quartic\",\n                           bw = 300, \n                           div = \"bw\", \n                           method = \"simple\", \n                           digits = 1, \n                           tol = 1,\n                           grid_shape = c(1, 1), \n                           max_depth = 8,\n                           agg = 5, \n                           sparse = TRUE,\n                           verbose = FALSE)\n\nsamples_cwc$density_dest_after_7pm &lt;- densities_cwc_dest_after_7pm\nlixels_cwc$density_dest_after_7pm &lt;- densities_cwc_dest_after_7pm\n\nsamples_cwc$density_dest_after_7pm &lt;- samples_cwc$density_dest_after_7pm * 1000\nlixels_cwc$density_dest_after_7pm &lt;- lixels_cwc$density_dest_after_7pm * 1000\n\ntmap_mode(\"view\")\ntm_shape(lixels_cwc) +\n  tm_lines(col = \"density_dest_after_7pm\") +\ntm_shape(dest_cwc_after_7pm) +  # Replace dest_cwc with dest_cwc_after_7pm\n  tm_dots(alpha = 0.1) +\ntm_basemap(\"OpenStreetMap\") +\ntm_scale_bar()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nGenerally, there is TNKDE is denser during the day time than in the night. This is logical as the outstanding general hotspots for CWC drop-offs are of higher concentration at areas with recreational or tourist activities available during the day. Given the uniformly low NKDE scores throughout Central Catchment Area after 7pm, we can also conclude there are very few instances that people Grab from Night Safari.\nInterestingly, other hotspots have emerged after 7pm. Although the intensity scores are generally very low after 7pm, it seems that some passengers are dropped off at a section of Seletar Expressway next to Springleaf Garden. The other hotspot is at a 300m-long stretch along the PIE next to Singapore Island Country Club. Perhaps a couple of people go to the country club after work to golf."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#final-kernel-density-estimation-maps",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#final-kernel-density-estimation-maps",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Final Kernel Density Estimation Maps",
    "text": "Final Kernel Density Estimation Maps\n\nTampines Origin Diggle Bandwidth, GaussianWoodlands Origin ppl Bandwidth, DiscDowntown Core Origin ppl Bandwidth, GaussianTampines Dest ppl Bandwidth, GaussianWoodlands Dest ppl Bandwidth, GaussianCentral Water Catchment Dest ppl Bandwidth, Gaussian\n\n\n\nkde_origin_tm.bw &lt;-\ndensity(origin_tm_ppp.km,\n             sigma=bw.diggle,\n             edge=TRUE,\n             kernel=\"gaussian\")\nplot(kde_origin_tm.bw)\n\n\n\n\n\n\n\nkde_origin_wd.bw &lt;- density(origin_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"disc\")\nplot(kde_origin_wd.bw)\n\n\n\n\n\n\n\nkde_origin_dt.bw &lt;-\ndensity(origin_dt_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\")\nplot(kde_origin_dt.bw)\n\n\n\n\n\n\n\nkde_dest_tm.bw &lt;- density(dest_tm_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\")\nplot(kde_dest_tm.bw)\n\n\n\n\n\n\n\nkde_dest_wd.bw &lt;- density(dest_wd_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\")\nplot(kde_dest_wd.bw)\n\n\n\n\n\n\n\nkde_dest_cwc.bw &lt;- density(dest_cwc_ppp.km,\n             sigma=bw.ppl,\n             edge=TRUE,\n             kernel=\"gaussian\")\nplot(kde_dest_cwc.bw)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#woodlands-origin-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#woodlands-origin-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Woodlands Origin",
    "text": "Woodlands Origin\n\ntmap_mode(\"plot\")\ntm_shape(kde_origin_wd_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\",\"top\"),frame=FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#downtown-core-origin-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#downtown-core-origin-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Downtown Core Origin",
    "text": "Downtown Core Origin\n\ntmap_mode(\"plot\")\ntm_shape(kde_origin_dt_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\",\"bottom\"),frame=FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#tampines-destination-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#tampines-destination-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Tampines Destination",
    "text": "Tampines Destination\n\ntmap_mode(\"plot\")\ntm_shape(kde_dest_tm_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"left\",\"bottom\"),frame=FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#woodlands-destination-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#woodlands-destination-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Woodlands Destination",
    "text": "Woodlands Destination\n\ntmap_mode(\"plot\")\ntm_shape(kde_dest_wd_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"left\",\"top\"),frame=FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#central-water-catchment-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#central-water-catchment-1",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis – Geographical Distribution of Grab hailing services (Singapore)",
    "section": "Central Water Catchment",
    "text": "Central Water Catchment\n\ntmap_mode(\"plot\")\ntm_shape(kde_dest_cwc_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"left\",\"bottom\"),frame=FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "These exercises train on the collection of geospatial statistical methods specially designed for measuring global and local spatial association.\nThese spatial statistics are well suited for: - detecting clusters or outliers - identifying hot spot or cold spot areas - assessing the assumptions of stationarity - identifying distances beyond which no discernible association obtains."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#overview",
    "title": "Hands-on Exercise 5",
    "section": "Overview",
    "text": "Overview\nIn Section A, we are learning how to compute Global and Local Measure of SPatial Autocorrelation (GSLA) by using the spdep package. The aim of this exercise is to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package\ncompute Getis-Ord’s Gi-statistics for detecting hot spot and/or cold spot area by using appropriate functions of spdep package, and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#asking-ourselves",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#asking-ourselves",
    "title": "Hands-on Exercise 5",
    "section": "Asking ourselves",
    "text": "Asking ourselves\nPolicymakers need to verify if development has been evenly distributed or implemented within a county or province. Thus, this study involves the application of appropriate spatial statistical methods if the development is evenly distributed geographically.\nIf the answer to that is no, then we should observe if there is the presence of spatial clustering. If the answer to this question is yes, then we should check where are these clusters.\nWe are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Province, the People’s Republic of China."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-study-area-and-data",
    "title": "Hands-on Exercise 5",
    "section": "The Study Area and Data",
    "text": "The Study Area and Data\nTwo data sets will be used in this hands-on exercise:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#setting-the-analytical-tools",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#setting-the-analytical-tools",
    "title": "Hands-on Exercise 5",
    "section": "Setting the Analytical Tools",
    "text": "Setting the Analytical Tools\nBefore starting, ensure that spdep, sf, tmap and tidyverse packages of R are installed.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-shapefiles",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-shapefiles",
    "title": "Hands-on Exercise 5",
    "section": "Importing shapefiles",
    "text": "Importing shapefiles\nUse st_read() of the sf package to import the Hunan shapefile.\n\nhunan &lt;- st_read(dsn=\"data/geospatial\", layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-csv",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-csv",
    "title": "Hands-on Exercise 5",
    "section": "Importing csv",
    "text": "Importing csv\nNext, import the csv file by using read_csv() of readr().\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#performing-relational-joins",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#performing-relational-joins",
    "title": "Hands-on Exercise 5",
    "section": "Performing relational joins",
    "text": "Performing relational joins\nCheck the column headers in the csv file.\n\nnames(hunan2012)\n\n [1] \"County\"      \"City\"        \"avg_wage\"    \"deposite\"    \"FAI\"        \n [6] \"Gov_Rev\"     \"Gov_Exp\"     \"GDP\"         \"GDPPC\"       \"GIO\"        \n[11] \"Loan\"        \"NIPCR\"       \"Bed\"         \"Emp\"         \"EmpR\"       \n[16] \"EmpRT\"       \"Pri_Stu\"     \"Sec_Stu\"     \"Household\"   \"Household_R\"\n[21] \"NOIP\"        \"Pop_R\"       \"RSCG\"        \"Pop_T\"       \"Agri\"       \n[26] \"Service\"     \"Disp_Inc\"    \"RORP\"        \"ROREmp\"     \n\n\nPerform the relational join.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\nThe left_join() function from the dplyr package is used to combine two datasets, hunan and hunan2012, based on common columns, i.e.County and GDPPC . It keeps all the rows from hunan and adds matching rows from hunan2012. The result is a new dataset that includes information from both datasets.\nThe pipe operator, %&gt;%, takes the result from the left_join() step and passes it as the first argument to the next step.\nselect(1:4, 7, 15)` chooses columns 1 to 4, column 7 and column 15.\nThe output is a new dataframe containing the abovementioned columns"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Regional Development Indicator",
    "text": "Visualising Regional Development Indicator\nPrepare a basemap and choropleth map showing the distribution of GDPPC 2012 using qtm() of tmap package\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#row-standardised-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#row-standardised-weight-matrix",
    "title": "Hands-on Exercise 5",
    "section": "Row-standardised weight matrix",
    "text": "Row-standardised weight matrix\nNext, equal weights are assigned to each neighbouring polygon. The weight will be evenly assigned using 1/nNeighbours to each county, then summing up the weighted income values.\n\nDespite the intuitiveness, polygons along the edges of the study area will base their lagged on fewer polygons and there may be an over- or under-estimation of the spatial autocorrelation.\n\nFor this exercise, the style=“W” will be used to achieve the aim of using equal weights.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe input of nb2listw() must be an object of class neighbourhood, i.e. nb.\nstyle\n\nTakes in values:\n\nB - basic binary\nW - row-standardised, i.e. sums over all links to n\nC - global-standardised, i.e. sums over all links to n\nU - proportion of C over the number of neighbours, i.e. sums over all links to unity\nS - the variance-stabilising code scheme, i.e. sums over all links to n\n\n\nzero policy\n\nWhen it is set to TRUE, weight vectors of zero length are inserted for regions without neighbours inthe neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row, t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#global-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#global-spatial-autocorrelation-morans-i",
    "title": "Hands-on Exercise 5",
    "section": "Global Spatial Autocorrelation: Moran’s I",
    "text": "Global Spatial Autocorrelation: Moran’s I\nThis section performs Moran’s I statistics using moran.test() of spdep\n\nMoran’s I Test\nMoran’s I is a statistic measuring the spatial autocorrelation of a variable across a set of spatial units. It quantifies the degree of similarity (~+1) or dissimilarity (~-1) between neighbouring observations. The greater the degree of similarity, there is more positive spatial autocorrelation.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nIt can be inferred that there is a weak positive spatial autocorrelation in the variable GDPPC, where regions with similar values tend to be spatially clustered together.\n\n\n\nMonte Carlo Moran’s I\nMonte Carlo Moran’s I extends this measure by conducting a randomisation procedure to determine the statistical significance of the observed spatial autocorrelation. Monte Carlo Moran’s I is particularly useful when assessing whether the observed spatial autocorrelation is statistically significant or simply due to chance.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nSince p-value is 0.001, it is highly unlikely that the observed spatial autocorrelation occurred by chance, which further supports the alternative hypothesis of greater spatial correlation.\nUsing set.seed() is helpful for reproducibility. It sets a starting point, or seed, to generate the sequence of random numbers each time the seed value is used to run with the code.\n\n\n\nVisualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nlibrary(ggplot2)\n\n\n# Initialize the plot canvas\nplot.new()\n\n# Simulated Moran's I values stored in bperm$res\nsimulated_values &lt;- bperm$res\n\n# Create the histogram\nhist(simulated_values, freq = TRUE, breaks = 20, xlab = \"Simulated Moran's I\")\n\n# Add a vertical line at 0\nabline(v = 0, col = \"red\")\n\n\n\n\n\nSince the simulated values follow a normal distribution, it suggests that the simulated values follow a random pattern and there is no structured spatial autocorrelation present."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#global-spatial-autocorrelation-gearys",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#global-spatial-autocorrelation-gearys",
    "title": "Hands-on Exercise 5",
    "section": "Global Spatial Autocorrelation: Geary’s",
    "text": "Global Spatial Autocorrelation: Geary’s\n\nGeary’s C test\nGeary’s C statistic, also known as the Geary’s coefficient or Geary’s ratio, is a measure of spatial autocorrelation that quantifies the similarity or dissimilarity of neighboring observations in a dataset.\nThe formula for calculating Geary’s C statistic is:\n\\[\nC = (1 / (2 * W)) * sum((x_i - x_j)^2 / w_ij * s^2)\n\\] Where:\n\nC is the Geary’s C statistic.\nW is the sum of the weights between all neighboring pairs of observations.\nx_i and x_j are the values of the variable being analyzed for observations i and j.\nw_ij is the weight between observations i and j, which represents the spatial relationship or distance between them.\ns^2 is the sample variance of the variable being analyzed. Geary’s C statistic ranges from 0 to 2, with the following interpretations:\nC close to 0 indicates strong positive spatial autocorrelation, meaning neighboring observations are very similar.\n\n\n\nC close to 1 indicates no spatial autocorrelation, meaning neighboring observations are not more similar or dissimilar than expected by chance.\nC close to 2 indicates strong negative spatial autocorrelation, meaning neighboring observations are very dissimilar.\nIn practice, the observed Geary’s C statistic is compared to the expected value under the null hypothesis of no spatial autocorrelation to assess the significance of spatial patterns in the data. Deviations from the expected value indicate the presence of spatial autocorrelation, either positive or negative, depending on the value of C.\n\nPerforming Geary’s C test requires the use of spdep’s geary.test()\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\nThere is strong evidence of positive spatial autocorrelation in GDPPC.\nThe observed Geary C statistic significantly deviates from the expectation under the null hypothesis, indicating that neighbouring observationss are more similar than expected by chance alone.\n\n\n\nComputing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nThere is strong evidence to reject the null hypothesis of no spatial autocorrelation, i.e. p-value&lt;0.05.\nHence, there is a significant positive spatial autocorrelation present.\n\n\n\nVisualising Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#spatial-correlogram",
    "title": "Hands-on Exercise 5",
    "section": "Spatial Correlogram",
    "text": "Spatial Correlogram\nSpatial correlograms are ideal for examining spatial autocorrelation patterns in data or model residuals. They show how correlated are the pairs of spatial observations when the distance or lag between them increases. Such observations are plots of some index of autocorrelation (Moran’s I or Geary’s C) against distance. Though correlograms are not as fundamental as variograms, they are very useful as an exploratory and descriptive tool. For this purpose, correlograms provide richer information than variograms.\n\nComputing Moran’s I correlogram\nIn the sp.correlogram() of the spdep package, we can compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in moran’s I.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nThe style argument controls how neighbouring relationships and weights are handled in calculating the spatial autocorrelation coefficients reported. For the style argument, it can take the values - W (weight matrix): USes spatial weights matrix W to calculate the spatial correlation coefficients and this is the default style value, - B (binary): Converts the spatial weights matrix W into a binary matrix (1s where spatially lagged, 0s elsewhere) before calculating the coefficients, - C (connectivity): Uses only the connectivity structure of W (ignoring weights) to calculate coefficients based on number of neighbours. - S (self): Like W but with the diagonal of the weight matrix set to 1 so that spatially lagged variable also includes the original observation.\nThe plotting output may not provide a complete interpretation as not all autocorrelation values are statistically significant. Hence it is important to examine the full analysis report by printing out the analysis results.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThere is a general decrease in positive spatial autocorrelation from the first lag to the sixth lag.\nThere is significant spatial clustering at short distances up to the third lag, followed by dispersion at broader distances of the fifth and sixth lags.\n\n\nComputing Geary’s C correlogram\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-local-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-local-morans-i",
    "title": "Hands-on Exercise 5",
    "section": "Computing Local Moran’s I",
    "text": "Computing Local Moran’s I\nTo compute local Moran’s I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nList the content of the local Moran matrix derived by using printCoefmat().\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nMapping the Local Moran’s I and Values\nAppend the local Moran’s I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\nUse a choropleth to map out the values.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMapping Local Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\nThe code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMap both local Moran’s I values and p-values\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#creating-a-lisa-cluster-map",
    "title": "Hands-on Exercise 5",
    "section": "Creating a LISA Cluster Map",
    "text": "Creating a LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\nPlotting Moran scatterplot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\nThe top right quadrant belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. These are the high-high locations.\n\n\nPlotting Moran scatterplot with standardised variables\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\nNow, we are ready to plot the Moran scatterplot again by using the code chunk below.\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\nPreparing LISA map classes\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\nDerive the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nCentre the local Moran’s around the mean.\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nThen set a statistical significance level for the local Moran.\n\nsignif &lt;- 0.05       \n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nPlace non-significant local Moran in the category 0.\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-lisa-map",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-lisa-map",
    "title": "Hands-on Exercise 5",
    "section": "Plotting LISA map",
    "text": "Plotting LISA map\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nPlot the local and corresponding Moran’s I p-values maps next to each other.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 5",
    "section": "Hot Spot and Cold Spot Area Analysis",
    "text": "Hot Spot and Cold Spot Area Analysis\nLocalised spatial statistics are useful for detecting hot spot and cold spot areas.\nThe term ‘hot spot’ is to describe a region or value that is higher relative to its surroundings (Lepers et al 2005, Aben et al 2012, Isobe et al 2015).\n\nGetis and Ord’s G-Statistics\nGetis and Ord’s G-statistics also detect spatial anomalies. It looks at neighbours within a defined proximity to identify where either high or low values cluster spatially.\nThe analysis consists of three steps: - Deriving spatial weight matrix - Computing Gi statistics - Mapping Gi statistics\n\n\nDeriving distance-baased weight matrix\nA new set of neighbours have to be defined first. Though spatial autocorrelation considers units sharing common borders, Getis-Ord defines neighbours based on distances.\nThe two types of distance-based proximity matrix are: - fixed distance weight matrix, and - adaptive distance weight matrix\n\nDeriving the centroid\nPoints are needded to associate with each polygon before making a connectivity graph. The coordinates need to be in a separate data frame.\nWe will use a mapping function which applies a given function to each element of a vector and returns a vector of the same length. The input vector will be the geometry column, us.bound, and the function will be st_centroid(). The map_dbl variation of the map will be used from the purrr package.\nHere is how the longitude and latitude values can be accessed.\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nThen use cbind to put the coordinates together.\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\nDetermine the cut-off distance\nDetermine the upper limit for the distance bands by using the following steps: - Return a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep. - Convert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb(). - Return the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise. - Remove the list structure of the returned object by using unlist().\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n\n\nComputing fixed distance weight matrix\nCompute the distance weight matrix by using dnearneigh().\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nUse nb2listw() to convert the nb object into spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n\nComputing adaptive distance weight matrix\nA characteristic of fixed distance weight matrix is that denser settlement areas tend to have more neighbours, vice versa. Having many neighbours smoothens the neighbour relationship across more neighbours.\nIt is possible to control the number of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nConvert nb object into spatial weights object.\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-gi-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-gi-statistics",
    "title": "Hands-on Exercise 5",
    "section": "Computing Gi statistics",
    "text": "Computing Gi statistics\n\nGi statistics using fixed distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nThe above code above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\n\nMapping Gi values with fixed distance weights\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\nGi statistics using adaptive distance\nCompute the Gi values for GDPPPC2012 using an adaptive distance weight matrix.\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\nMapping Gi values with adaptive distance weights\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "sfdep creates a sf and tidyverse friendly interface to the package.\n\n\npacman::p_load(sf, tmap, sfdep, tidyverse, dplyr)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-geospatial-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-geospatial-data",
    "title": "In-class Exercise 5",
    "section": "Import geospatial data",
    "text": "Import geospatial data\n\nhunan &lt;- st_read(dsn=\"data/geospatial\", layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\In-class_Ex\\In-class_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#importing-aspatial-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#importing-aspatial-data",
    "title": "In-class Exercise 5",
    "section": "Importing aspatial data",
    "text": "Importing aspatial data\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nCombining aspatial fields to geospatil data\n\nhunan_GDPPC &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\nPlotting Choropleth Map\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(col=\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by County\",\n            main.title.position = \"center\",\n            main.title.size =1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-global-morans-i",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#computing-global-morans-i",
    "title": "In-class Exercise 5",
    "section": "Computing Global Moran’s I",
    "text": "Computing Global Moran’s I\n\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\nglobal_moran_test(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nPerforming Global Moran’s I permutation test\nIt is better to conduct permutation tests.\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99) \n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nnsim refers to the number of simulations\nSince the p-value is &lt; 0.05, there is sufficient evidence to reject the null hypothesis that the spatial distribution of GDP per capita resembles a random distribution, or rather the distribution is independent from spatial. Since Moran’s I statistic is &gt; 0, we can infer that the spatial distribution shows signs of clustering."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "",
    "text": "Dengue fever is a ubiquitous condition in tropical areas characterised by humid weather induced by warm temperatures and abundant rainfall. Taiwan is a subtropical region and its weather conditions cause it to be a favourable breeding ground for female Aedes aegypti and Aedes albopictus mosquitoes.\nIn 2015, Taiwan In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases (Kam, 2024).\nFor this project, the study area focuses on Southwest Tainan, and epidemiology weeks 31 through 50 in 2023."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#loading-necessary-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#loading-necessary-packages",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Loading necessary packages",
    "text": "Loading necessary packages\n\npacman::p_load(tidyverse, lubridate, dplyr, sf, tmap, sfdep, gifski, Kendall, cowplot)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#importing-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Importing data",
    "text": "Importing data\n\nGeospatial\nRead the Tainan boundary layer.\n\ntn_sf &lt;- st_read(\"data/geospatial/TAINAN_VILLAGE.shp\")\n\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial\\TAINAN_VILLAGE.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n\n\n\ntn_sf &lt;- st_transform(tn_sf, crs = 3824)\nplot(st_geometry(tn_sf))\n\n\n\n\n\nThe coordinates are employing the TWD97 geodetic system, which translates to EPSG ID 3824.\n\n\nsummary(tn_sf)\n\n   VILLCODE          COUNTYNAME          TOWNNAME           VILLNAME        \n Length:649         Length:649         Length:649         Length:649        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   VILLENG            COUNTYID          COUNTYCODE           TOWNID         \n Length:649         Length:649         Length:649         Length:649        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   TOWNCODE             NOTE                    geometry  \n Length:649         Length:649         POLYGON      :649  \n Class :character   Class :character   epsg:3824    :  0  \n Mode  :character   Mode  :character   +proj=long...:  0  \n\n\n\n\nAspatial\n\ndengue &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#tainan-geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#tainan-geospatial-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Tainan Geospatial Data",
    "text": "Tainan Geospatial Data\nThis project will focus towns with IDs D01, D02, D04, D06, D07, D08, D36, D39.\nHence, confine the geospatial data to the study area,\n\ntainan_aoi &lt;- tn_sf %&gt;%\n  filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"))\n\nsummary(tainan_aoi)\n\n   VILLCODE          COUNTYNAME          TOWNNAME           VILLNAME        \n Length:258         Length:258         Length:258         Length:258        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   VILLENG            COUNTYID          COUNTYCODE           TOWNID         \n Length:258         Length:258         Length:258         Length:258        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   TOWNCODE             NOTE                    geometry  \n Length:258         Length:258         POLYGON      :258  \n Class :character   Class :character   epsg:3824    :  0  \n Mode  :character   Mode  :character   +proj=long...:  0  \n\n\nView how the different towns are located geographically by using a choropleth map via tmap.\n\nstudy_townids &lt;- c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\")\n\ntn_sf_filtered &lt;- tn_sf %&gt;%\n  mutate(highlight = ifelse(TOWNID %in% study_townids, \"Study\", \"Not Study\"))\n\n\nmain_map &lt;- tm_shape(tn_sf_filtered) +\n  tm_polygons(\"highlight\", palette = c(\"grey\", \"red\")) +\n  tm_borders(lwd = 0.2, alpha = 1) +\n  tm_layout(main.title = \"Overview of Tainan\", main.title.size = 1) +\n  tm_scale_bar()\n\nsecondary_map &lt;- tm_shape(tainan_aoi) +\n  tm_polygons(col = \"TOWNID\") +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Dengue Study Area\", main.title.size = 1) +\n  tm_scale_bar()\n\ntm_layout(legend.show = FALSE)\n\n$tm_layout\n$tm_layout$legend.show\n[1] FALSE\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\"\n\ntmap_arrange(main_map, secondary_map, ncol = 2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#dengue-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#dengue-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Dengue Data",
    "text": "Dengue Data\nFirst, let’s find out more about our dengue data.\nCheck the class type of the dengue data set.\n\nclass(dengue)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\n\nCurrently, the dengue data set is a tibble data frame.\n\nBrowse through the first few rows.\n\nhead(dengue)\n\n# A tibble: 6 × 26\n  發病日     個案研判日 通報日     性別  年齡層 居住縣市 居住鄉鎮 居住村里\n  &lt;date&gt;     &lt;chr&gt;      &lt;date&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;   \n1 1998-01-02 None       1998-01-07 男    40-44  屏東縣   屏東市   None    \n2 1998-01-03 None       1998-01-14 男    30-34  屏東縣   東港鎮   None    \n3 1998-01-13 None       1998-02-18 男    55-59  宜蘭縣   宜蘭市   None    \n4 1998-01-15 None       1998-01-23 男    35-39  高雄市   苓雅區   None    \n5 1998-01-20 None       1998-02-04 男    55-59  宜蘭縣   五結鄉   None    \n6 1998-01-22 None       1998-02-19 男    20-24  桃園市   蘆竹區   None    \n# ℹ 18 more variables: 最小統計區 &lt;chr&gt;, 最小統計區中心點X &lt;chr&gt;,\n#   最小統計區中心點Y &lt;chr&gt;, 一級統計區 &lt;chr&gt;, 二級統計區 &lt;chr&gt;,\n#   感染縣市 &lt;chr&gt;, 感染鄉鎮 &lt;chr&gt;, 感染村里 &lt;chr&gt;, 是否境外移入 &lt;chr&gt;,\n#   感染國家 &lt;chr&gt;, 確定病例數 &lt;dbl&gt;, 居住村里代碼 &lt;chr&gt;, 感染村里代碼 &lt;chr&gt;,\n#   血清型 &lt;chr&gt;, 內政部居住縣市代碼 &lt;chr&gt;, 內政部居住鄉鎮代碼 &lt;chr&gt;,\n#   內政部感染縣市代碼 &lt;chr&gt;, 內政部感染鄉鎮代碼 &lt;chr&gt;\n\n\nThe data is in Traditional Chinese? No problem! The following table is a rough guide on all the attributes:\n\n\n\n\n\n\n\nAttribute\nTranslation\n\n\n\n\n發病日\nOnset date\n\n\n個案研判日\nAssessed date\n\n\n通報日\nNotification date\n\n\n性別\nGender\n\n\n年齡層\nAge group\n\n\n居住縣市\nResidential city\n\n\n居住鄉鎮\nResidential township\n\n\n居住村里\nResidential village\n\n\n最小統計區\nSmallest statistical area\n\n\n最小統計區中心點X\nX-coordinate of the smallest statistical area\n\n\n最小統計區中心點Y\nY-coordinate of the smallest statistical area\n\n\n一級統計區\nLevel 1 statistical area\n\n\n二級統計區\nLevel 2 statistical area\n\n\n感染縣市\nInfected city\n\n\n感染鄉鎮\nInfected township\n\n\n感染村里\nInfected village\n\n\n是否境外移入\nImported case?\n\n\n感染國家\nImported country origin\n\n\n確定病例數\nConfirmed case count\n\n\n居住村里代碼\nResidential village code\n\n\n感染村里代碼\nInfected village code\n\n\n血清型\nSerotype\n\n\n內政部居住縣市代碼\nResidential city (Internal Affairs)\n\n\n內政部居住鄉鎮代碼\nResidential township (Internal Affairs)\n\n\n內政部感染縣市代碼\nInfected city code (Internal Affairs)\n\n\n內政部感染鄉鎮代碼\nInfected township code (Internal Affairs)\n\n\n\nSince the data includes all of Taiwan’s confirmed dengue cases from 1998 to January 2024, the data needs to be further confined to year 2023, epidemiology weeks 31 to 50.\nExtract all the 2023 dengue cases.\n\ndengue_2023 &lt;- subset(dengue, substr(發病日, 1, 4) == \"2023\")\n\nCreate a column to store the epidemiology week number for the respective dates. We can use a function called epiweek() from the lubridate package to carry this task out.\n\ndengue_2023$epi_week &lt;- epiweek(dengue_2023$發病日)\n\nFilter for epidemiology weeks 31 to 50.\n\ndengue_study &lt;- dengue_2023 %&gt;%\n  filter(epi_week &gt;= 31 & epi_week &lt;= 50)\n\nAccording to (Health Protection Surveillance Centre)[https://www.hpsc.ie/notifiablediseases/resources/epidemiologicalweeks/], epidemiology weeks 31 to 50 are from 2023-07-30 to 2023-12-16.\nThen verify that the earliest and latest date in tainan_dengue_2023 are 2023-07-30 and 2023-12-16 respectively.\n\nearliest_date &lt;- min(dengue_study$發病日)\nlatest_date &lt;- max(dengue_study$發病日)\n\nearliest_date == \"2023-07-30\"\n\n[1] TRUE\n\nlatest_date == \"2023-12-16\"\n\n[1] TRUE\n\n\n\n\n\n\n\n\nImportant\n\n\n\nSince it is my first time using the epiweek() function, I felt it was important to refer to an official medical source explicitly stating the start and end dates of our interested study period. Hence, I performed a quick test to check if there was any mistake in the usage of this unfamiliar function.\n\n\nEarlier, the dengue data type identified was tibble data frame. To perform an intersection between the study area boundary and our dengue study data, dengue_study needs to be converted to sf data frame format since tainan_aoi is in that format.\n\nclass(tainan_aoi)\n\n[1] \"sf\"         \"data.frame\"\n\n\nEnsure coordinates are numeric. If not, convert them to numeric.\n\n\n[1] \"character\"\n\n\n[1] \"character\"\n\n\n[1] \"numeric\"\n\n\n[1] \"numeric\"\n\n\n\ndengue_study_clean  &lt;- dengue_study %&gt;%\n  filter(is.numeric(最小統計區中心點X) & is.numeric(最小統計區中心點Y))\n\nnrow(dengue_study) == nrow(dengue_study_clean)\n\n[1] TRUE\n\n\n\n\n\n\n\n\nLearning Point\n\n\n\nWhen performing the as.numeric() on dengue_study, there were no changes in rows. On second thought, the function will not include rows that do not contain numeric characters!\n\n\nRemove missing coordinates.\n\ndengue_study &lt;- dengue_study %&gt;% \n  filter(!is.na(最小統計區中心點X), !is.na(最小統計區中心點Y))\n\nNow, dengue_study can be converted to sf data frame.\n\ndengue.sf &lt;- st_as_sf(dengue_study, \n                      coords = c(\"最小統計區中心點X\",\"最小統計區中心點Y\"),\n                      crs=3824)\n\nConfine dengue.sf into dengue cases recorded in just Tainan City, i.e. 台南市.\n\naoi_dengue.sf &lt;- subset(dengue.sf, 居住縣市 == \"台南市\")\n\nConsolidate dengue.sf and keep the columns that are needed only.\n\ncolnames(aoi_dengue.sf)\n\n [1] \"發病日\"             \"個案研判日\"         \"通報日\"            \n [4] \"性別\"               \"年齡層\"             \"居住縣市\"          \n [7] \"居住鄉鎮\"           \"居住村里\"           \"最小統計區\"        \n[10] \"一級統計區\"         \"二級統計區\"         \"感染縣市\"          \n[13] \"感染鄉鎮\"           \"感染村里\"           \"是否境外移入\"      \n[16] \"感染國家\"           \"確定病例數\"         \"居住村里代碼\"      \n[19] \"感染村里代碼\"       \"血清型\"             \"內政部居住縣市代碼\"\n[22] \"內政部居住鄉鎮代碼\" \"內政部感染縣市代碼\" \"內政部感染鄉鎮代碼\"\n[25] \"epi_week\"           \"geometry\"          \n\naoi_dengue.sf &lt;- aoi_dengue.sf %&gt;%\n  select(發病日, 性別, 年齡層, 感染國家, 確定病例數, epi_week, geometry)\n\nFinally, an intersection between tainan_aoi and aoi_dengue.sf to confine the dengue cases to the study area can be performed using `st_intersection()\n\nst_crs(tainan_aoi)\nst_crs(aoi_dengue.sf)\naoi_dengue &lt;- st_intersection(tainan_aoi, aoi_dengue.sf)\n\n\nwrite_rds(aoi_dengue, \"data/geospatial/aoi_dengue.rds\")\n\n\naoi_dengue &lt;- readRDS(\"data/geospatial/aoi_dengue.rds\")\nclass(aoi_dengue)\n\n[1] \"sf\"         \"data.frame\"\n\nnrow(aoi_dengue)\n\n[1] 18816"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#aggregating-dengue-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#aggregating-dengue-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Aggregating Dengue Data",
    "text": "Aggregating Dengue Data\nGet a proper consolidated data set where the dengue cases are sorted by their unique village codes.\n\nv_dengue &lt;- aoi_dengue %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(count = n()) %&gt;%\n  st_drop_geometry()\n\nv_dengue.sf &lt;- left_join(tainan_aoi,v_dengue) %&gt;%\n  select(1, tail(names(.), 2)) %&gt;%\n  complete(VILLCODE, fill = list(count = 0)) %&gt;%\n  st_as_sf()\n\nGet a proper consolidated data set where the dengue cases are sorted by their unique village codes and epidemiology weeks.\n\nvw_dengue &lt;- aoi_dengue %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;%\n  summarise(count = n()) %&gt;%\n  st_drop_geometry()\n\nvw_dengue &lt;- left_join(tainan_aoi,vw_dengue) %&gt;%\n  select(1, tail(names(.), 3)) %&gt;%\n  complete(VILLCODE, epi_week = 31:50, fill = list(count = 0)) %&gt;%\n  st_drop_geometry() %&gt;%\n  select(1:3) %&gt;%\n  drop_na()\n\n\nvw_dengue.sf &lt;- left_join(tainan_aoi, vw_dengue) %&gt;%\n  select(1, tail(names(.), 3)) %&gt;%\n  complete(VILLCODE, epi_week = 31:50, fill = list(count = 0)) %&gt;%\n  st_as_sf()\n\nvw_dengue.sf &lt;- vw_dengue.sf[!is.na(vw_dengue.sf$epi_week), ]\n\nwrite_rds(vw_dengue.sf, \"data/geospatial/vw_dengue.sf\")\n\n\nvw_dengue.sf &lt;- read_rds(\"data/geospatial/vw_dengue.sf\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#across-space",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#across-space",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Across Space",
    "text": "Across Space\n\nBarplotChoropleth Map\n\n\n\nggplot(aoi_dengue, aes(x = TOWNID)) +\n  geom_bar(fill = \"steelblue\", color = \"black\", bins = 20) +\n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5)\n\n\n\n  labs(x = \"TOWNID\", y = \"Number of Dengue Cases\", Title = \"Histogram of Dengue cases by District Town\") \n\n$x\n[1] \"TOWNID\"\n\n$y\n[1] \"Number of Dengue Cases\"\n\n$Title\n[1] \"Histogram of Dengue cases by District Town\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(v_dengue.sf) +\n  tm_fill(\"count\",\n          style = \"jenks\",\n          title = \"count\") +\n  tm_layout(main.title = \"Distribution of Dengue Cases per Village\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\nAcross Time\n\nggplot(aoi_dengue, aes(x = epi_week)) +\n  geom_bar(fill = \"blue\", color = \"black\") +\n labs(x = \"Epidemiology Week\", y = \"Count\", title = \"Barplot of Dengue Cases across EWeeks\")\n\n\n\n\nFrom tmap, tm_facets() can be used to split our maps according to epidemiology week.\n\ndengue_anim &lt;- tm_shape(vw_dengue.sf) +\n  tm_fill(\"count\", palette = \"Blues\") +\n  tm_borders(lwd = 0.1) +\n  tm_facets(along = \"epi_week\", free.coords = FALSE)\n\ndengue_anim\n\n\n\n\n========\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n\ntmap_animation(dengue_anim, filename = \"dengue.gif\", delay = 100, width = 1280, height = 720, scale = 2)\n\n\nknitr::include_graphics(\"dengue.gif\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#deriving-contiguity-weights",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#deriving-contiguity-weights",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Deriving contiguity weights",
    "text": "Deriving contiguity weights\nEach geometry is defined by a unique village. In order to test for any spatial autocorrelation, spatial weights must be assigned to each of the villages. In a more theoretical context, these villages are neighbours.\n\ndengue.wm_q &lt;- v_dengue.sf %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style=\"W\"),\n         .before = 1)\n\n\ndengue.wm_q\n\nSimple feature collection with 258 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 5\n   nb         wt         VILLCODE    count                              geometry\n * &lt;nb&gt;       &lt;list&gt;     &lt;chr&gt;       &lt;int&gt;                         &lt;POLYGON [°]&gt;\n 1 &lt;int [9]&gt;  &lt;dbl [9]&gt;  67000270001    37 ((120.2672 22.99653, 120.2673 22.996…\n 2 &lt;int [3]&gt;  &lt;dbl [3]&gt;  67000270002    15 ((120.266 22.99104, 120.266 22.99096…\n 3 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270003    39 ((120.2492 22.98265, 120.2497 22.982…\n 4 &lt;int [12]&gt; &lt;dbl [12]&gt; 67000270004   105 ((120.2391 22.98008, 120.2393 22.980…\n 5 &lt;int [3]&gt;  &lt;dbl [3]&gt;  67000270005   163 ((120.2578 22.97427, 120.2584 22.973…\n 6 &lt;int [4]&gt;  &lt;dbl [4]&gt;  67000270006    15 ((120.2713 22.96793, 120.2712 22.967…\n 7 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270007    41 ((120.2408 22.959, 120.2422 22.95846…\n 8 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270008    30 ((120.2701 22.94837, 120.2701 22.948…\n 9 &lt;int [5]&gt;  &lt;dbl [5]&gt;  67000270011    19 ((120.2304 22.93544, 120.2306 22.935…\n10 &lt;int [14]&gt; &lt;dbl [14]&gt; 67000270012    62 ((120.2251 22.96159, 120.2256 22.961…\n# ℹ 248 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#global-moran-is-permutation-test",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#global-moran-is-permutation-test",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Global Moran I’s Permutation Test",
    "text": "Global Moran I’s Permutation Test\n\nset.seed(1234)\n\nglobal_moran_perm(dengue.wm_q$count,\n                  dengue.wm_q$nb,\n                  dengue.wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.46837, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThere is sufficient statistical evidence to reject the null hypothesis that the spatial distribution of dengue cases in our areas of interest in Tainan city resembles random spatial distribution. Evidently, the Moran’s I test statistic is greater than 0 and we can infer that the spatial distribution resembles signs of clustering."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computing-local-morans-i",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computing-local-morans-i",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computing Local Moran’s I",
    "text": "Computing Local Moran’s I\nLocal Moran’s I is the most popular spatial statistical method to detect for spatial clusters and outliers.\n\nlisa &lt;- dengue.wm_q %&gt;%\n  mutate(local_moran = local_moran(count, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\nVisualising local Moran’s I\n\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Dengue Cases\",\n            main.title.size = 0.8)\n\nmap1\n\n\n\n\n\n\nVisualising local Moran’s I\n\ntmap_mode(\"plot\")\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\nmap2\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\nVisualising LISA map\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\n\nlisa_map &lt;- \ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_scale_bar() +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Outliers and Clusters\", main.title.size = 1)\n\ntmap_mode(\"plot\")\ntmap_arrange(lisa_map, secondary_map, ncol = 2)\n\n\n\n\nThe northwest and central-southeast villages of our Tainan area of interest have been identified as low-low clusters, thus their neighbours have had low-values or cases in general across the weeks.\nInterestingly, high-high clusters are found along the most part of a radial perimeter 3km away from the centre of the study area. These high-high clusters lie in Towns D06, D39, D01 and D02."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computing-local-gi-values-across-time",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computing-local-gi-values-across-time",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computing Local Gi* Values Across Time",
    "text": "Computing Local Gi* Values Across Time\n\nCreating Time Series Cube\nUse *spacetime() of sfdep package to create a spatio-temporal cube.\n\ntn_st &lt;- spacetime(vw_dengue, tainan_aoi, \n                   .loc_col = \"VILLCODE\",\n                   .time_col = \"epi_week\",\n                   active = \"data\")\n\nis_spacetime_cube(tn_st)\n\n[1] TRUE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#deriving-spatial-weights",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#deriving-spatial-weights",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Deriving Spatial Weights",
    "text": "Deriving Spatial Weights\nCompute spatial weights by deriving inverse distance weights to compute the Gi* statistics\n\ntn_nb &lt;- tn_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\nNow each time-sliced village has neighbours and weights.\n\nhead(tn_nb)\n\n# A tibble: 6 × 5\n  VILLCODE    epi_week count nb        wt       \n  &lt;chr&gt;          &lt;dbl&gt; &lt;int&gt; &lt;list&gt;    &lt;list&gt;   \n1 67000350032       31     0 &lt;int [4]&gt; &lt;dbl [4]&gt;\n2 67000270011       31     1 &lt;int [6]&gt; &lt;dbl [6]&gt;\n3 67000370005       31     0 &lt;int [9]&gt; &lt;dbl [9]&gt;\n4 67000330004       31     0 &lt;int [7]&gt; &lt;dbl [7]&gt;\n5 67000350028       31     0 &lt;int [5]&gt; &lt;dbl [5]&gt;\n6 67000350030       31     0 &lt;int [8]&gt; &lt;dbl [8]&gt;\n\n\nThe neighbour nb and weights wt have been calculated"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computation-of-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computation-of-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computation of Gi*",
    "text": "Computation of Gi*\nUse local_gstar_perm() of sfdep package and group by epi_week to manually calculate the local GI* statistic for each village VILLCODE. After which, use unnest() to unnest the gi_star column of the new dataframe.\n\ngistars &lt;- tn_nb %&gt;%\n  group_by(epi_week) %&gt;%\n  mutate(gi_star = local_gstar_perm(count, nb, wt)) %&gt;%\n  unnest(gi_star)\n\nWith the statistic, we can merge our geometry to plot and see the statistical trends of the local GI* statistic\n\ngistar_map &lt;- left_join(tainan_aoi, gistars,\n                          by = c(\"VILLCODE\" = \"VILLCODE\"))\n\nCreate the tmap plot for the gi_star statistic.\n\nUse p_sim to use the simulated values and use fixed style and breaks to plot the values that were P &lt; 0.05 which are areas that are significant.\n\n\ngistar_map &lt;- gistar_map %&gt;% mutate(`P-Value` = case_when(p_sim &lt; 0.05 ~ '&lt; 0.05',  p_sim &gt;= 0.05 ~ 'Not-Significant'))\n\ngistar_tmap &lt;-\n  tm_shape(gistar_map) + \n    tm_fill(\"P-Value\") +\n    tm_borders(lwd = 0.1) +\n    tm_facets(along = \"epi_week\", free.coords = FALSE) + \n  tm_scale_bar()\n\n\ntmap_animation(gistar_tmap, filename = \"gistar.gif\", delay = 100, width = 1280, height = 720, scale = 2)\n\n\nknitr::include_graphics(\"gistar.gif\")\n\n\n\n\nVillages in light blue mean that the p-value is less than 0.05, indicating that they are significantly associated with higher OR lower dengue cases compared to their neighbouring villages.\nGenerally, there are different significant areas across the study period.\nThe north western region of our study area in Tainan appears to be significant from epidemiology weeks 36 to 46.\nTo have a closer analysis on the significant areas, an emerging hot spot analysis can further conclude the observations."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#mann-kendall-test-and-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#mann-kendall-test-and-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Mann-Kendall Test and Gi*",
    "text": "Mann-Kendall Test and Gi*\nFirst, locations can be evaluated through the Mann-Kendall test. This non-parametric test assesses if a set of data values is increasing or decreasing over time and also if the direction of the trend is statistically significant.\nThe MannKendall() function is to identify whether the dengue cases are growing or decreasing with time.\n\nehsa &lt;- gistars %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  unnest_wider(mk)\n\n\ngistars_merged &lt;- merge(gistars, tainan_aoi[c(\"VILLCODE\", \"VILLENG\", \"TOWNID\", \"TOWNNAME\")], by = \"VILLCODE\", all.x = TRUE)\n\nTo have a look at all the Gi* statistics across all the villages, the following function can be used.\n\nunique_villeng &lt;- unique(gistars_merged$VILLENG)\n\ncreate_plot &lt;- function(villeng) {\n  cbg &lt;- gistars_merged %&gt;%\n    ungroup() %&gt;%\n    filter(VILLENG == villeng) %&gt;%\n    select(VILLENG, epi_week, gi_star)\n  \n  ggplot(data = cbg, aes(x = epi_week, y = gi_star)) +\n    geom_line() +\n    theme_light() +\n    ggtitle(paste(\"VILLENG:\", villeng))\n}\n\n\nplots_list &lt;- map(unique_villeng, create_plot)\nplots_list\nwrite_rds(plots_list, \"gistars_plots\")\n\n\nplots_list &lt;- read_rds(\"gistars_plots\")\n\n\n\n\n\n\n\nWarning\n\n\n\nSince the above two code chunks requires a lot of computation time, I have saved plots_list as a rds file.\n\n\nThere are some Gi* graphs of some villages that caught my attention. So let’s plot them out.\n\ninterested_vills &lt;- c(\"Fuqian Vil.\", \"Nanhua Vil.\", \"Shenggong Vil.\")\n\nvills_filtered &lt;- tainan_aoi %&gt;%\n  mutate(highlight = ifelse(VILLENG %in% interested_vills, \"Intersting\", \"NA\"))\n\n\ntm_shape(vills_filtered) +\n  tm_polygons(\"highlight\", palette = c(\"red\",\"grey\")) +\n  tm_borders(lwd = 0.2, alpha = 1) +\n  tm_layout(main.title = \"Overview of Initial Interested Villages\", main.title.size = 1) +\n  tm_scale_bar()\n\n\n\n\n\n\n\n\n\n\nWhat is a Census Block Group?\n\n\n\nIt is a unit of census geography that is a combination of census blocks typically used in the (United States)[https://support.esri.com/en-us/gis-dictionary/block-group]. However, another such of a unit of measurement is not available globally, hence I employ census block group for easier reference.\n\n\n\nInitial census block groups.\n\nShenggong VillageNanhua VillageFuqian Village\n\n\n\ncbg_sg &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Shenggong Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\n\n\ncbg_nh &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Nanhua Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\n\n\ncbg_fq &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Fuqian Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\n\n\n\n\nGi* Temporal Trends\nHypothesis:\nH0: There is no monotonic time-series trend.\nH1: A positive, negative or non-null trend exists.\n\nggplot() +\n  geom_line(data = cbg_sg, mapping = aes(x = epi_week, y = gi_star, color = \"Shenggong Village\")) +\n  geom_line(data = cbg_nh, mapping = aes(x = epi_week, y = gi_star, color = \"Nanhua Village\")) + \n  geom_line(data = cbg_fq, mapping = aes(x = epi_week, y = gi_star, color = \"Fuqian Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for 3 villages\",\n       color = \"Village\")\n\n\n\n\nLet’s check these villages and the significance of the local dengue cases over time.\n\nShenggong VillageNanhua VillageFuqian Village\n\n\n\ncbg_sg %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 -0.126 0.456   -24  190.   950\n\n\n\n\n\ncbg_nh %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n      tau    sl     S     D  varS\n    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 -0.0211 0.922    -4  190.   950\n\n\n\n\n\ncbg_fq %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau    sl     S     D  varS\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0     1     0  190.   950\n\n\n\n\n\nAll the villages that caught my attention with my naked eye have insignificant time-series trends for their dengue cases.\nLet’s check out where are the locations with significant time-series trends!\n\nfilter_vill &lt;- function(data) {\n  result &lt;- data %&gt;%\n    group_by(VILLENG) %&gt;%\n    summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %&gt;%\n    tidyr::unnest_wider(mk) %&gt;%\n    filter(sl &lt; 0.05)\n  \n  return(result)\n}\n\nsig_vills &lt;- filter_vill(gistars_merged)\n\n\n\n# A tibble: 21 × 6\n   VILLENG           tau       sl     S     D  varS\n   &lt;chr&gt;           &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Huaping Vil.   -0.505 0.00205    -96  190.  950 \n 2 Jiading Vil.   -0.463 0.00476    -88  190.  950 \n 3 Haidong Vil.   -0.442 0.00708    -84  190.  950 \n 4 Zhuxi Vil.     -0.421 0.0104     -80  190.  950 \n 5 Wennan Vil.    -0.395 0.000348  -308  780  7367.\n 6 Dongqiao Vil.  -0.389 0.0179     -74  190.  950 \n 7 Lixing Vil.    -0.379 0.0212     -72  190.  950 \n 8 Guangzhou Vil. -0.347 0.0350     -66  190.  950 \n 9 Xiaoximen Vil. -0.326 0.0478     -62  190.  950 \n10 Ren'ai Vil.     0.292 0.00817    228  780  7367.\n# ℹ 11 more rows\n\n\nFrom the results above, we can observe that about 8.43% of all the villages (21 of 249) in the study area only possess significant trends denoted by a p-value (sl) of less than 0.05.\nThe greatest downward and upward trends in dengue cases were exhibited in Huaping Village and Chenggong Village respectively according to their tau values.\n\n\nSignificant Census Block Groups\n\nHuaping VillageJiading VillageChenggong VillageXidong VillageRen’ai VillageXiaoximen Village\n\n\n\ncbg_hp &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Huaping Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_hp, mapping = aes(x = epi_week, y = gi_star, color = \"Huaping Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Huaping Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_jd &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Jiading Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_jd, mapping = aes(x = epi_week, y = gi_star, color = \"Jiading Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Jiading Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_cg &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Chenggong Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_cg, mapping = aes(x = epi_week, y = gi_star, color = \"Chenggong Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Chenggong Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_xd &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Xidong Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_xd, mapping = aes(x = epi_week, y = gi_star, color = \"Xidong Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Xidong Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_ra &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Ren'ai Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_ra, mapping = aes(x = epi_week, y = gi_star, color = \"Ren'ai Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Ren'ai Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_xm &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Xiaoximen Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_xm, mapping = aes(x = epi_week, y = gi_star, color = \"Xiaoximen Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Xiaoximen Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\nXiaoximen increased the most from epidemiology week 31 to 50 in Gi* value. This similar increasing trend was also observed by Huaping. By interpretation and looking at its graph, Xiaoximen village and Xiaoximen village were initially a coldspot area associated with relatively low dengue cases in its surrounding villages. However, the villages became a hotspot associated with relatively high dengue cases in its surrounding villages.In essence, Xiaoximen and its neighbours were more infected as a cluster over time.\nChenggong and Ren’ai villages were seen to be oscillating coldspots across the weeks, where their Gi* values were oscillating within the negative range of Gi*."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#emerging-hotspot-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#emerging-hotspot-analysis",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Emerging Hotspot Analysis",
    "text": "Emerging Hotspot Analysis\nFrom the sfdep package, emerging_hotspot_analysis() can be used.\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = tn_st,\n  .var = \"count\",\n  k = 1,\n  nsim = 99\n)\n\n\nThe k argument is used to specify the number of time lags which is set to 1 by default.\n\nTo view the distribution of EHSA classes, we can use ggplot().\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\nVisualising EHSA\nCurrently, ehsa does not have any spatial characteristic. Hence it needs to join with tainan_aoi to obtain the geospatial characteristics.\n\ntn_ehsa &lt;- tainan_aoi %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\nFilter for significant locations.\n\nehsa_sig &lt;- tn_ehsa %&gt;%\n  filter(p_value &lt; 0.05)\n\nehsa_sig_map &lt;- tm_shape(tn_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4) +\n  tm_scale_bar()\n\nehsa_sig_map\n\n\n\n\nIn general, most of the study area is characterised by hotspots rather than coldspots. There are a significant number of oscilating hotspots in the study area.\nIn total, eight villages had no detected patterns.\n\nfilter(tn_ehsa, classification == \"no pattern detected\")$VILLENG\n\n[1] \"Chengbei Vil.\" \"Chengnan Vil.\" \"Xiding Vil.\"   \"Yuping Vil.\"  \n[5] \"Shanglun Vil.\" \"Anshun Vil.\"   \"Zhonghua Vil.\"\n\n\nTwo new hotspots were detected.\n\nfilter(tn_ehsa, classification == \"new hotspot\")$VILLENG\n\ncharacter(0)"
  },
  {
    "objectID": "Workshop/revealjs_workshop.html#why-am-i-attending-this-workshop",
    "href": "Workshop/revealjs_workshop.html#why-am-i-attending-this-workshop",
    "title": "R Series ",
    "section": "Why am I attending this workshop?",
    "text": "Why am I attending this workshop?\n\nBecause I am:\n\nI am interested to creating slides in a different way apart from using PowerPoint slides\nInterested to create awesome web slides using R"
  },
  {
    "objectID": "Workshop/revealjs_workshop.html#hello-plot",
    "href": "Workshop/revealjs_workshop.html#hello-plot",
    "title": "R Series ",
    "section": "Hello Plot",
    "text": "Hello Plot"
  },
  {
    "objectID": "Workshop/revealjs_workshop.html#working-with-tabsets",
    "href": "Workshop/revealjs_workshop.html#working-with-tabsets",
    "title": "R Series ",
    "section": "Working with tabsets",
    "text": "Working with tabsets\n\nThe code chunkThe plot\n\n\n\n\npacman::p_load(tidyverse)\n\nexam_data &lt;- read_csv(\"C:/guacodemoleh/IS415-GAA/data/revealjs/Exam_data.csv\")\n\nggplot(data = exam_data,aes(x=MATHS)) +\n  geom_histogram(bins=10,\n                 boundary=100,\n                 color='black',\n                 fill=\"light blue\") +\n  ggtitle(\"Distribution of Maths Scores\")"
  },
  {
    "objectID": "Workshop/revealjs_workshop.html#adding-a-static-table",
    "href": "Workshop/revealjs_workshop.html#adding-a-static-table",
    "title": "R Series ",
    "section": "Adding a Static Table",
    "text": "Adding a Static Table\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nENGLISH\nMATHS\nSCIENCE\n\n\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n16\n\n\nStudent289\n3H\nMale\nChinese\n26\n16\n16\n\n\nStudent227\n3F\nMale\nChinese\n27\n77\n31\n\n\nStudent318\n3I\nMale\nMalay\n27\n11\n25\n\n\nStudent306\n3I\nFemale\nMalay\n31\n16\n16\n\n\nStudent313\n3I\nMale\nChinese\n31\n21\n25\n\n\nStudent316\n3I\nMale\nMalay\n31\n18\n27"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computation-of-local-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#computation-of-local-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computation of local Gi*",
    "text": "Computation of local Gi*\n\nwm_idw &lt;- v_dengue.sf %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n         scale = 1,\n         alpha = 1),\n.before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    count, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 258 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 13\n   gi_star    e_gi    var_gi p_value  p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1 -0.996  0.00365   1.05e-6 -0.725  0.469          0.56     0.28    0.449 &lt;int&gt;\n 2 -1.16   0.00319   1.68e-6 -0.852  0.394          0.4      0.2     0.237 &lt;int&gt;\n 3 -0.124  0.00368   1.54e-6  0.0326 0.974          0.84     0.42    0.597 &lt;int&gt;\n 4  1.04   0.00393   6.82e-7  0.998  0.318          0.22     0.11    1.11  &lt;int&gt;\n 5  0.260  0.00502   1.74e-6 -0.562  0.574          0.6      0.3     0.635 &lt;int&gt;\n 6 -0.0819 0.00339   1.61e-6  0.295  0.768          0.68     0.34    0.574 &lt;int&gt;\n 7 -1.24   0.00351   1.25e-6 -1.08   0.282          0.26     0.13    0.683 &lt;int&gt;\n 8 -2.19   0.00347   1.51e-6 -1.91   0.0558         0.04     0.02    0.644 &lt;int&gt;\n 9 -2.05   0.00348   1.47e-6 -1.80   0.0721         0.08     0.04    0.305 &lt;int&gt;\n10 -2.37   0.00383   6.04e-7 -2.33   0.0196         0.02     0.01    0.516 &lt;int&gt;\n# ℹ 248 more rows\n# ℹ 4 more variables: wts &lt;list&gt;, VILLCODE &lt;chr&gt;, count &lt;int&gt;,\n#   geometry &lt;POLYGON [°]&gt;\n\n\n\nVisualising Gi*\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\nVisualising p-value of HCSA\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nVisualising Local HCSA\n\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Dengue Case Count\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\nVisualising hot & cold spot areas\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "",
    "text": "Dengue fever is a ubiquitous condition in tropical areas characterised by humid weather induced by warm temperatures and abundant rainfall. Taiwan is a subtropical region and its weather conditions cause it to be a favourable breeding ground for female Aedes aegypti and Aedes albopictus mosquitoes.\nIn 2015, Taiwan In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases (Kam, 2024).\nFor this project, the study area focuses on Southwest Tainan, and epidemiology weeks 31 through 50 in 2023."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#loading-necessary-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#loading-necessary-packages",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Loading necessary packages",
    "text": "Loading necessary packages\nFor this project we need the following packages:\n\ntidyverse for importing, wrangling and visualising data\nlubridate to work with time-related data more easily\ndplyr for attribute data handling\nsf to handle spatial data\ntmap to plot choropleth maps\nsfdep to compute spatial contiguity weights\ngifski to save gif files\nKendall to perform Mann-Kendall test\n\n\npacman::p_load(tidyverse, lubridate, dplyr, sf, tmap, sfdep, gifski, Kendall)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Importing data",
    "text": "Importing data\n\nGeospatial\nRead the Tainan boundary layer.\n\ntn_sf &lt;- st_read(\"data/geospatial/TAINAN_VILLAGE.shp\")\n\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial\\TAINAN_VILLAGE.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n\n\n\ntn_sf &lt;- st_transform(tn_sf, crs = 3824)\nplot(st_geometry(tn_sf))\n\n\n\n\n\nThe coordinates are employing the TWD97 geodetic system, which translates to EPSG ID 3824.\n\n\n\n   VILLCODE          COUNTYNAME          TOWNNAME           VILLNAME        \n Length:649         Length:649         Length:649         Length:649        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   VILLENG            COUNTYID          COUNTYCODE           TOWNID         \n Length:649         Length:649         Length:649         Length:649        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   TOWNCODE             NOTE                    geometry  \n Length:649         Length:649         POLYGON      :649  \n Class :character   Class :character   epsg:3824    :  0  \n Mode  :character   Mode  :character   +proj=long...:  0  \n\n\n\n\nAspatial\n\ndengue &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#tainan-geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#tainan-geospatial-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Tainan Geospatial Data",
    "text": "Tainan Geospatial Data\nThis project will focus towns with IDs D01, D02, D04, D06, D07, D08, D36, D39.\nHence, confine the geospatial data to the study area,\n\ntainan_aoi &lt;- tn_sf %&gt;%\n  filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"))\n\nsummary(tainan_aoi)\n\n   VILLCODE          COUNTYNAME          TOWNNAME           VILLNAME        \n Length:258         Length:258         Length:258         Length:258        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   VILLENG            COUNTYID          COUNTYCODE           TOWNID         \n Length:258         Length:258         Length:258         Length:258        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   TOWNCODE             NOTE                    geometry  \n Length:258         Length:258         POLYGON      :258  \n Class :character   Class :character   epsg:3824    :  0  \n Mode  :character   Mode  :character   +proj=long...:  0  \n\n\nView how the different towns are located geographically by using a choropleth map via tmap.\n\nstudy_townids &lt;- c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\")\n\ntn_sf_filtered &lt;- tn_sf %&gt;%\n  mutate(highlight = ifelse(TOWNID %in% study_townids, \"Study\", \"Not Study\"))\n\n\nmain_map &lt;- tm_shape(tn_sf_filtered) +\n  tm_polygons(\"highlight\", palette = c(\"grey\", \"red\")) +\n  tm_borders(lwd = 0.2, alpha = 1) +\n  tm_layout(main.title = \"Overview of Tainan\", main.title.size = 1) +\n  tm_scale_bar()\n\nsecondary_map &lt;- tm_shape(tainan_aoi) +\n  tm_polygons(col = \"TOWNID\") +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Dengue Study Area\", main.title.size = 1) +\n  tm_scale_bar()\n\ntm_layout(legend.show = FALSE)\n\n$tm_layout\n$tm_layout$legend.show\n[1] FALSE\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\"\n\ntmap_arrange(main_map, secondary_map, ncol = 2)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dengue-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dengue-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Dengue Data",
    "text": "Dengue Data\nFirst, let’s find out more about our dengue data.\nCheck the class type of the dengue data set.\n\nclass(dengue)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\n\nCurrently, the dengue data set is a tibble data frame.\n\nBrowse through the first few rows.\n\nhead(dengue)\n\n# A tibble: 6 × 26\n  發病日     個案研判日 通報日     性別  年齡層 居住縣市 居住鄉鎮 居住村里\n  &lt;date&gt;     &lt;chr&gt;      &lt;date&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;   \n1 1998-01-02 None       1998-01-07 男    40-44  屏東縣   屏東市   None    \n2 1998-01-03 None       1998-01-14 男    30-34  屏東縣   東港鎮   None    \n3 1998-01-13 None       1998-02-18 男    55-59  宜蘭縣   宜蘭市   None    \n4 1998-01-15 None       1998-01-23 男    35-39  高雄市   苓雅區   None    \n5 1998-01-20 None       1998-02-04 男    55-59  宜蘭縣   五結鄉   None    \n6 1998-01-22 None       1998-02-19 男    20-24  桃園市   蘆竹區   None    \n# ℹ 18 more variables: 最小統計區 &lt;chr&gt;, 最小統計區中心點X &lt;chr&gt;,\n#   最小統計區中心點Y &lt;chr&gt;, 一級統計區 &lt;chr&gt;, 二級統計區 &lt;chr&gt;,\n#   感染縣市 &lt;chr&gt;, 感染鄉鎮 &lt;chr&gt;, 感染村里 &lt;chr&gt;, 是否境外移入 &lt;chr&gt;,\n#   感染國家 &lt;chr&gt;, 確定病例數 &lt;dbl&gt;, 居住村里代碼 &lt;chr&gt;, 感染村里代碼 &lt;chr&gt;,\n#   血清型 &lt;chr&gt;, 內政部居住縣市代碼 &lt;chr&gt;, 內政部居住鄉鎮代碼 &lt;chr&gt;,\n#   內政部感染縣市代碼 &lt;chr&gt;, 內政部感染鄉鎮代碼 &lt;chr&gt;\n\n\nThe data is in Traditional Chinese? No problem! The following table is a rough guide on all the attributes:\n\n\n\n\n\n\n\nAttribute\nTranslation\n\n\n\n\n發病日\nOnset date\n\n\n個案研判日\nAssessed date\n\n\n通報日\nNotification date\n\n\n性別\nGender\n\n\n年齡層\nAge group\n\n\n居住縣市\nResidential city\n\n\n居住鄉鎮\nResidential township\n\n\n居住村里\nResidential village\n\n\n最小統計區\nSmallest statistical area\n\n\n最小統計區中心點X\nX-coordinate of the smallest statistical area\n\n\n最小統計區中心點Y\nY-coordinate of the smallest statistical area\n\n\n一級統計區\nLevel 1 statistical area\n\n\n二級統計區\nLevel 2 statistical area\n\n\n感染縣市\nInfected city\n\n\n感染鄉鎮\nInfected township\n\n\n感染村里\nInfected village\n\n\n是否境外移入\nImported case?\n\n\n感染國家\nImported country origin\n\n\n確定病例數\nConfirmed case count\n\n\n居住村里代碼\nResidential village code\n\n\n感染村里代碼\nInfected village code\n\n\n血清型\nSerotype\n\n\n內政部居住縣市代碼\nResidential city (Internal Affairs)\n\n\n內政部居住鄉鎮代碼\nResidential township (Internal Affairs)\n\n\n內政部感染縣市代碼\nInfected city code (Internal Affairs)\n\n\n內政部感染鄉鎮代碼\nInfected township code (Internal Affairs)\n\n\n\nSince the data includes all of Taiwan’s confirmed dengue cases from 1998 to January 2024, the data needs to be further confined to year 2023, epidemiology weeks 31 to 50.\nExtract all the 2023 dengue cases.\n\ndengue_2023 &lt;- subset(dengue, substr(發病日, 1, 4) == \"2023\")\n\nCreate a column to store the epidemiology week number for the respective dates. We can use a function called epiweek() from the lubridate package to carry this task out.\n\ndengue_2023$epi_week &lt;- epiweek(dengue_2023$發病日)\n\nFilter for epidemiology weeks 31 to 50.\n\ndengue_study &lt;- dengue_2023 %&gt;%\n  filter(epi_week &gt;= 31 & epi_week &lt;= 50)\n\nAccording to Health Protection Surveillance Centre, epidemiology weeks 31 to 50 are from 2023-07-30 to 2023-12-16.\nThen verify that the earliest and latest date in tainan_dengue_2023 are 2023-07-30 and 2023-12-16 respectively.\n\nearliest_date &lt;- min(dengue_study$發病日)\nlatest_date &lt;- max(dengue_study$發病日)\n\nearliest_date == \"2023-07-30\"\n\n[1] TRUE\n\nlatest_date == \"2023-12-16\"\n\n[1] TRUE\n\n\n\n\n\n\n\n\nImportant\n\n\n\nSince it is my first time using the epiweek() function, I felt it was important to refer to an official medical source explicitly stating the start and end dates of our interested study period. Hence, I performed a quick test to check if there was any mistake in the usage of this unfamiliar function.\n\n\nEarlier, the dengue data type identified was tibble data frame. To perform an intersection between the study area boundary and our dengue study data, dengue_study needs to be converted to sf data frame format since tainan_aoi is in that format.\n\nclass(tainan_aoi)\n\n[1] \"sf\"         \"data.frame\"\n\n\nEnsure coordinates are numeric. If not, convert them to numeric.\n\n\n[1] \"character\"\n\n\n[1] \"character\"\n\n\n[1] \"numeric\"\n\n\n[1] \"numeric\"\n\n\n\ndengue_study_clean  &lt;- dengue_study %&gt;%\n  filter(is.numeric(最小統計區中心點X) & is.numeric(最小統計區中心點Y))\n\nnrow(dengue_study) == nrow(dengue_study_clean)\n\n[1] TRUE\n\n\n\n\n\n\n\n\nLearning Point\n\n\n\nWhen performing the as.numeric() on dengue_study, there were no changes in rows. On second thought, the function will not include rows that do not contain numeric characters!\n\n\nRemove missing coordinates.\n\ndengue_study &lt;- dengue_study %&gt;% \n  filter(!is.na(最小統計區中心點X), !is.na(最小統計區中心點Y))\n\nNow, dengue_study can be converted to sf data frame.\n\ndengue.sf &lt;- st_as_sf(dengue_study, \n                      coords = c(\"最小統計區中心點X\",\"最小統計區中心點Y\"),\n                      crs=3824)\n\nConfine dengue.sf into dengue cases recorded in just Tainan City, i.e. 台南市.\n\naoi_dengue.sf &lt;- subset(dengue.sf, 居住縣市 == \"台南市\")\n\nConsolidate dengue.sf and keep the columns that are needed only.\n\ncolnames(aoi_dengue.sf)\n\n [1] \"發病日\"             \"個案研判日\"         \"通報日\"            \n [4] \"性別\"               \"年齡層\"             \"居住縣市\"          \n [7] \"居住鄉鎮\"           \"居住村里\"           \"最小統計區\"        \n[10] \"一級統計區\"         \"二級統計區\"         \"感染縣市\"          \n[13] \"感染鄉鎮\"           \"感染村里\"           \"是否境外移入\"      \n[16] \"感染國家\"           \"確定病例數\"         \"居住村里代碼\"      \n[19] \"感染村里代碼\"       \"血清型\"             \"內政部居住縣市代碼\"\n[22] \"內政部居住鄉鎮代碼\" \"內政部感染縣市代碼\" \"內政部感染鄉鎮代碼\"\n[25] \"epi_week\"           \"geometry\"          \n\naoi_dengue.sf &lt;- aoi_dengue.sf %&gt;%\n  select(發病日, 性別, 年齡層, 感染國家, 確定病例數, epi_week, geometry)\n\n\n\n\n\n\n\nNote\n\n\n\nI have decided to extract the onset date, gender, age group, country of infection, count, epidemiology week and geometry. Technically, the gender, age group, and country of infection need not be included.\n\n\nFinally, an intersection between tainan_aoi and aoi_dengue.sf to confine the dengue cases to the study area can be performed using `st_intersection()\n\nst_crs(tainan_aoi)\nst_crs(aoi_dengue.sf)\naoi_dengue &lt;- st_intersection(tainan_aoi, aoi_dengue.sf)\n\n\nwrite_rds(aoi_dengue, \"data/geospatial/aoi_dengue.rds\")\n\n\naoi_dengue &lt;- readRDS(\"data/geospatial/aoi_dengue.rds\")\nclass(aoi_dengue)\n\n[1] \"sf\"         \"data.frame\"\n\nnrow(aoi_dengue)\n\n[1] 18816"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aggregating-dengue-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aggregating-dengue-data",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Aggregating Dengue Data",
    "text": "Aggregating Dengue Data\nGet a proper consolidated data set where the dengue cases are sorted by their unique village codes.\n\nv_dengue &lt;- aoi_dengue %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(count = n()) %&gt;%\n  st_drop_geometry()\n\nv_dengue.sf &lt;- left_join(tainan_aoi,v_dengue) %&gt;%\n  select(1, tail(names(.), 2)) %&gt;%\n  complete(VILLCODE, fill = list(count = 0)) %&gt;%\n  st_as_sf()\n\nGet a proper consolidated data set where the dengue cases are sorted by their unique village codes and epidemiology weeks.\n\nvw_dengue &lt;- aoi_dengue %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;%\n  summarise(count = n()) %&gt;%\n  st_drop_geometry()\n\nvw_dengue &lt;- left_join(tainan_aoi,vw_dengue) %&gt;%\n  select(1, tail(names(.), 3)) %&gt;%\n  complete(VILLCODE, epi_week = 31:50, fill = list(count = 0)) %&gt;%\n  st_drop_geometry() %&gt;%\n  select(1:3) %&gt;%\n  drop_na()\n\n\nvw_dengue.sf &lt;- left_join(tainan_aoi, vw_dengue) %&gt;%\n  select(1, tail(names(.), 3)) %&gt;%\n  complete(VILLCODE, epi_week = 31:50, fill = list(count = 0)) %&gt;%\n  st_as_sf()\n\nvw_dengue.sf &lt;- vw_dengue.sf[!is.na(vw_dengue.sf$epi_week), ]\n\nwrite_rds(vw_dengue.sf, \"data/geospatial/vw_dengue.sf\")\n\n\n\n\n\n\n\nNote\n\n\n\nIn the data, there are some villages that do not have cases or have no recorded cases for some weeks. Using complete(), we can iterate through our study period weeks and fill them with the count value of 0\n\n\n\nvw_dengue.sf &lt;- read_rds(\"data/geospatial/vw_dengue.sf\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#across-space",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#across-space",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Across Space",
    "text": "Across Space\n\nBarplotChoropleth Map\n\n\n\nggplot(aoi_dengue, aes(x = TOWNID)) +\n  geom_bar(fill = \"steelblue\", color = \"black\", bins = 20) +\n  geom_text(stat = \"count\", aes(label = ..count..), vjust = -0.5)\n\n\n\n  labs(x = \"TOWNID\", y = \"Number of Dengue Cases\", Title = \"Histogram of Dengue cases by District Town\") \n\n$x\n[1] \"TOWNID\"\n\n$y\n[1] \"Number of Dengue Cases\"\n\n$Title\n[1] \"Histogram of Dengue cases by District Town\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(v_dengue.sf) +\n  tm_fill(\"count\",\n          style = \"jenks\",\n          title = \"count\") +\n  tm_layout(main.title = \"Distribution of Dengue Cases per Village\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\nAcross Time\n\nggplot(aoi_dengue, aes(x = epi_week)) +\n  geom_bar(fill = \"blue\", color = \"black\") +\n labs(x = \"Epidemiology Week\", y = \"Count\", title = \"Barplot of Dengue Cases across EWeeks\")\n\n\n\n\nFrom tmap, tm_facets() can be used to split our maps according to epidemiology week.\n\ndengue_anim &lt;- tm_shape(vw_dengue.sf) +\n  tm_fill(\"count\", palette = \"Blues\") +\n  tm_borders(lwd = 0.1) +\n  tm_facets(along = \"epi_week\", free.coords = FALSE)\n\ndengue_anim\n\n\n\n\n========\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n====\n\n\n\n\n\n\n\n\n\n\n\nLegend Scale\n\n\n\nNotice that the legend scale and bins are equal across all the rendered maps\n\n\n\ntmap_animation(dengue_anim, filename = \"dengue.gif\", delay = 100, width = 1280, height = 720, scale = 2)\n\n\nknitr::include_graphics(\"dengue.gif\")\n\n\n\n\nCorresponding to the tallest bar from the earlier histogram for the dengue cases per week, there were the most dengue cases reported in epidemiology week 39. In the same week, there was a village in the east of our study area that demonstrated the highest case count of at least 60, the highest count for a village during the study period."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deriving-contiguity-weights",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deriving-contiguity-weights",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Deriving contiguity weights",
    "text": "Deriving contiguity weights\nEach geometry is defined by a unique village. In order to test for any spatial autocorrelation, spatial weights must be assigned to each of the villages. In a more theoretical context, these villages are neighbours.\n\ndengue.wm_q &lt;- v_dengue.sf %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style=\"W\"),\n         .before = 1)\n\n\nglimpse(dengue.wm_q)\n\nRows: 258\nColumns: 5\n$ nb       &lt;nb&gt; &lt;2, 29, 31, 32, 37, 66, 76, 103, 104&gt;, &lt;1, 3, 104&gt;, &lt;2, 4, 5, …\n$ wt       &lt;list&gt; &lt;0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.11…\n$ VILLCODE &lt;chr&gt; \"67000270001\", \"67000270002\", \"67000270003\", \"67000270004\", \"…\n$ count    &lt;int&gt; 37, 15, 39, 105, 163, 15, 41, 30, 19, 62, 9, 17, 14, 9, 13, 8…\n$ geometry &lt;POLYGON [°]&gt; POLYGON ((120.2672 22.99653..., POLYGON ((120.266 22.…"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-moran-is-permutation-test",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-moran-is-permutation-test",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Global Moran I’s Permutation Test",
    "text": "Global Moran I’s Permutation Test\nTo perform a simulation of Moran’s I test via `global_moran_perm(), use set.seed() to ensure that the results generated are consistent.\n\nset.seed(1234)\n\nglobal_moran_perm(dengue.wm_q$count,\n                  dengue.wm_q$nb,\n                  dengue.wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.46837, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThere is sufficient statistical evidence to reject the null hypothesis that the spatial distribution of dengue cases in our areas of interest in Tainan city resembles random spatial distribution. Evidently, the Moran’s I test statistic is greater than 0 and we can infer that the spatial distribution resembles signs of clustering."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computing-local-morans-i",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computing-local-morans-i",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computing Local Moran’s I",
    "text": "Computing Local Moran’s I\nLocal Moran’s I is the most popular spatial statistical method to detect for spatial clusters and outliers.\n\nlisa &lt;- dengue.wm_q %&gt;%\n  mutate(local_moran = local_moran(count, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\nVisualising local Moran’s I\n\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Dengue Cases\",\n            main.title.size = 0.8)\n\nmap1\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe appropriate classification for p-values should be 0.001, 0.01, 0.05 and not significant.\n\n\n\ntmap_mode(\"plot\")\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\", breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\nLooking at the map on the right, villages with a lighter orange have values closer to 0 which signify that they have significant clustering and their neighbouring areas exhibit similar values. These villages seem to mostly disperse at the fringes of our study area.\n\n\n\nVisualising LISA map\nNow, just filter for regions which had significant p-values and plot the map.\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\n\nlisa_map &lt;- \ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_scale_bar() +\n  tm_layout(legend.show = TRUE, main.title = \"Overview of Outliers and Clusters\", main.title.size = 1)\n\ntmap_mode(\"plot\")\ntmap_arrange(lisa_map, secondary_map, ncol = 2)\n\n\n\n\n\n\n\n\n\n\nWhat do the LISA classifications mean?\n\n\n\n\nHigh-High Clusters: Villages with high number of dengue cases likewise surrounded by neighbouring villages with high number of dengue cases.\nLow-Low Clusters: Villages of a low number of dengue cases are similarly surrounded by neigbouring villages with low number of dengue cases\nHigh-Low Outliers: Villages with high number of dengue cases are instead surrounded by neighbouring villages with low number of dengue cases\nLow-High Outliers: Villages with low number of dengue cases are instead surrounded by neighbouring villages with high number of dengue cases\n\n\n\nThe northwest and central-southeast villages of our Tainan area of interest have been identified as low-low clusters, thus their neighbours have had low-values or cases in general across the weeks.\nInterestingly, high-high clusters are found along the most part of a radial perimeter 3km away from the centre of the study area. These high-high clusters lie in Districts:\n\nD01: East District\nD02: South District\nD06: An’nan District\nD39: Yong’kang District\n\nThe municipality for these high-high clusters should impose more safety mechanisms to alleviate dengue transmissions.\nThere were no high-low outliers identified and hence it is possible that there is no specific village that may be a local hotspot that may directly contribute to the dengue transmissions to its neighbours.\nNearby the high-high clusters, there were five low-high outlier villages which could be worth investigating since these villages are not as affected as its badly infected neighbouring villages."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computation-of-local-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computation-of-local-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computation of local Gi*",
    "text": "Computation of local Gi*\n\nwm_idw &lt;- v_dengue.sf %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n         scale = 1,\n         alpha = 1),\n.before = 1)\n\n\n\n\n\n\n\nInterpreting code\n\n\n\n\nThe data used here (v_dengue.sf) contains the consolidated data categorised by space, not space and time since we are only focusing on spatial autocorrelation\nst_contiguity(geometry): Derives and identifies neighbours by reading sf polygon objects. Its sibling argument is st_knn()\nst_inverse_distance(): calculates an inverse distance weight from the prior neighbour list and sf geometry column. Other weights can be calculated from st_kernel_weights(), sth_nb_dists() and st_weights()\n\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    count, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 258 features and 14 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 258 × 15\n   gi_star cluster    e_gi    var_gi std_dev p_value p_sim p_folded_sim skewness\n     &lt;dbl&gt; &lt;fct&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1 -0.996  Low     0.00370   7.49e-7  -0.909 0.363    0.36         0.18   0.217 \n 2 -1.16   Low     0.00311   2.20e-6  -0.691 0.490    0.54         0.27   1.37  \n 3 -0.124  Low     0.00355   1.42e-6   0.139 0.889    0.86         0.43   0.622 \n 4  1.04   High    0.00403   5.46e-7   0.979 0.328    0.32         0.16   0.133 \n 5  0.260  High    0.00522   1.73e-6  -0.716 0.474    0.5          0.25   0.365 \n 6 -0.0819 Low     0.00325   1.55e-6   0.409 0.683    0.56         0.28   0.950 \n 7 -1.24   Low     0.00361   1.39e-6  -1.10  0.269    0.26         0.13   0.392 \n 8 -2.19   Low     0.00343   1.38e-6  -1.97  0.0488   0.02         0.01   0.755 \n 9 -2.05   Low     0.00339   1.32e-6  -1.83  0.0677   0.06         0.03   0.406 \n10 -2.37   Low     0.00370   4.03e-7  -2.64  0.00823  0.02         0.01   0.0995\n# ℹ 248 more rows\n# ℹ 6 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, VILLCODE &lt;chr&gt;,\n#   count &lt;int&gt;, geometry &lt;POLYGON [°]&gt;"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Visualising Gi*",
    "text": "Visualising Gi*\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\nBeginning from the epicentre of the study area, the values of Gi* seem to decrease radially in general. Closer to the centre, the more positive Gi* values indicate a greater density of dengue cases whilst the more negative Gi* values indicate more randomness in the distribution of dengue cases in the villages.\n\n\n\n\n\n\nDisadvantage of using Gi* statistic\n\n\n\nClusters composed of few observations may inflate Gi* although other methods that allow the selection of only the most robust clusters is available.\n\n\n\nVisualising p-value of HCSA\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nVisualising General Local HCSA\nImplement the correct p-value classification in the p-value map visualisation.\n\ntmap_mode(\"plot\")\nmap3 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Dengue Case Count\",\n            main.title.size = 0.8)\n\nmap4 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map3, map4, ncol = 2)\n\n\n\n\nVillages that are insignificant indicate that their dengue cases are more likely due to geographical proximity."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-general-hot-cold-spot-areas",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualising-general-hot-cold-spot-areas",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Visualising General Hot & Cold spot areas",
    "text": "Visualising General Hot & Cold spot areas\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\n\ntmap_mode(\"plot\")\n\nHCSA_sig_map &lt;- tm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"Gi*\",\n            main.title.size = 1) +\n  tm_scale_bar()\n\ntmap_arrange(lisa_map, HCSA_sig_map, ncol = 2)\n\n\n\n\nSeveral cold spots are observed along the northern region of the study area as well as some southern villages."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#creating-time-series-cube",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#creating-time-series-cube",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Creating Time Series Cube",
    "text": "Creating Time Series Cube\nUse spacetime() of sfdep package to create a spatio-temporal cube.\n\ntn_st &lt;- spacetime(vw_dengue, tainan_aoi, \n                   .loc_col = \"VILLCODE\",\n                   .time_col = \"epi_week\",\n                   active = \"data\")\n\nis_spacetime_cube(tn_st)\n\n[1] TRUE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deriving-spatial-weights",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#deriving-spatial-weights",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Deriving Spatial Weights",
    "text": "Deriving Spatial Weights\nCompute spatial weights by deriving inverse distance weights to compute the Gi* statistics\n\ntn_nb &lt;- tn_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n\n\n\n\n\n\nInterpreting the above code block\n\n\n\n\nactivate() activates the geometry context of the layer, and thus the layer should contain a polygon geometry attribute\nmutate() creates new columns nb and wt\nActivate the data context again and copy to the nb and wt columns to every time-slice using set_nbs() and set_wts()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computation-of-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#computation-of-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Computation of Gi*",
    "text": "Computation of Gi*\nUse local_gstar_perm() of sfdep package and group by epi_week to manually calculate the local Gi* statistic for each village VILLCODE. After which, use unnest() to unnest the gi_star column of the new dataframe.\n\ngistars &lt;- tn_nb %&gt;%\n  group_by(epi_week) %&gt;%\n  mutate(gi_star = local_gstar_perm(count, nb, wt)) %&gt;%\n  unnest(gi_star)\n\nWith the statistic, we can merge our geometry to plot and see the statistical trends of the local GI* statistic\n\ngistar_map &lt;- left_join(tainan_aoi, gistars,\n                          by = c(\"VILLCODE\" = \"VILLCODE\"))\n\nCreate the tmap plot for the gi_star statistic over time.\n\nUse p_sim to use the simulated values and use fixed style and breaks to plot the values that were P &lt; 0.05, which are areas that are significant.\n\n\ngistar_map &lt;- gistar_map %&gt;% mutate(`P-Value` = case_when(p_sim &lt; 0.05 ~ '&lt; 0.05',  p_sim &gt;= 0.05 ~ 'Not-Significant'))\n\ngistar_tmap &lt;-\n  tm_shape(gistar_map) + \n    tm_fill(\"P-Value\") +\n    tm_borders(lwd = 0.1) +\n    tm_facets(along = \"epi_week\", free.coords = FALSE) + \n  tm_scale_bar()\n\n\ntmap_animation(gistar_tmap, filename = \"gistar.gif\", delay = 100, width = 1280, height = 720, scale = 2)\n\n\nknitr::include_graphics(\"gistar.gif\")\n\n\n\n\nVillages in light blue mean that the p-value is less than 0.05, indicating that they are significantly associated with higher OR lower dengue cases compared to their neighbouring villages.\nGenerally, there are different significant areas across the study period.\nThe north western region of our study area in Tainan appears to be significant from epidemiology weeks 36 to 46."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#mann-kendall-test-and-gi",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#mann-kendall-test-and-gi",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Mann-Kendall Test and Gi*",
    "text": "Mann-Kendall Test and Gi*\n\nExploratory Data Analysis\nFirst, locations can be evaluated through the Mann-Kendall test. This non-parametric test assesses if a set of data values is increasing or decreasing over time and also if the direction of the trend is statistically significant.\nThe MannKendall() function is to identify whether the dengue cases are growing or decreasing with time.\n\nehsa &lt;- gistars %&gt;%\n  group_by(VILLCODE) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  unnest_wider(mk)\n\n\ngistars_merged &lt;- merge(gistars, tainan_aoi[c(\"VILLCODE\", \"VILLENG\", \"TOWNID\", \"TOWNNAME\")], by = \"VILLCODE\", all.x = TRUE)\n\nTo have a look at all the Gi* statistics across all the villages, the following function can be used.\n\nunique_villeng &lt;- unique(gistars_merged$VILLENG)\n\ncreate_plot &lt;- function(villeng) {\n  cbg &lt;- gistars_merged %&gt;%\n    ungroup() %&gt;%\n    filter(VILLENG == villeng) %&gt;%\n    select(VILLENG, epi_week, gi_star)\n  \n  ggplot(data = cbg, aes(x = epi_week, y = gi_star)) +\n    geom_line() +\n    theme_light() +\n    ggtitle(paste(\"VILLENG:\", villeng))\n}\n\n\nplots_list &lt;- map(unique_villeng, create_plot)\nplots_list\nwrite_rds(plots_list, \"gistars_plots\")\n\n\nplots_list &lt;- read_rds(\"gistars_plots\")\n\n\n\n\n\n\n\nWarning\n\n\n\nSince the above two code chunks requires a lot of computation time, I have saved plots_list as a rds file.\n\n\nThere are some Gi* graphs of some villages that caught my attention. So let’s plot them out.\n\ninterested_vills &lt;- c(\"Fuqian Vil.\", \"Nanhua Vil.\", \"Shenggong Vil.\")\n\nvills_filtered &lt;- tainan_aoi %&gt;%\n  mutate(highlight = ifelse(VILLENG %in% interested_vills, \"Intersting\", \"NA\"))\n\n\ntm_shape(vills_filtered) +\n  tm_polygons(\"highlight\", palette = c(\"red\",\"grey\")) +\n  tm_borders(lwd = 0.2, alpha = 1) +\n  tm_layout(main.title = \"Overview of Initial Interested Villages\", main.title.size = 1) +\n  tm_scale_bar()\n\n\n\n\n\n\n\n\n\n\nWhat is a Census Block Group (CBG)?\n\n\n\nIt is a unit of census geography that is a combination of census blocks typically used in the United States. However, another such of a unit of measurement is not available globally, hence I employ census block group for easier reference.\n\n\n\nInitial CBGs\n\nShenggong VillageNanhua VillageFuqian Village\n\n\n\ncbg_sg &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Shenggong Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\n\n\ncbg_nh &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Nanhua Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\n\n\ncbg_fq &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Fuqian Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\n\n\n\n\n\nGi* Temporal Trends\nHypothesis:\nH0: There is no monotonic time-series trend.\nH1: A positive, negative or non-null trend exists.\n\nggplot() +\n  geom_line(data = cbg_sg, mapping = aes(x = epi_week, y = gi_star, color = \"Shenggong Village\")) +\n  geom_line(data = cbg_nh, mapping = aes(x = epi_week, y = gi_star, color = \"Nanhua Village\")) + \n  geom_line(data = cbg_fq, mapping = aes(x = epi_week, y = gi_star, color = \"Fuqian Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for 3 villages\",\n       color = \"Village\")\n\n\n\n\nLet’s check these villages and the significance of the local dengue cases over time.\n\nShenggong VillageNanhua VillageFuqian Village\n\n\n\ncbg_sg %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 -0.126 0.456   -24  190.   950\n\n\n\n\n\ncbg_nh %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n      tau    sl     S     D  varS\n    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 -0.0211 0.922    -4  190.   950\n\n\n\n\n\ncbg_fq %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau    sl     S     D  varS\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0     1     0  190.   950\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe p-value is represented by attribute sl.\n\n\nAll the villages that caught my attention with my naked eye have insignificant time-series trends for their dengue cases. Thus there are no monotonic time-series trends detected.\nLet’s check out where are the locations with significant time-series trends!\n\nfilter_vill &lt;- function(data) {\n  result &lt;- data %&gt;%\n    group_by(VILLCODE,VILLENG) %&gt;%\n    summarise(mk = list(unclass(Kendall::MannKendall(gi_star)))) %&gt;%\n    tidyr::unnest_wider(mk) %&gt;%\n    filter(sl &lt; 0.05)\n  \n  return(result)\n}\n\nsig_vills &lt;- filter_vill(gistars_merged)\n\n\n\n# A tibble: 14 × 7\n# Groups:   VILLCODE [14]\n   VILLCODE    VILLENG           tau      sl     S     D  varS\n   &lt;chr&gt;       &lt;chr&gt;           &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 67000360007 Huaping Vil.   -0.505 0.00205   -96  190.   950\n 2 67000310011 Jiading Vil.   -0.463 0.00476   -88  190.   950\n 3 67000350015 Haidong Vil.   -0.442 0.00708   -84  190.   950\n 4 67000330001 Zhuxi Vil.     -0.421 0.0104    -80  190.   950\n 5 67000310033 Dongqiao Vil.  -0.389 0.0179    -74  190.   950\n 6 67000340005 Lixing Vil.    -0.379 0.0212    -72  190.   950\n 7 67000330005 Guangzhou Vil. -0.347 0.0350    -66  190.   950\n 8 67000370042 Xiaoximen Vil. -0.326 0.0478    -62  190.   950\n 9 67000320010 Zhongxi Vil.    0.326 0.0478     62  190.   950\n10 67000310013 Dongwan Vil.    0.337 0.0410     64  190.   950\n11 67000360002 Jincheng Vil.   0.347 0.0350     66  190.   950\n12 67000270017 Zhongzhou Vil.  0.358 0.0297     68  190.   950\n13 67000350022 Diandong Vil.   0.389 0.0179     74  190.   950\n14 67000330023 Da'en Vil.      0.421 0.0104     80  190.   950\n\n\nFrom the results above, we can observe that about 5.43% of all the villages (14 of 258) in the study area only possess significant trends denoted by a p-value (sl) of less than 0.05.\nThe greatest downward and upward trends in dengue cases were exhibited in Huaping Village and Chenggong Village respectively according to their tau values."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#emerging-hotspot-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#emerging-hotspot-analysis",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Emerging Hotspot Analysis",
    "text": "Emerging Hotspot Analysis\nFrom the sfdep package, emerging_hotspot_analysis() can be used.\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = tn_st,\n  .var = \"count\",\n  k = 1,\n  nsim = 99\n)\n\n\nThe k argument is used to specify the number of time lags which is set to 1 by default.\n\nTo view the distribution of EHSA classes, we can use ggplot().\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\nVisualising EHSA\nCurrently, ehsa does not have any spatial characteristic. Hence it needs to join with tainan_aoi to obtain the geospatial characteristics.\n\ntn_ehsa &lt;- tainan_aoi %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\nFilter for significant locations.\n\nehsa_sig &lt;- tn_ehsa %&gt;%\n  filter(p_value &lt; 0.05)\n\nehsa_sig_map &lt;- tm_shape(tn_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4) +\n  tm_scale_bar()\n\nehsa_sig_map\n\n\n\n\nIn general, most of the study area is characterised by hotspots rather than coldspots. There are a significant number of oscilating hotspots in the study area.\nIn total, seven villages had no detected patterns.\n\nfilter(tn_ehsa, classification == \"no pattern detected\")$VILLENG\n\n[1] \"Chengbei Vil.\" \"Chengnan Vil.\" \"Xiding Vil.\"   \"Yuping Vil.\"  \n[5] \"Shanglun Vil.\" \"Anshun Vil.\"   \"Zhonghua Vil.\""
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#all-villages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#all-villages",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "All Villages",
    "text": "All Villages\nFrom the sfdep package, emerging_hotspot_analysis() can be used. The purpose is to check if temporal trends are associated with dengue rates or if dengue rates are solely situated in a spatial context.\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = tn_st,\n  .var = \"count\",\n  k = 1,\n  nsim = 99\n)\n\n\nThe k argument is used to specify the number of time lags which is set to 1 by default.\n\nTo view the distribution of EHSA classes, we can use ggplot()."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-ehsa-classes",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#distribution-of-ehsa-classes",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Distribution of EHSA Classes",
    "text": "Distribution of EHSA Classes\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nWhat do the EHSA classifications mean?\n\n\n\n\nConsecutive: Consistently low or high in dengue cases over an extended period\nOscillating: Consistent dengue fluctuations at either lower or higher levels\nSporadic: Inconsistent cases over time\nNo Pattern Detected: No particular pattern observed\n\n\n\nThe highest number of over 100 villages are classified as oscillating hotspots. This means that these villages is a wavering cluster as it has been a significant cold spot before it became a hot spot towards the end of the observed time period.\nThe next highest bar making up over 50 villages are classified as oscillating coldspots. Conversely, these villages are wavering clusters due to being a hotspot before becoming a cold spot towards the end of the study time period.\n\nVisualising EHSA\nCurrently, ehsa does not have any spatial characteristic. Hence it needs to join with tainan_aoi to obtain the geospatial characteristics.\n\ntn_ehsa &lt;- tainan_aoi %&gt;%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n\nFilter for significant locations.\n\nehsa_sig &lt;- tn_ehsa %&gt;%\n  filter(p_value &lt; 0.05)\n\nehsa_sig_map &lt;- tm_shape(tn_ehsa) +\n  tm_polygons(id=\"VILLENG\") +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\",id=\"VILLENG\") + \n  tm_borders(alpha = 0.4) +\n  tm_scale_bar()\n\ntmap_mode(\"view\")\n\nehsa_sig_map\n\n\n\n\n\n\n\nfilter(tn_ehsa, classification == \"no pattern detected\")$VILLENG\n\n[1] \"Chengbei Vil.\" \"Chengnan Vil.\" \"Xiding Vil.\"   \"Yuping Vil.\"  \n[5] \"Shanglun Vil.\" \"Anshun Vil.\"   \"Zhonghua Vil.\"\n\n\n\nfilter(tn_ehsa, classification == \"consecutive coldspot\")$VILLENG\n\n [1] \"Yuandong Vil.\"   \"Chengzhong Vil.\" \"Dafu Vil.\"       \"Chongde Vil.\"   \n [5] \"Heping Vil.\"     \"Huwei Vil.\"      \"Weixia Vil.\"     \"Zhonglou Vil.\"  \n [9] \"Zhengjue Vil.\"   \"Xinan Vil.\"      \"Dazhong Vil.\"   \n\n\n\nfilter(tn_ehsa, classification == \"consecutive hotspot\")$VILLENG\n\n[1] \"Chihkan Vil.\"  \"Wuwang Vil.\"   \"Wangxing Vil.\" \"Datong Vil.\"  \n[5] \"Xihu Vil.\"     \"Nanmei Vil.\"   \"Chengde Vil.\" \n\n\n\nfilter(tn_ehsa, classification == \"oscilating coldspot\")$VILLENG\n\n [1] \"Fahua Vil.\"     \"Xixin Vil.\"     \"Chongming Vil.\" \"Ludong Vil.\"   \n [5] \"Chongxin Vil.\"  \"Weiguo Vil.\"    \"Houjia Vil.\"    \"Chengda Vil.\"  \n [9] \"Xianbei Vil.\"   \"Fotan Vil.\"     \"Xidong Vil.\"    \"Nanhua Vil.\"   \n[13] \"Jiannan Vil.\"   \"Mingxing Vil.\"  \"Kainan Vil.\"    \"Mingliang Vil.\"\n[17] \"Dalin Vil.\"     \"Xinsheng Vil.\"  \"Mingde Vil.\"    \"Xinchang Vil.\" \n[21] \"Guoping Vil.\"   \"Huaping Vil.\"   \"Yiping Vil.\"    \"Jianping Vil.\" \n[25] \"Xingfu Vil.\"    \"Rende Vil.\"     \"Shenggong Vil.\" \"Yijia Vil.\"    \n[29] \"Yuguang Vil.\"   \"Fuxing Vil.\"    \"Erwang Vil.\"    \"Dongzhi Vil.\"  \n[33] \"Chengxi Vil.\"   \"Yongming Vil.\"  \"Beimen Vil.\"    \"Yanzhou  Vil.\" \n[37] \"Puyuan Vil.\"    \"Sanmin Vil.\"    \"Ren'ai Vil.\"    \"Zhenxing Vil.\" \n[41] \"Daliang Vil.\"   \"Yaowang Vil.\"   \"Guangxian Vil.\" \"Dajia Vil.\"    \n[45] \"Renyi Vil.\"     \"Tuku Vil.\"      \"Zongtou Vil.\"   \"Donghe Vil.\"   \n[49] \"Zhongxing Vil.\"\n\n\n\nfilter(tn_ehsa, classification == \"oscilating hotspot\")$VILLENG\n\n  [1] \"Guo'an Vil.\"     \"Chengdong Vil.\"  \"Xuedong Vil.\"    \"Nanwan Vil.\"    \n  [5] \"Kunshan Vil.\"    \"Ankang Vil.\"     \"Daqiao Vil.\"     \"Dongqiao Vil.\"  \n  [9] \"Wuzhu Vil.\"      \"Dazhi Vil.\"      \"Chongxue Vil.\"   \"Chongshan Vil.\" \n [13] \"Yusheng Vil.\"    \"Wensheng Vil.\"   \"Guansheng Vil.\"  \"Dongsheng Vil.\" \n [17] \"Chonghui Vil.\"   \"Zhongxi Vil.\"    \"Dongming Vil.\"   \"Xiaodong Vil.\"  \n [21] \"Daxue Vil.\"      \"Chenggong Vil.\"  \"Junnan Vil.\"     \"Guangming Vil.\" \n [25] \"Guozhai Vil.\"    \"Tianliao Vil.\"   \"Jinhua Vil.\"     \"Xinxing Vil.\"   \n [29] \"Wennan Vil.\"     \"Guangzhou Vil.\"  \"Wenhua Vil.\"     \"Haidian Vil.\"   \n [33] \"Xidong Vil.\"     \"Xibei Vil.\"      \"Xiqi Vil.\"       \"Houbi Vil.\"     \n [37] \"Chenggong Vil.\"  \"Renhe Vil.\"      \"Ren'ai Vil.\"     \"Xingnong Vil.\"  \n [41] \"Xintian Vil.\"    \"Degao Vil.\"      \"Zhongzhou Vil.\"  \"Xiwan Vil.\"     \n [45] \"Jiading Vil.\"    \"Yongkang Vil.\"   \"Zhengqiang Vil.\" \"Shangding Vil.\" \n [49] \"Shenzhou Vil.\"   \"Sanhe Vil.\"      \"Da'en Vil.\"      \"Ping'an Vil.\"   \n [53] \"Xixian Vil.\"     \"Sicao Vil.\"      \"Andong Vil.\"     \"Yuanzhong Vil.\" \n [57] \"Diandong Vil.\"   \"Xinshun Vil.\"    \"Xinshu Vil.\"     \"Yanxing  Vil.\"  \n [61] \"Lu'er Vil.\"      \"Haixi Vil.\"      \"Wenxian Vil.\"    \"Longpu Vil.\"    \n [65] \"Yancheng Vil.\"   \"Beihua Vil.\"     \"Huade Vil.\"      \"Fude Vil.\"      \n [69] \"Zhangsheng Vil.\" \"Daguang Vil.\"    \"Shuang'an Vil.\"  \"Liren Vil.\"     \n [73] \"Duiyue Vil.\"     \"Wutiaogang Vil.\" \"Wangcheng Vil.\"  \"Tianfei Vil.\"   \n [77] \"Xihe Vil.\"       \"Dongxing Vil.\"   \"Heshun Vil.\"     \"Lixing Vil.\"    \n [81] \"Wencheng Vil.\"   \"Yuanbao Vil.\"    \"Kaiyuan Vil.\"    \"Longtan Vil.\"   \n [85] \"Yongxiang Vil.\"  \"Wenyuan Vil.\"    \"Erxing Vil.\"     \"Anxi Vil.\"      \n [89] \"Da'an Vil.\"      \"Anhe Vil.\"       \"Anqing Vil.\"     \"Meihua Vil.\"    \n [93] \"Ding'an Vil.\"    \"Yuandian Vil.\"   \"Shengli Vil.\"    \"Jianguo Vil.\"   \n [97] \"Liuhe Vil.\"      \"Yuanxi Vil.\"     \"Chang'an Vil.\"   \"Xiangong Vil.\"  \n[101] \"Zhounan Vil.\"    \"Budai Vil.\"      \"Zhoubei Vil.\"    \"Wennan Vil.\"    \n[105] \"Gongwen Vil.\"    \"Nanxing Vil.\"    \"Pingtong Vil.\"   \"Haidong Vil.\"   \n\n\n\nfilter(tn_ehsa, classification == \"sporadic coldspot\")$VILLENG\n\n [1] \"Qingcao Vil.\"    \"Bao'an Vil.\"     \"Hainan Vil.\"     \"Dongwan Vil.\"   \n [5] \"Wangliao Vil.\"   \"Chongwen Vil.\"   \"Chongcheng Vil.\" \"Dade Vil.\"      \n [9] \"Zhongxiao Vil.\"  \"Fuxing Vil.\"     \"Ziqiang Vil.\"    \"Yunong Vil.\"    \n[13] \"Nansheng Vil.\"   \"Dongmen Vil.\"    \"Gongyuan Vil.\"   \"Dahe Vil.\"      \n[17] \"Yongning Vil.\"   \"Yantian  Vil.\"   \"Fenghuang Vil.\"  \"Gongqin Vil.\"   \n[21] \"Shalun Vil.\"     \"Wenping Vil.\"    \"Renhe Vil.\"      \"Zhangxing Vil.\" \n[25] \"Daxing Vil.\"     \"Xiaobei Vil.\"    \"Chenghuang Vil.\" \"Zhongxing Vil.\" \n[29] \"Yonghua Vil.\"    \"Qiancao Vil.\"    \"Fuqian Vil.\"     \"Nanmen Vil.\"    \n[33] \"Beixing Vil.\"    \"Taizi Vil.\"      \"Guangfu Vil.\"    \"Niaosong Vil.\"  \n[37] \"Yizai Vil.\"     \n\n\nIn general, most of the study area is characterised by hotspots rather than coldspots.\nSpecifically, there are a significant number of 108 oscillating hotspots in the study area. Additionally, these villages may have remained as oscillating hotspots due to the warmer autumn and winter seasons.\nGiven these findings, it is worthwhile for local municipalities that are governing a hotspot village to learn from coldspot villages, especially consecutive coldspot villages that are consistently low in dengue cases throughout the weeks. These consecutive coldspot villages include Heping and Xinan.\nFurthermore, Tainan City’s Climate data in 2023 falling within our study period reflects an average temperature of 24.5°C, an optimal temperature for dengue fever transmission (Tran et al., 2020).\nIn total, seven villages had no detected patterns. Nonetheless, the global spatial autocorrelation analysis performed earlier reveals that the dengue cases over the weeks were spatially autocorrelated. In my opinion, Zhonglou village is worth investigating in detail as it is a consecutive coldspot with immediate neighbours that are oscillating hotspots and a consecutive hotspot quite near it."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-morans-i-test",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-morans-i-test",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Global Moran’s I Test",
    "text": "Global Moran’s I Test\n\nglobal_moran_test(dengue.wm_q$count,\n                  dengue.wm_q$nb,\n                  dengue.wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.869, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.468370647      -0.003891051       0.001346741 \n\n\nThe Moran I statistic standard deviate is 12.869, indicating that there is positive spatial autocorrelation.\nThe low p-value reveals that the spatial correlation is statistically significant."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on Exercise 7",
    "section": "",
    "text": "This hands-on exercise focuses on how a homogeneous region is delineated using geographically referenced multivariate data.\nThe two major analyses focused here are: - hierarchical cluster analysis; - spatially constrained cluster analysis\n\n\n\nConvert GIS polygon data into R’s simple feature data.frame using appropriate sf functions\nConvert simple feature data.fram into SpatialPolygonDataFrame using sf package of R\nPerform spatially constrained cluster analysis using skater()\nVisualise the analysis output using ggplot2 and tmap packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#learning-outcomes",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#learning-outcomes",
    "title": "Hands-on Exercise 7",
    "section": "",
    "text": "Convert GIS polygon data into R’s simple feature data.frame using appropriate sf functions\nConvert simple feature data.fram into SpatialPolygonDataFrame using sf package of R\nPerform spatially constrained cluster analysis using skater()\nVisualise the analysis output using ggplot2 and tmap packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#the-analytical-question",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#the-analytical-question",
    "title": "Hands-on Exercise 7",
    "section": "The Analytical Question",
    "text": "The Analytical Question\nIt is a common practice to delineate the market or planning area into homogeneous regions by using multivariate data. For this exercise, the Shan State of Myanmar will be delineated into homogeneous regions with respect to ICT measures including radio, television, landlind phone, mobile phone, computer, and the availability of the internet at home."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#installing-and-loading-packages",
    "title": "Hands-on Exercise 7",
    "section": "Installing and Loading Packages",
    "text": "Installing and Loading Packages\nThe R packages needed are: - sf and spdep for spatial data hnadling - tidyverse, readr, ggplot2 and dplyr for attribute data handling - coorplot, ggpubr and heatmaply for multivariate data visualisation and analysis - cluster and ClusterGeo for cluster analysis!\n\npacman::p_load(sp,spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#data-importing-and-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#data-importing-and-preparation",
    "title": "Hands-on Exercise 7",
    "section": "Data Importing and Preparation",
    "text": "Data Importing and Preparation\nLet’s import the Myanmar Township Boundary GIS data and its associated attribute table.\nThe Myanmar Township Boundary GIS data is in ESRI shapefile format. Thus st_read() is used to import the file over to our R environment.\n\nshan_sf &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nThe imported township boundary object, shan_sf is saved in simple feature data.frame format.\nTo view the contents of shan_sf.\n\nshan_sf\n\nSimple feature collection with 55 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 96.15107 ymin: 19.29932 xmax: 101.1699 ymax: 24.15907\nGeodetic CRS:  WGS 84\nFirst 10 features:\n             ST ST_PCODE       DT   DT_PCODE        TS  TS_PCODE\n1  Shan (North)   MMR015  Mongmit MMR015D008   Mongmit MMR015017\n2  Shan (South)   MMR014 Taunggyi MMR014D001   Pindaya MMR014006\n3  Shan (South)   MMR014 Taunggyi MMR014D001   Ywangan MMR014007\n4  Shan (South)   MMR014 Taunggyi MMR014D001  Pinlaung MMR014009\n5  Shan (North)   MMR015  Mongmit MMR015D008    Mabein MMR015018\n6  Shan (South)   MMR014 Taunggyi MMR014D001     Kalaw MMR014005\n7  Shan (South)   MMR014 Taunggyi MMR014D001     Pekon MMR014010\n8  Shan (South)   MMR014 Taunggyi MMR014D001  Lawksawk MMR014008\n9  Shan (North)   MMR015  Kyaukme MMR015D003 Nawnghkio MMR015013\n10 Shan (North)   MMR015  Kyaukme MMR015D003   Kyaukme MMR015012\n                         geometry\n1  MULTIPOLYGON (((96.96001 23...\n2  MULTIPOLYGON (((96.7731 21....\n3  MULTIPOLYGON (((96.78483 21...\n4  MULTIPOLYGON (((96.49518 20...\n5  MULTIPOLYGON (((96.66306 24...\n6  MULTIPOLYGON (((96.49518 20...\n7  MULTIPOLYGON (((97.14738 19...\n8  MULTIPOLYGON (((96.94981 22...\n9  MULTIPOLYGON (((96.75648 22...\n10 MULTIPOLYGON (((96.95498 22...\n\n\nTo view the data types of the attributes.\n\nglimpse(shan_sf)\n\nRows: 55\nColumns: 7\n$ ST       &lt;chr&gt; \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (South)…\n$ ST_PCODE &lt;chr&gt; \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\", \"…\n$ DT       &lt;chr&gt; \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"Ta…\n$ DT_PCODE &lt;chr&gt; \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MMR0…\n$ TS       &lt;chr&gt; \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kalaw…\n$ TS_PCODE &lt;chr&gt; \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR01501…\n$ geometry &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (((…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#importing-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#importing-aspatial-data",
    "title": "Hands-on Exercise 7",
    "section": "Importing aspatial data",
    "text": "Importing aspatial data\n\nict &lt;- read_csv(\"data/aspatial/Shan-ICT.csv\")\n\nTo view the summary statistics.\n\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n\nThere are 11 attributes and 55 observations."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#deriving-new-variables-using-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#deriving-new-variables-using-dplyr",
    "title": "Hands-on Exercise 7",
    "section": "Deriving new variables using dplyr",
    "text": "Deriving new variables using dplyr\nThe unit of measurement of the values are the number of households. Townships with more households will have a greater number of households owning radio, TV and other ICTs.\nTo overcome this bias, the penetration rate of each ICT variable can be derived.\n\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nReview the summary statistics of the newly derived pentration rates.\n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985  \n\n\n\n\n\n\n\n\nNote\n\n\n\nSix new fields have been added into the data frame!"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-statistical-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-statistical-graphics",
    "title": "Hands-on Exercise 7",
    "section": "EDA using statistical graphics",
    "text": "EDA using statistical graphics\nHistograms are useful to identify the distribution of data values.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\nThe data seems to be right-skewed!\n\nNow check for any outliers using boxplot.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\nThere are 3 outliers.\n\nNext, plot the distribution of the newly derived variables.\nFor instance, to check the distribution of the radio penetration rate,\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\nCheck for outliers\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\nThere is only one outlier.\n\nLet’s check all the distributions across multiple variables.\nFirst, create the individual histograms and store each of them into a variable.\n\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nThen use the ggarrange() function of ggpubr to group the histograms together.\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-choropleth-map",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#eda-using-choropleth-map",
    "title": "Hands-on Exercise 7",
    "section": "EDA using choropleth map",
    "text": "EDA using choropleth map\n\nJoining geospatial data with aspatial data\n\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\n\n\n\n\n\n\n\nNote\n\n\n\nTS_CODE field is the common field used to perform the left-join.\n\n\n\nshan_sf &lt;- read_rds(\"data/rds/shan_sf.rds\")\n\n\n\nPreparng a choropleth map\nLook at the distribution of the radio penetration rate using a choropleth map.\nA quick choropleth map can be created using qtm() from tmap package.\n\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\nTo reveal the distribution is biased to the underlying total number of households at townships, let’s compare choropleth maps for total number of households and total number of households with radios.\n\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\nTownships with more households positively correlate with the radio ownership rates.\n\nNow plot the choropleth maps showing the distribution of the total number of households and radio penetration rate.\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n\n\n\n\n\nLooking at the southern region of Shan state, there are fewer households in this part of the state yet they have moderate radio penetration rates which are similar to the rates in regions with more households."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#extracting-clustering-variables",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#extracting-clustering-variables",
    "title": "Hands-on Exercise 7",
    "section": "Extracting clustering variables",
    "text": "Extracting clustering variables\n\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\nINTERNET_PR was removed since it is highly correlated with COMPUTER_PR\n\nThen, change the rows by township name rather than row number for easier referencing.\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nDelete the TS.x field.\n\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#data-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#data-standardisation",
    "title": "Hands-on Exercise 7",
    "section": "Data Standardisation",
    "text": "Data Standardisation\nMultiple variables will be used in cluster analysis. It is not unusual when their value ranges are different. However, standardisation of the data should be performed to prevent clustering variables with larger values to cause a bias."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#min-max-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#min-max-standardisation",
    "title": "Hands-on Exercise 7",
    "section": "Min-Max Standardisation",
    "text": "Min-Max Standardisation\nFrom heatmaply, , the normalize() function is used to standardise the clustering variables by using the Min-Max methody.\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#z-score-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#z-score-standardisation",
    "title": "Hands-on Exercise 7",
    "section": "Z-score Standardisation",
    "text": "Z-score Standardisation\nZ-score standardisation can be performed easily by using scale().\n\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13\n\n\n\n\n\n\n\n\nWarning\n\n\n\nZ-score standardisation method should only be used if we would assume all variables come from some normal distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-standardised-clustering-variables",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-standardised-clustering-variables",
    "title": "Hands-on Exercise 7",
    "section": "Visualising Standardised Clustering Variables",
    "text": "Visualising Standardised Clustering Variables\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\nAll the clustered variables follow a normal distribution and the previous standardisation step was performed successfully.\n\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-proximity-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-proximity-matrix",
    "title": "Hands-on Exercise 7",
    "section": "Computing Proximity Matrix",
    "text": "Computing Proximity Matrix\nThe dist() function supports six distance proximity calculations: - euclidean (default) - maximum - minimum - canberra - binary - minkowski\n\nproxmat &lt;- dist(shan_ict, method = 'euclidean')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-hierarchical-clustering",
    "title": "Hands-on Exercise 7",
    "section": "Computing Hierarchical Clustering",
    "text": "Computing Hierarchical Clustering\nhclust() employs an agglomeration method to compute the cluster. The eight clustering algorithms supported ward.D, ward.D2, single, complete, average (UPGMA), mcquitty (WPGMA), median (WPGMC) and centroid (UPGMC).\nTo try hierarchical cluster analysis using the ward.D method,\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\nPlot the tree using plot().\n\nplot(hclust_ward, cex = 0.6)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#selecting-the-optimal-clustering-algorithm",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#selecting-the-optimal-clustering-algorithm",
    "title": "Hands-on Exercise 7",
    "section": "Selecting the optimal clustering algorithm",
    "text": "Selecting the optimal clustering algorithm\nIt is difficult to identify the stronger clusters, but we can do so using agnes() from the cluster package! The agglomerative coefficient can be gathered and a coefficient value closer to 1 indicates strong clustering.\nComputing the agglomerative coefficients of all hierarchical clustering algorithms,\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\n\nWard’s method provides the strongest clustering structure among the four methods assessed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#determining-optimal-clusters",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#determining-optimal-clusters",
    "title": "Hands-on Exercise 7",
    "section": "Determining Optimal Clusters",
    "text": "Determining Optimal Clusters\nThe common methods to determine the optimal clusters are: - Gap Statistic Method - Elbow Method - Average Silhouette Method\n\nGap Statistic Method\nThe gap statistic compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The estimate of the optimal clusters will be value that maximize the gap statistic (i.e., that yields the largest gap statistic). This means that the clustering structure is far away from the random uniform distribution of points.\nTo compute the gap statistic, clusGap() of cluster package will be used.\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\n\n\n\n\n\nNote\n\n\n\nhcut is from the factoextra package.\n\n\nVisualise the plot using fviz_gap_stat() of the factoextra package.\n\nfviz_gap_stat(gap_stat)\n\n\n\n\nThe recommended number of cluster to retain is 1. However, it is not logical to retain only one cluster. By examine the gap statistic graph, the 6-cluster gives the largest gap statistic and should be the next best cluster to pick.\n\n\n\n\n\n\nNote\n\n\n\nThe NbClust package provides 30 indices to determine the relevant number of clusters and proposes to users the best clustering schemes based on different results that are obtained by various combinations of clusters, distance measures and clustering methods."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#interpreting-dendrograms",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#interpreting-dendrograms",
    "title": "Hands-on Exercise 7",
    "section": "Interpreting Dendrograms",
    "text": "Interpreting Dendrograms\nEach leaf in a dendrogram corresponds to one observation. Observations similar to each other are combined into branches as shown by tracing the dendrogram from bottom to top.\nThe height of these fused branches indicates the (dis)similarity between two observations. The higher these fusions, the less similar the observations.\nTo draw the dendogram with a border around the selected clusters using rect.hclust(), the argument border is used to specify the border colours of the rectangles.\n\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visually-driven-hierarchical-clustering-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visually-driven-hierarchical-clustering-analysis",
    "title": "Hands-on Exercise 7",
    "section": "Visually-driven Hierarchical Clustering Analysis",
    "text": "Visually-driven Hierarchical Clustering Analysis\nPerform visually-driven hiearchical clustering analysis by using the heatmaply package.\nTurn the data frame into a data matrix.\n\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\nPlotting interactive cluster heatmap using heatmaply()\n\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\nSix clusters are identfied! (look at the number of distinct branch colours)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#mapping-formed-clusters",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#mapping-formed-clusters",
    "title": "Hands-on Exercise 7",
    "section": "Mapping Formed Clusters",
    "text": "Mapping Formed Clusters\nUse cutree() to derive a 6-cluster model.\n\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\nThe output is called groups. It is a list object.\nIn order to visualise the clusters, the groups object needs to be appended to the shan_sf simple feature object.\nTo form the join in three steps:\n\nConvert the groups list object into a matrix\nAppend the groups matrix to shan_sf using cbind()\nUse rename() from dplyr to rename the as.amtrix.groups field as CLUSTER\n\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\nHave a look at where are the clusters using a choropleth map.\n\nqtm(shan_sf_cluster, \"CLUSTER\")\n\n\n\n\nAs shown above, the clusters are very fragmented and this is a limitation of using a non-spatial clustering algorithm such as hiearchical clustering."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#converting-into-spatialpolygonsdataframe",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#converting-into-spatialpolygonsdataframe",
    "title": "Hands-on Exercise 7",
    "section": "Converting into SpatialPolygonsDataFrame",
    "text": "Converting into SpatialPolygonsDataFrame\nConvert shan_sf into spdf form since the SKATER function only supports spatial (sp) objects.\n\nshan_sp &lt;- as_Spatial(shan_sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-neighbour-list",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-neighbour-list",
    "title": "Hands-on Exercise 7",
    "section": "Computing Neighbour List",
    "text": "Computing Neighbour List\nFrom a previous exercise, apply poly2nb() to compute the neighbours list for all the polygons.\n\nshan.nb &lt;- poly2nb(shan_sp)\nsummary(shan.nb)\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\nWe can also view the networks between the polygons.\n\nplot(shan_sp, \n     border=grey(.5))\nplot(shan.nb, \n     coordinates(shan_sp), \n     col=\"blue\", \n     add=TRUE)\n\nThe plotting area is usually determined by the characteristics of the neighbouring plots. Since the boundary map extends further than the neighbour graph, the boundary map should be plotted first."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-minimum-spanning-tree",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-minimum-spanning-tree",
    "title": "Hands-on Exercise 7",
    "section": "Computing Minimum Spanning Tree",
    "text": "Computing Minimum Spanning Tree\n\nCalculating Edge Costs\nNext, nbcosts() from spdep can compute the cost of each edge, i.e. distance between nodes. This function computes the distance using a data frame with the observation vector in each node.\nTo compute the cost of each edge.\n\nlcosts &lt;- nbcosts(shan.nb, shan_ict)\n\nEach observation provides a pairwise dissimilarity between its values on the five variables and the values for the neighbouring observation (from the neighbour list). This is the notion of a generalised weight for a spatial weights matrix.\nThe next step is to incorporate these costs into a weights object in the same way the inverse distance weights were calculated. This is done by converting the neighbour list to a list weights object by specifying the computed lcost as the weights.\n\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-minimum-spanning-tree-1",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-minimum-spanning-tree-1",
    "title": "Hands-on Exercise 7",
    "section": "Computing minimum spanning tree",
    "text": "Computing minimum spanning tree\nThe minimum spanning tree is computed by mean of the mstree() from spdep.\n\nshan.mst &lt;- mstree(shan.w)\n\n\nclass(shan.mst)\n\n[1] \"mst\"    \"matrix\"\n\n\n\ndim(shan.mst)\n\n[1] 54  3\n\n\nThe dimension is 54 since there are a minimum of (n-1) edges to traverse all nodes.\n\nhead(shan.mst)\n\n     [,1] [,2]      [,3]\n[1,]   54   48  47.79331\n[2,]   54   17 109.08506\n[3,]   54   45 127.42203\n[4,]   45   52 146.78891\n[5,]   52   13 110.55197\n[6,]   13   28  92.79567\n\n\nThe plot method for the Minimum Spanning Tree is a method for showing the observable number of nodes on top of the edge.\n\nplot(shan_sp, border=gray(.5))\nplot.mst(shan.mst, \n         coordinates(shan_sp), \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-spatially-constrained-clusters-using-skater-method",
    "title": "Hands-on Exercise 7",
    "section": "Computing spatially constrained clusters using SKATER method",
    "text": "Computing spatially constrained clusters using SKATER method\nUsing SKATER,\n\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\n\n\n\n\n\n\nInterpreting the above code\n\n\n\n\nthe first two columns of the MST matrix are extracted\nthe data argument from Shan State’s ICT information\nthe number of cuts which will lead to n+1 clusters formed\n\n\n\n\nstr(clust6)\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\nccs6 &lt;- clust6$groups\nccs6\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\nTo check the number of observations for each cluster,\n\ntable(ccs6)\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\nPlot out the clustered networks or pruned tree over the townships.\n\nplot(shan_sp, border=gray(.5))\nplot(clust6, \n     coordinates(shan_sp), \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-clusters-in-choropleth-map",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-clusters-in-choropleth-map",
    "title": "Hands-on Exercise 7",
    "section": "Visualising CLusters in Choropleth Map",
    "text": "Visualising CLusters in Choropleth Map\nTo plot the newly derived clusters using SKATER.\n\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\nFor easier comparison between hierarchical clustering and spatially constrained hierarchical clustering,\n\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#about-clustgeo-package",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#about-clustgeo-package",
    "title": "Hands-on Exercise 7",
    "section": "About ClustGeo package",
    "text": "About ClustGeo package\nClusterGeo is designed to support the need of performing spatially constrained cluster analysis, where it provides a Ward-like hierarchical clustering algorithm called hclustgeo() that considers spatial or geographical constraints.\nThe algorithm uses two dissimilarity matrices D0 and D1 along with a mixing parameter alpha, where the value of alpha must be a real number between [0, 1]. D0 can be non-Euclidean and the weights of the observations can be non-uniform. It gives the dissimilarities in the attribute/clustering variable space. D1, on the other hand, gives the dissimilarities in the constraint space. The criterion minimised at each stage is a convex combination of the homogeneity criterion calculated with D0 and the homogeneity criterion calculated with D1."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#ward-like-hierarchical-clustering-clustgeo",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#ward-like-hierarchical-clustering-clustgeo",
    "title": "Hands-on Exercise 7",
    "section": "Ward-like hierarchical clustering: ClustGeo",
    "text": "Ward-like hierarchical clustering: ClustGeo\nTypically, hclustgeo() performs Ward-like hierarchical clustering like what hclust() does.\nTo perform non-spatially constrained hierarchical clustering, we only need to pass a dissimilarity matrix in the function.\n\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe dissimilarity matrix must be an object of class dist, where the object is developed.\n\n\n\nMapping the formed clusters\n\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#spatially-constrained-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#spatially-constrained-hierarchical-clustering",
    "title": "Hands-on Exercise 7",
    "section": "Spatially Constrained Hierarchical Clustering",
    "text": "Spatially Constrained Hierarchical Clustering\nSpatial distance matrice can be derived by using st_distance().\n\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\nTh data frame has been converted to a matrix using as.dist()\n\nNet, choicealpha() will be used to determine a suitable value for the mixing parameter alpha.\n\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.3)\n\n\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\n\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-individual-clustering-variable",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-individual-clustering-variable",
    "title": "Hands-on Exercise 7",
    "section": "Visualising individual clustering variable",
    "text": "Visualising individual clustering variable\n\nggplot(data = shan_sf_ngeo_cluster,\n       aes(x = CLUSTER, y = RADIO_PR)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#multivariate-visualisation",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#multivariate-visualisation",
    "title": "Hands-on Exercise 7",
    "section": "Multivariate Visualisation",
    "text": "Multivariate Visualisation\nPast studies shown that parallel coordinate plot can be used to reveal clustering variables by cluster very effectively. In the code chunk below, ggparcoord() of GGally package\n\nggparcoord(data = shan_sf_ngeo_cluster, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\nshan_sf_ngeo_cluster %&gt;% \n  st_set_geometry(NULL) %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_RADIO_PR = mean(RADIO_PR),\n            mean_TV_PR = mean(TV_PR),\n            mean_LLPHONE_PR = mean(LLPHONE_PR),\n            mean_MPHONE_PR = mean(MPHONE_PR),\n            mean_COMPUTER_PR = mean(COMPUTER_PR))\n\n# A tibble: 6 × 6\n  CLUSTER mean_RADIO_PR mean_TV_PR mean_LLPHONE_PR mean_MPHONE_PR\n  &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 1               221.        521.            44.2           246.\n2 2               237.        402.            23.9           134.\n3 3               300.        611.            52.2           392.\n4 4               196.        744.            99.0           651.\n5 5               124.        224.            38.0           132.\n6 6                98.6       499.            74.5           468.\n# ℹ 1 more variable: mean_COMPUTER_PR &lt;dbl&gt;"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In-class Exercise 7",
    "section": "",
    "text": "pacman::p_load(sp,spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\nGDAL is no longer in use, thus replaced with sp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#section",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#section",
    "title": "In-class Exercise 7",
    "section": "",
    "text": "Gap Statistic Method\nThe gap statistic compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The estimate of the optimal clusters will be value that maximize the gap statistic (i.e., that yields the largest gap statistic). This means that the clustering structure is far away from the random uniform distribution of points.\nTo compute the gap statistic, clusGap() of cluster package will be used.\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\n\n\n\n\n\nNote\n\n\n\nhcut is from the factoextra package.\n\n\nVisualise the plot using fviz_gap_stat() of the factoextra package.\n\nfviz_gap_stat(gap_stat)\n\n\n\n\n\nThe optimisation is local.\n6 is the optimal number of clusters since it is the first peak."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#significant-census-block-groups",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#significant-census-block-groups",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Significant Census Block Groups",
    "text": "Significant Census Block Groups\n\nHuaping VillageJiading VillageHaidong VillageZhuxi VillageDongqiao VillageLixing VillageGuangzhou VillageXiaoximen VillageZhongxi VillageDongwan VillageJincheng VillageZhongzhou VillageDiandong VillageDa’en Village\n\n\n\ncbg_hp &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Huaping Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_hp, mapping = aes(x = epi_week, y = gi_star, color = \"Huaping Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Huaping Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_jd &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Jiading Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_jd, mapping = aes(x = epi_week, y = gi_star, color = \"Jiading Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Jiading Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_hd &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Haidong Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_hd, mapping = aes(x = epi_week, y = gi_star, color = \"Haidong Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Haidong Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_zx &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Zhuxi Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_zx, mapping = aes(x = epi_week, y = gi_star, color = \"Zhuxi Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Zhuxi Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_dq &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Dongqiao Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_dq, mapping = aes(x = epi_week, y = gi_star, color = \"Dongqiao Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Dongqiao Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_lx &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Lixing Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_lx, mapping = aes(x = epi_week, y = gi_star, color = \"Lixing Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Lixing Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_gz &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Guangzhou Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_gz, mapping = aes(x = epi_week, y = gi_star, color = \"Guangzhou Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Guangzhou Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_xm &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Xiaoximen Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_xm, mapping = aes(x = epi_week, y = gi_star, color = \"Xiaoximen Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Xiaoximen Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_zx2 &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Zhongxi Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_zx2, mapping = aes(x = epi_week, y = gi_star, color = \"Zhongxi Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Zhongxi Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_dw &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Dongwan Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_dw, mapping = aes(x = epi_week, y = gi_star, color = \"Dongwan Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Dongwan Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_jc &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Jincheng Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_jc, mapping = aes(x = epi_week, y = gi_star, color = \"Jincheng Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Jincheng Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_zz &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Zhongzhou Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_zz, mapping = aes(x = epi_week, y = gi_star, color = \"Zhongzhou Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Zhongzhou Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_dd &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Diandong Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_dd, mapping = aes(x = epi_week, y = gi_star, color = \"Diandong Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Diandong Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\ncbg_de &lt;- gistars_merged %&gt;%\n  ungroup() %&gt;%\n  filter(VILLENG == \"Da'en Vil.\") |&gt;\n  select(VILLENG, epi_week, gi_star)\n\n\nggplot() +\n  geom_line(data = cbg_de, mapping = aes(x = epi_week, y = gi_star, color = \"Da'en Village\")) +\n  labs(x = \"Epi Week\", y = \"Gi* Value\", \n       title = \"Gi* over time for Da'en Village\",\n       color = \"Village\")\n\n\n\n\n\n\n\n\nSummary of Significant CBGs\nGenerally, six of the significant villages had consistent negative Gi* values over the weeks. These villages are Zhuxi, Lixi, Zhongxi, Dongwan, Jincheng and Zhongzhou. Only Dongqiao village had a consistent positive Gi* value across the weeks.\nGuangzhou, Xiaoximen, Huaping and Diandong villages were initially spatial outliers that became spatial clusters that occurred less likely by chance as time progressed. Xiaoximen increased the most from epidemiology week 31 to 50 in Gi* value. This similar increasing trend was also observed by Huaping. Haidong village had a very sharp increase in Gi* from -2.7 to 1 starting from week 44. Thus a spatial cluster was formed in this village in the last seven weeks of the study period. Furthermore, Dongqiao village consistently had positive Gi*, thus it was constantly a spatial cluster of dengue cases."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "",
    "text": "Predictive modelling utilises statistical or machine learning techniques to predict outcomes. A seet of known outcomes and predictors are used to calibrate predice models.\nWhen the occurrences of events are limited in distribution, geospatial predictive modelling can be used if the data has geospatial characteristics. These occurrences of events are not uniform nor random in distribution over space. In geospatial context, geospatial factors like topography, hydrology, infrastructure, slope aspect, etc. can have influence on where these events occur. Geospatial predictive modelling attempts to describe the constraints and influence where the locations occurs.\n\n\nThis exercise aims to build predictive models using geographical random forest. Along the way, the intended acquired skills are:\n\nPreparing training and test data sets using sampling methods\nCalibrating predictive models using both geospatial statistical learning and machine learning methods\nComparing and selecting the best model for predicting the future outcome and,\nPredicting future outcomes using the best calibrated model"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#geospatial-data",
    "title": "Hands-on Exercise 9",
    "section": "Geospatial data",
    "text": "Geospatial data\nRead the Myanmar Township Boundary shapefile using st_read().\n\nshan_sf &lt;- st_read(dsn=\"data/geospatial\", layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex09\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nTo view the simple feature data frame,\n\nglimpse(shan_sf)\n\nRows: 55\nColumns: 7\n$ ST       &lt;chr&gt; \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (South)…\n$ ST_PCODE &lt;chr&gt; \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\", \"…\n$ DT       &lt;chr&gt; \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"Ta…\n$ DT_PCODE &lt;chr&gt; \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MMR0…\n$ TS       &lt;chr&gt; \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kalaw…\n$ TS_PCODE &lt;chr&gt; \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR01501…\n$ geometry &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (((…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#aspatial-data",
    "title": "Hands-on Exercise 9",
    "section": "Aspatial data",
    "text": "Aspatial data\n\nict &lt;- read_csv (\"data/aspatial/Shan-ICT.csv\")\n\nTo view the summary statistics of ict,\n\nsummary(ict)\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#new-variables-using-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#new-variables-using-dplyr",
    "title": "Hands-on Exercise 9",
    "section": "New variables using dplyr",
    "text": "New variables using dplyr\nTo address the association bias due to the aggregated number of households in Shan state, we need to create the penetrationrates for each ICT variable.\n\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nReview the summary statistics of the newly derived penetration rates.\n\nsummary(ict_derived)\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985  \n\n\n\nSix new fields RADIO_PR, TV_PR, LLPHONE_PR, MPHONE_PR, COMPUTER_PR, and INTERNET_PR."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#histogram",
    "title": "Hands-on Exercise 9",
    "section": "Histogram",
    "text": "Histogram\nWe can use a histogram to observe the overall distribution of the households with radio.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\nA left-skewed histogram signifies that there are fewer households with more radios relative to most households.\n\nThen use a boxplot to detect if there are any outliers!\n\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\nNow plot the distribution for the radio penetration rate.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\nThe outliers can be plotted as such.\n\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\nFor a better overview, we can build a collage of histograms for the various penetration rates.\n\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nThe key function to build the collage will be ggarrange().\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#choropleth-map",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#choropleth-map",
    "title": "Hands-on Exercise 9",
    "section": "Choropleth map",
    "text": "Choropleth map\nWe need to collate the aspatial penetration rates and join them into our geospatial data.\n\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n\n\nTS_PCODE, the postal code, is the common identifier used to perform the left-join.\n\n\nwrite_rds(shan_sf, \"data/rds/shan_sf.rds\")\n\nA quick view of the choropleth map can be performed using qtm().\n\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\nThe problem with the above map is that it is subjected to the bias to the total number of households. This bias can be verified by comparing the total number of households per town and the total number of households with radios.\n\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\nAs we can see, the choropleth maps show that townships with more households tend to have more radio ownership.\n\nAs such, let’s compare the distribution fo total number of households and the radio penetration rate.\n\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n\n\n\n\n\nLess densely populated towns may have higher radio penetration rates."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#extracting-cluster-variables",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#extracting-cluster-variables",
    "title": "Hands-on Exercise 9",
    "section": "Extracting cluster variables",
    "text": "Extracting cluster variables\n\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nChange the rows by township name.\n\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\nDelete the TS.x field.\n\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data-standardisation",
    "title": "Hands-on Exercise 9",
    "section": "Data standardisation",
    "text": "Data standardisation\nData standardisation is important to avoid biases in clustering."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#min-max-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#min-max-standardisation",
    "title": "Hands-on Exercise 9",
    "section": "Min-Max standardisation",
    "text": "Min-Max standardisation\nFrom heatmaply, normalize() is used for standardisation of clustering variables using the Min-Max method.\n\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#z-score-standardisation",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#z-score-standardisation",
    "title": "Hands-on Exercise 9",
    "section": "Z-score standardisation",
    "text": "Z-score standardisation\nZ-score standardisation can be performed using scale().\n\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#visualising-the-standardised-clustering-variables",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#visualising-the-standardised-clustering-variables",
    "title": "Hands-on Exercise 9",
    "section": "Visualising the standardised clustering variables",
    "text": "Visualising the standardised clustering variables\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that considers non-stationary variables, including but not withstanding climate, demographic factors, and physical environment characteristics. GWR also models local relationships between these independent variables and the outcome of interest, i.e. dependent variable.\nThis exercise is working on building hedonic pricing models using GWR methods. The dependent variable is the condominium resale prices in 2015, and the independent variables are divided in to either structural and locational."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#importing-geospatial-data",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#importing-geospatial-data",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Importing geospatial data",
    "text": "Importing geospatial data\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\In-class_Ex\\In-class_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#updating-crs-information",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#updating-crs-information",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Updating CRS information",
    "text": "Updating CRS information\n\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\nVerify the transformed CRS\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nReveal coordinate extenets of mpsz_svy21 by using st_bbox() of the sf package.\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#importing-aspatial-data",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#importing-aspatial-data",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Importing aspatial data",
    "text": "Importing aspatial data\n\ncondo_resale = read_csv(\"data/aspatial/condo_resale_2015.csv\")\n\nUnderstand the data structure using glimpse()\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nStatistics summary.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#converting-aspatial-data-frame-into-a-sf-object",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Converting aspatial data frame into a sf object",
    "text": "Converting aspatial data frame into a sf object\nUse st_as_sf()\n\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\n*st_transform() is used to convert the coordinates from wgs84 to svy21\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#eda-using-statistical-graphics",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#eda-using-statistical-graphics",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "EDA using statistical graphics",
    "text": "EDA using statistical graphics\nDistribution of selling price\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\nThere is a right-skewed distribution of the selling price, indicating that more condominium units were sold at lower prices.\n\nThe skewed distribution can be normalised by using log transformation. A new variable LOG_SELLING_PRICE can contain the transformed selling prices. The transformation is performed using dplyr’s mutate().\n\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nPlotting LOG_SELLING_PRICE\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-histogram-plots-distribution",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-histogram-plots-distribution",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Multiple Histogram Plots distribution",
    "text": "Multiple Histogram Plots distribution\nSmall multiple histograms, or trellis plots, are drawn using ggarrange() in the ggpubr package.\nThe code chunk below is used to create 12 histograms. ggarrange() is used to organise these histograms into a 3-columns by-4-rows small multiple plot.\n\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#drawing-statistical-point-map",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#drawing-statistical-point-map",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Drawing Statistical Point Map",
    "text": "Drawing Statistical Point Map\nUsing tmap, we can reveal the geospatial distribution of the condominium resale prices in Singapore.\nTurning on the interactive mode of tmap,\n\ntmap_mode(\"view\")\n\n\ntmap_mode(\"plot\")\n\nCreating an interactive point symbol map,\n\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\ntm_dots() is used instead of tm_bubbles\n\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively.\nNow turn the R display into plot mode.\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#simple-linear-regression-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#simple-linear-regression-method",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Simple Linear Regression Method",
    "text": "Simple Linear Regression Method\nBuild a simple linear regression model using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nlm() returns an object of class lm or for multiple responses of class c(“mlm”, “lm”).\n\nThe functions summary and anova() can be used to obtain and print a summasry and analysis of variance tables of the results. The generic accessor functions coefficients, effevts, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nLooking at the summary statistic, SELLING_PRICE, y, can be explained as:\n\\[\ny = -258121.1 + 14719x_{1}\n\\] The R-squared of 0.4518 reveals that the simple regression model built is able to explain about 45% of the resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nThe best fit curve can be visualised using lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\nThe figure above reveals that there are a few statistical outliers with relatively high selling prices."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-linear-regression-method",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#multiple-linear-regression-method",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Multiple Linear Regression Method",
    "text": "Multiple Linear Regression Method\n\nVisualising relationships between independent variables\nIn order to build a more reliable multiple regression model, it is important to verify that the independent variables are not highly correlated to one another, i.e. multicolinearity. Otherwise, the quality of the model will be compromised.\nA correlation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() in R, there are many packages supporting the display of correlation matrices. In this section, the corrplot package will be used.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in the condo_resale data frame.\n\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\nggcorrmat(condo_resale[,5:23])\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used.\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Building a hedonic pricing model using multiple linear regression",
    "text": "Building a hedonic pricing model using multiple linear regression\nUsing lm() to calibrate the multiple linear regression model\n\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#preparing-publication-quality-table",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#preparing-publication-quality-table",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Preparing Publication Quality Table",
    "text": "Preparing Publication Quality Table\n\nUsing olsrr\nNot all the independent variables are statistically significant. The model can be revised by removing the variables that are not statisically significant.\nCalibrate the revised model using the following code chunk,\n\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nusing gtsummary\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R\nThe following code chunk shows how tbl_regression is used to create a well-formatted regression report.\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note().\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\nChecking for multicolinearity\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\nVisualising\n\nggcoefstats(condo.mlr1)\n\n\n\n\n\nSuch a graph is useful for a generic interpretation of all the confidence of each variable.\n\n\n\n\nTest for Non-linearity\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data points are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n\nTest for Normality Assumption\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nIf you prefer formal statistical test methods, the ols_test_normality() of olsrr package can be used as shown in the code chun below.\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#testing-for-spatial-autocorrelation",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#testing-for-spatial-autocorrelation",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Testing for Spatial Autocorrelation",
    "text": "Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame.\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\nNext, we will join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\nNext, we will convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\n\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nUse tmap package to display the distribution of the residuals on an interactive map.\n\ntmap_mode(\"view\")\n\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n*Important: Switch back to plot mode before continuing.\n\ntmap_mode(\"plot\")\n\nThe figure above reveals that there is sign of spatial autocorrelation.\nTo prove that our observation is indeed true, the Moran’s I test will be performed.\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep package will be used to convert the output neighbours lists (i.e. nb) into a spatial weights.\n\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nlm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-fixed-bandwidth-gwr-model",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-fixed-bandwidth-gwr-model",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Building Fixed Bandwidth GWR Model",
    "text": "Building Fixed Bandwidth GWR Model\n\nComputing fixed bandwidth\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach agreement.\n\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\nGWModel method - fixed bandwidth\n\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-11 11:31:36.807616 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2024-03-11 11:31:37.570206 \n\n\nThe report shows that the AICc of the gwr is 42263.61 which is significantly smaller than the globel multiple linear regression model of 42967.1."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Building Adaptive Bandwidth GWR Model",
    "text": "Building Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-based hedonic pricing model by using adaptive bandwidth approach.\n\nComputing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data point to use.\nThe code chunk used look very similar to the one used to compute the fixed bandwidth except the adaptive argument has changed to TRUE.\n\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n\nConstructing the adaptive bandwidth GWRmodel\nTo calibrate the gwr-based hedonic pricing model, use the adaptive bandwidth and Gaussian kernel as shown below.\n\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\nTo display the model output,\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-11 11:31:42.70449 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-03-11 11:31:43.946941"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-gwr-output",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-gwr-output",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Visualising GWR Output",
    "text": "Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local colinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#converting-sdf-into-sf-data.frame",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#converting-sdf-into-sf-data.frame",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Converting SDF into sf data.frame",
    "text": "Converting SDF into sf data.frame\nTo visualise the fields in SDF, we need to first covert it into sf data.frame by using the code chunk below.\n\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       &lt;dbl&gt; 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 &lt;dbl&gt; -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-local-r2",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-local-r2",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Visualising local R2",
    "text": "Visualising local R2\nCreating an interactive point symbol map.\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE) \n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-coefficient-estimates",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#visualising-coefficient-estimates",
    "title": "In-class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR",
    "section": "Visualising coefficient estimates",
    "text": "Visualising coefficient estimates\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE) \n\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nBy Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ]) +\n  tm_polygons(id=\"REGION_N\") +\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1, id=\"REGION_N\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-proximity-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-proximity-matrix",
    "title": "Hands-on Exercise 9",
    "section": "Computing proximity matrix",
    "text": "Computing proximity matrix\nMany packages provide functions to calculate distance matrix and one of which is using dist().\nThe distance proximity calculations supported are:\n\nEuclidean (default)\nMaximum\nManhattan\nCanberra\nBinary\nMinkowski\n\n\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-hierarchical-clustering",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-hierarchical-clustering",
    "title": "Hands-on Exercise 9",
    "section": "Computing hierarchical clustering",
    "text": "Computing hierarchical clustering\nThere are eight clustering algorithms supported by hclust():\n\nward.D\nward.D2\nsingle\ncomplete\naverage(UPGMA)\nmcquitty(WPGMA)\nmedian(WPGMC)\n\n\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\n\nplot(hclust_ward, cex = 0.6)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#selecting-optimal-clustering-algorithm",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#selecting-optimal-clustering-algorithm",
    "title": "Hands-on Exercise 9",
    "section": "Selecting optimal clustering algorithm",
    "text": "Selecting optimal clustering algorithm\nA challenge in performing hierarchical clustering is to identify stronger clustering structures. The issue can be solved by using use agnes() function of cluster package. It functions like hclus(), however, with the agnes() function you can also get the agglomerative coefficient, which measures the amount of clustering structure found (values closer to 1 suggest strong clustering structure).\n\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\n\nWard’s method will be used since it gives the strongest clustering structure."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#determining-optimal-clusters",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#determining-optimal-clusters",
    "title": "Hands-on Exercise 9",
    "section": "Determining optimal clusters",
    "text": "Determining optimal clusters\n\nGap staistic method\nThe gap statistic compares the total within intra-cluster variation for different values of k with their expected values under null reference distribution of the data. The estimate of the optimal clusters will be value that maximize the gap statistic (i.e., that yields the largest gap statistic). This means that the clustering structure is far away from the random uniform distribution of points.\nclusGap() of cluster package will be used to compute the gap statistic.\n\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\nVisualise the plot.\n\nfviz_gap_stat(gap_stat)\n\n\n\n\n\nfviz_gap_stat() is from the factoextra package."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "",
    "text": "In this exercise, my focus would be on prototyping exploratory spatial data analysis, particularly density of spatial assets within hexagonal traffic analysis zones. In conventional geography, a traffic analysis zone is the unit most commonly used in transportation planning models and the size of it varies. Hexagonal traffic analysis zones has gained traction as the hexagons of the study area have a uniform size which are easily comparable with each other when determining transport attractiveness. It is also recommended that hexagon radius should be 125m for areas in high urbanisation and 250m in areas with less urbanisation (Chmielewski et al., 2020)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#subzone-layer",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#subzone-layer",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Subzone Layer",
    "text": "Subzone Layer\nRead the subzone layer\n\nmpsz &lt;- st_read(\"data/geospatial/master-plan-2019-subzone-boundary-no-sea-kml.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\master-plan-2019-subzone-boundary-no-sea-kml.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nConvert mpsz to 2D geometry.\n\nmpsz &lt;- st_zm(mpsz, drop = TRUE) # Convert 3D geometries to 2D\n\nExtract the SUBZONE_N and PLN_AREA_N from the Dscrptn field\nFor SUBZONE_N,\n\nmpsz &lt;- mpsz %&gt;%\n  rowwise() %&gt;%\n  mutate(SUBZONE_N = str_extract(Description, \"&lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;(.*?)&lt;/td&gt;\")) %&gt;%\n  ungroup()\n\nmpsz$SUBZONE_N &lt;- str_remove_all(mpsz$SUBZONE_N, \"&lt;.*?&gt;|SUBZONE_N\")\n\nFor PLN_AREA_N,\n\nmpsz &lt;- mpsz %&gt;%\n  rowwise() %&gt;%\n  mutate(PLN_AREA_N = str_extract(Description, \"&lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;(.*?)&lt;/td&gt;\")) %&gt;%\n  ungroup()\n\nmpsz$PLN_AREA_N &lt;- str_remove_all(mpsz$PLN_AREA_N, \"&lt;.*?&gt;|PLN_AREA_N\")\n\nRemove the Description column\n\nmpsz$Description &lt;- NULL\n\nCreate the shapefile\n\nst_write(mpsz, \"data/geospatial/mpsz_sf.shp\")\n\nRead the updated shapefile.\n\nmpsz_sf &lt;- st_read(\"data/geospatial/mpsz_sf.shp\")\n\nReading layer `mpsz_sf' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\mpsz_sf.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz_sp &lt;- as(mpsz_sf, \"Spatial\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#creating-spatial-grids",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#creating-spatial-grids",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Creating Spatial Grids",
    "text": "Creating Spatial Grids\n\nmpsz3414 &lt;- st_transform(mpsz_sf, 3414)\nouter_islands &lt;- c(\"SEMAKAU\", \"SUDONG\", \"NORTH-EASTERN ISLANDS\", \"SOUTHERN GROUP\")\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  filter(!str_trim(SUBZONE_N) %in% str_trim(outer_islands))\n\n\nhex_grid &lt;- st_make_grid(mpsz3414, cellsize = c(750, 750), what = \"polygons\", square = FALSE) %&gt;%\n  st_sf() %&gt;%\n  # Apply as.factor() since index will be used as the identifier to link to other data sets\n  mutate(index = as.factor(row_number()))\n\n# Create border of Singapore's land area\nmpsz_border &lt;- mpsz3414 %&gt;% st_union()\n\n# Clip the hexagon grid layer\nhex_grid_bounded &lt;- st_intersection(hex_grid, mpsz_border)\n\n\ntmap_mode(\"plot\")\n\ntm_shape(hex_grid_bounded) +\n  tm_polygons()\n\n\n\n\n\n# Check if hex grid intersects any polygons using st_intersects\n# Returns a list of intersecting hexagons\nintersection_list = hex_grid$index[lengths(st_intersects(hex_grid, hex_grid_bounded)) &gt; 0]\n\n# Filter for the intersecting hexagons\nhex_grid_bounded2 = hex_grid %&gt;%\n  filter(index %in% intersection_list)\n\ntm_shape(hex_grid_bounded2) +\n  tm_polygons()\n\n\n\n\n\nThe map above now shows the complete analytical hexagon data of 375m (perpendicular distance between the centre of hexagon and its edges) that represents the TAZ."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#bus-stop-locations",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#bus-stop-locations",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Bus Stop Locations",
    "text": "Bus Stop Locations\n\nBusStop &lt;- read.csv(\"data/aspatial/bus_coords_subzone.csv\") %&gt;% st_as_sf(coords=c(\"Longitude\", \"Latitude\"), crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\nCompute Bus Stop Density\nUsing st_intersects(), we can intersect the bus stops layer and the hexagon layer and use lengths() to count the number of bus stops that lie inside each Traffic Analysis Zone. These count values are appended back to each spatial grid and encapsulated into a new column called busstop_count in a duplicated dataframe, hex_grid_bounded2.\n\nhex_grid_bounded2$busstop_count &lt;- lengths(st_intersects(hex_grid_bounded2, BusStop))\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Bus Stop Density\") + \n  tm_borders(col = \"grey\") +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"))\n\n\n\n\n\nwrite_rds(hex_grid_bounded2, \"data/rds/hex_grid_bounded2\")\n\n\nhex_grid_bounded2 &lt;- readRDS(\"data/rds/hex_grid_bounded2\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#constructing-o-d-matrix-of-commuter-flow",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#constructing-o-d-matrix-of-commuter-flow",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Constructing O-D Matrix of commuter flow",
    "text": "Constructing O-D Matrix of commuter flow\n\nod_bus_nov &lt;- read_csv(\"data/OD Bus/origin_destination_bus_202311.csv\")\nod_bus_dec &lt;- read_csv(\"data/OD Bus/origin_destination_bus_202312.csv\")\nod_bus_jan &lt;- read_csv(\"data/OD Bus/origin_destination_bus_202401.csv\")\n\n\nOD &lt;- rbind(od_bus_nov, od_bus_dec)\nOD &lt;- rbind(OD, od_bus_jan)\n\nnrow(od_bus_nov) + nrow(od_bus_dec) + nrow(od_bus_jan) == nrow(OD)\n\n[1] TRUE\n\n\n\nstr(OD)\n\nspc_tbl_ [12,316,954 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR_MONTH         : chr [1:12316954] \"2023-11\" \"2023-11\" \"2023-11\" \"2023-11\" ...\n $ DAY_TYPE           : chr [1:12316954] \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" ...\n $ TIME_PER_HOUR      : num [1:12316954] 16 16 14 14 17 17 17 7 7 14 ...\n $ PT_TYPE            : chr [1:12316954] \"BUS\" \"BUS\" \"BUS\" \"BUS\" ...\n $ ORIGIN_PT_CODE     : chr [1:12316954] \"04168\" \"04168\" \"80119\" \"80119\" ...\n $ DESTINATION_PT_CODE: chr [1:12316954] \"10051\" \"10051\" \"90079\" \"90079\" ...\n $ TOTAL_TRIPS        : num [1:12316954] 6 4 4 8 2 18 1 1 2 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR_MONTH = col_character(),\n  ..   DAY_TYPE = col_character(),\n  ..   TIME_PER_HOUR = col_double(),\n  ..   PT_TYPE = col_character(),\n  ..   ORIGIN_PT_CODE = col_character(),\n  ..   DESTINATION_PT_CODE = col_character(),\n  ..   TOTAL_TRIPS = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nORIGIN_PT_CODE and DESTINATION_PT_CODE are listed as character variables. These variables should be transformed to factors so that R treats them as grouping variables.\n\ncols_to_convert &lt;- c(\"ORIGIN_PT_CODE\", \"DESTINATION_PT_CODE\")\n\nOD[cols_to_convert] &lt;- lapply(OD[cols_to_convert], as.factor)\n\nglimpse(OD)\n\nRows: 12,316,954\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-11\", \"2023-11\", \"2023-11\", \"2023-11\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 7, 14, 14, 10, 10, …\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 20281, 20281, 1…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;dbl&gt; 6, 4, 4, 8, 2, 18, 1, 1, 2, 3, 8, 3, 1, 5, 2, 1, 1…\n\n\nORIGIN_PT_CODEandDESTINATION_PT_CODE` are now factors.\n\nwrite_rds(OD, \"data/rds/odbus_combined.rds\")\n\n\nodbus_combined &lt;- readRDS(\"data/rds/odbus_combined.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#weekday",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#weekday",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Weekday",
    "text": "Weekday\n\nMorning\n\nod_wkday_morn &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\nhead(od_wkday_morn, 10)\n\n# A tibble: 10 × 3\n   ORIGIN_PT_CODE DESTINATION_PT_CODE TRIPS\n   &lt;fct&gt;          &lt;fct&gt;               &lt;dbl&gt;\n 1 01012          01112                 469\n 2 01012          01113                 299\n 3 01012          01121                 168\n 4 01012          01211                 244\n 5 01012          01311                 383\n 6 01012          07371                  31\n 7 01012          60011                  49\n 8 01012          60021                  29\n 9 01012          60031                  48\n10 01012          60159                  41\n\n\n\nNovemberDecemberJanuary\n\n\n\nod_wkday_morn_nov &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9 & YEAR_MONTH == \"2023-11\") %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\n\n\nod_wkday_morn_dec &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9 & YEAR_MONTH == \"2023-12\") %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\n\n\nod_wkday_morn_jan &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9 & YEAR_MONTH == \"2024-01\") %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\n\n\n\n\nEvening\n\nod_wkday_eve &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;=20) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\nNovemberDecemberJanuary\n\n\n\nod_wkday_eve_nov &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20 & YEAR_MONTH == \"2023-11\") %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\n\n\nod_wkday_eve_dec &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20 & YEAR_MONTH == \"2023-12\") %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()\n\n\n\n\nod_wkday_eve_jan &lt;- odbus_combined %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20 & YEAR_MONTH == \"2024-01\") %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#geospatial-data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#geospatial-data-wrangling",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\nNow we need to convert the od data from aspatial to geospatial data.\nFirst, we populate the hexagon grid indexes of hex_grid_bounded2 sf data frame into BusStop sf data frame using st_intersection().\n\nBusStop_hex &lt;- st_intersection(BusStop, hex_grid_bounded2) %&gt;%\n  select(BusStopCode, index) %&gt;%\n  st_drop_geometry()\n\ncols_to_convert &lt;- c(\"BusStopCode\")\nBusStop_hex[cols_to_convert] &lt;- lapply(BusStop_hex[cols_to_convert], as.factor)\n\nglimpse(BusStop_hex)\n\nRows: 5,102\nColumns: 2\n$ BusStopCode &lt;fct&gt; 25059, 26379, 25751, 25761, 25711, 25719, 26369, 25741, 26…\n$ index       &lt;fct&gt; 121, 123, 144, 144, 145, 145, 146, 168, 169, 169, 170, 171…\n\n\nAppend the hexagon grid index from BusStop_hex data frame to the segregated od data frames for both ORIGIN_PT_CODE and DESTINATION_PT_CODE.\n\nWeekday Morning\n\nod_data_morn &lt;- left_join(od_wkday_morn , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_morn &lt;- left_join(od_data_morn , BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_morn[cols_to_convert] &lt;- lapply(od_data_morn[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_morn %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\nNovemberDecemberJanuary\n\n\n\nod_data_morn_nov &lt;- left_join(od_wkday_morn_nov , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_morn_nov &lt;- left_join(od_data_morn_nov , BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_morn_nov[cols_to_convert] &lt;- lapply(od_data_morn_nov[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_morn_nov %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\n\n\nod_data_morn_dec &lt;- left_join(od_wkday_morn_dec , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_morn_dec &lt;- left_join(od_data_morn_dec , BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_morn_dec[cols_to_convert] &lt;- lapply(od_data_morn_dec[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_morn_dec %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\n\n\nod_data_morn_jan &lt;- left_join(od_wkday_morn_jan , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_morn_jan &lt;- left_join(od_data_morn_jan, BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_morn_jan[cols_to_convert] &lt;- lapply(od_data_morn_jan[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_morn_jan %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\n\n\n\n\nWeekday Evening\n\nod_data_eve &lt;- left_join(od_wkday_eve , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_eve &lt;- left_join(od_data_eve , BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\nod_data_eve[cols_to_convert] &lt;- lapply(od_data_eve[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_eve %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\nNovemberDecemberJanuary\n\n\n\nod_data_eve_nov &lt;- left_join(od_wkday_eve_nov , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_eve_nov &lt;- left_join(od_data_eve_nov , BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_eve_nov[cols_to_convert] &lt;- lapply(od_data_eve_nov[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_eve_nov %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\n\n\nod_data_eve_dec &lt;- left_join(od_wkday_eve_dec , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_eve_dec &lt;- left_join(od_data_eve_dec , BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_eve_dec[cols_to_convert] &lt;- lapply(od_data_eve_dec[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_eve_dec %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)\n\n\n\n\n\n\n\n\n\nod_data_eve_jan &lt;- left_join(od_wkday_eve_jan , BusStop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"ORIGIN_hex\" = \"index\")\n\nod_data_eve_jan &lt;- left_join(od_data_eve_jan, BusStop_hex,\n            by = c(\"DESTINATION_PT_CODE\" = \"BusStopCode\")) %&gt;%\n  rename(\"DESTIN_hex\" = \"index\") %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_hex, DESTIN_hex) %&gt;%\n  summarise(TOTAL_TRIPS = sum(TRIPS))\n\ncols_to_convert &lt;- c(\"ORIGIN_hex\", \"DESTIN_hex\")\n\nod_data_eve_jan[cols_to_convert] &lt;- lapply(od_data_eve_jan[cols_to_convert], as.factor)\n\nCheck for duplicates.\n\nduplicate &lt;- od_data_eve_jan %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualisation-of-o-d-flows",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualisation-of-o-d-flows",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Visualisation of O-D Flows",
    "text": "Visualisation of O-D Flows\n\nRemove intra-zonal flows\n\nod_plot &lt;- od_data_morn[od_data_morn$ORIGIN_hex!=od_data_morn$DESTIN_hex,]\n\nod_plot2 &lt;- od_data_morn_nov[od_data_morn_nov$ORIGIN_hex!=od_data_morn_nov$DESTIN_hex,]\n\nod_plot3 &lt;- od_data_morn_dec[od_data_morn_dec$ORIGIN_hex!=od_data_morn_dec$DESTIN_hex,]\n\nod_plot4 &lt;- od_data_morn_jan[od_data_morn_jan$ORIGIN_hex!=od_data_morn_jan$DESTIN_hex,]\n\n\nod_plot5 &lt;- od_data_eve[od_data_eve$ORIGIN_hex!=od_data_eve$DESTIN_hex,]\n\nod_plot6 &lt;- od_data_eve_nov[od_data_eve_nov$ORIGIN_hex!=od_data_eve_nov$DESTIN_hex,]\n\nod_plot7 &lt;- od_data_eve_dec[od_data_eve_dec$ORIGIN_hex!=od_data_eve_dec$DESTIN_hex,]\n\nod_plot8 &lt;- od_data_eve_jan[od_data_eve_jan$ORIGIN_hex!=od_data_eve_jan$DESTIN_hex,]\n\n\n\nCreate desire lines\nUse od2line() of stplanr package to create the desire lines.\n\nflowLine &lt;- od2line(flow = od_plot, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine2 &lt;- od2line(flow = od_plot2, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine3 &lt;- od2line(flow = od_plot3, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine4 &lt;- od2line(flow = od_plot4, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine5 &lt;- od2line(flow = od_plot5, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine6 &lt;- od2line(flow = od_plot6, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine7 &lt;- od2line(flow = od_plot7, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\nflowLine8 &lt;- od2line(flow = od_plot8, \n                    zones = hex_grid_bounded2,\n                    zone_code = \"index\")\n\n\nThe above code chunk also created centroids representing the desire lines’ start and end points.\n\n\n\nVisualise desire lines\nUse tmap() to visualise the resulting desire lines. For a clearer visualisation, only desire lines with at least 5000 trips are shown.\n\nGeneral Peak MorningNovember Peak MorningDecember Peak MorningJanuary Peak Morning\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (General)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotable centroids where people are travelling to or from during weekday morning peak period include Tampines, Punggol, Jurong East, and even CBD. In terms of distances, there are several long distance routes linking the East to the North.\n\n\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine2 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (November '23)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine3 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (December '23)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine4 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (January '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\n\nGeneral Peak EveningNovember Peak EveningDecember Peak EveningJanuary Peak Evening\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine5 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (General)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotable centroids where people are travelling to or from during weekday morning peak period include Tampines, Punggol, Jurong East, and even CBD. In terms of distances, there are several long distance routes linking the East to the North.\n\n\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine6 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (November '23)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine7 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (December '23)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\nflowLine8 %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           title.lwd = \"Total Trips\") + \n  tm_layout(main.title = \"Desire Lines with at least 5000 trips \\nbetween Traffic Analysis Zones for Weekday Morning Peak Period (January '24)\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            frame = TRUE) +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4) \n\n\n\n\n\n\n\nWe can also zoom into individual planning areas of Singapore and observe commuting trends. A left join can be performed for hex_grid_bounded3 and mpsz using st_join() and left=TRUE. **\n\nhex_grid_mpsz &lt;- st_join(hex_grid_bounded2, mpsz3414, left = TRUE)\n\ntmap_mode(\"view\")\n\nA filter can also then be applied on the PLN_AREA_N column to a specific planning area. Let’s look at Tampines.\n\nhex_grid_mpsz %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\") %&gt;% \ntm_shape() +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\",\n          popup.vars = c(\"SUBZONE_N\")) + \n  tm_view(set.zoom.limits = c(11,14)) + \n  tm_borders(col = \"grey\") +\nflowLine %&gt;%  \n  filter(TOTAL_TRIPS &gt;= 5000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"TOTAL_TRIPS\",\n           style = \"fixed\",\n           scale = c(1,2,3,4,5,7,9),\n           n = 6, \n           alpha = 0.7,\n           popup.vars = c(\"TOTAL_TRIPS\"))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#computing-distance-matrix",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#computing-distance-matrix",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Computing Distance Matrix",
    "text": "Computing Distance Matrix\n\ndist &lt;- spDists(mpsz_sp, \n                longlat = FALSE)\n\n\nhead(dist, n=c(10,10))\n\n            [,1]        [,2]        [,3]       [,4]        [,5]       [,6]\n [1,] 0.00000000 0.035282271 0.035395901 0.18199800 0.026873554 0.01286792\n [2,] 0.03528227 0.000000000 0.002764531 0.14841704 0.008552614 0.04721046\n [3,] 0.03539590 0.002764531 0.000000000 0.14749610 0.009403137 0.04762149\n [4,] 0.18199800 0.148417042 0.147496098 0.00000000 0.156829556 0.19469772\n [5,] 0.02687355 0.008552614 0.009403137 0.15682956 0.000000000 0.03866693\n [6,] 0.01286792 0.047210462 0.047621487 0.19469772 0.038666929 0.00000000\n [7,] 0.17287059 0.146276442 0.144315837 0.06529755 0.153255555 0.18550175\n [8,] 0.13479457 0.115042375 0.112584408 0.10165987 0.120292455 0.14665912\n [9,] 0.06792530 0.071740757 0.069161116 0.16564500 0.070551911 0.07590984\n[10,] 0.05759682 0.044983619 0.042219355 0.13901073 0.047233657 0.06941848\n            [,7]       [,8]       [,9]      [,10]\n [1,] 0.17287059 0.13479457 0.06792530 0.05759682\n [2,] 0.14627644 0.11504237 0.07174076 0.04498362\n [3,] 0.14431584 0.11258441 0.06916112 0.04221936\n [4,] 0.06529755 0.10165987 0.16564500 0.13901073\n [5,] 0.15325556 0.12029246 0.07055191 0.04723366\n [6,] 0.18550175 0.14665912 0.07590984 0.06941848\n [7,] 0.00000000 0.05037607 0.13309198 0.11790777\n [8,] 0.05037607 0.00000000 0.08514690 0.07725087\n [9,] 0.13309198 0.08514690 0.00000000 0.03409883\n[10,] 0.11790777 0.07725087 0.03409883 0.00000000\n\n\n\nLabel column and row headers of distance matrix\nCreate a list sorted by planning subzone.\n\nsz_names &lt;- mpsz_sf$SUBZONE_N\n\nAttach the subzones to row and column for distance matrix matching.\n\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)\n\n\n\nPivoting distance value by SUBZONE_N\nPivot the distance matrix into a long table by using the row and column subzone names.\n\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n                      Var1        Var2       dist\n1              MARINA EAST MARINA EAST 0.00000000\n2         INSTITUTION HILL MARINA EAST 0.03528227\n3           ROBERTSON QUAY MARINA EAST 0.03539590\n4  JURONG ISLAND AND BUKOM MARINA EAST 0.18199800\n5             FORT CANNING MARINA EAST 0.02687355\n6         MARINA EAST (MP) MARINA EAST 0.01286792\n7                   SUDONG MARINA EAST 0.17287059\n8                  SEMAKAU MARINA EAST 0.13479457\n9           SOUTHERN GROUP MARINA EAST 0.06792530\n10                 SENTOSA MARINA EAST 0.05759682\n\n\n\nNotice that from the first row, the within zone distance is 0.\n\n\n\nUpdating intra-zonal distances\nAppend a constance value to replace the intra-zonaal distance of 0.\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n                      Var1                             Var2       \n MARINA EAST            :   331   MARINA EAST            :   331  \n INSTITUTION HILL       :   331   INSTITUTION HILL       :   331  \n ROBERTSON QUAY         :   331   ROBERTSON QUAY         :   331  \n JURONG ISLAND AND BUKOM:   331   JURONG ISLAND AND BUKOM:   331  \n FORT CANNING           :   331   FORT CANNING           :   331  \n MARINA EAST (MP)       :   331   MARINA EAST (MP)       :   331  \n (Other)                :107906   (Other)                :107906  \n      dist         \n Min.   :0.001561  \n 1st Qu.:0.064419  \n Median :0.107153  \n Mean   :0.110151  \n 3rd Qu.:0.147771  \n Max.   :0.448634  \n                   \n\n\nAdd a constant distance value of 50m into intra-zones distance.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\nCheck the resulting dataframe.\n\ndistPair %&gt;%\n  summary()\n\n                      Var1                             Var2       \n MARINA EAST            :   332   MARINA EAST            :   332  \n INSTITUTION HILL       :   332   INSTITUTION HILL       :   332  \n ROBERTSON QUAY         :   332   ROBERTSON QUAY         :   332  \n JURONG ISLAND AND BUKOM:   332   JURONG ISLAND AND BUKOM:   332  \n FORT CANNING           :   332   FORT CANNING           :   332  \n MARINA EAST (MP)       :   332   MARINA EAST (MP)       :   332  \n (Other)                :108232   (Other)                :108232  \n      dist         \n Min.   : 0.00156  \n 1st Qu.: 0.06455  \n Median : 0.10739  \n Mean   : 0.26042  \n 3rd Qu.: 0.14824  \n Max.   :50.00000  \n                   \n\n\nSave the dataframe for future use.\n\nwrite_rds(distPair, \"data/rds/distPair.rds\") \n\n\ndistPair &lt;- read_rds(\"data/rds/distPair.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-aspatial-hdb-data",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-aspatial-hdb-data",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Importing Aspatial HDB data",
    "text": "Importing Aspatial HDB data\nUse read_csv() from the readr package to import the prepared HDB csv data.\n\nhdb &lt;- read_csv(\"data/aspatial/hdb.csv\")\n\nglimpse(hdb)\n\nRows: 12,442\nColumns: 37\n$ ...1                  &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ blk_no                &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…\n$ street                &lt;chr&gt; \"BEACH RD\", \"BEDOK STH AVE 1\", \"CANTONMENT RD\", …\n$ max_floor_lvl         &lt;dbl&gt; 16, 14, 2, 15, 4, 25, 12, 14, 12, 2, 15, 15, 13,…\n$ year_completed        &lt;dbl&gt; 1970, 1975, 2010, 1982, 1975, 1982, 1975, 1977, …\n$ residential           &lt;chr&gt; \"Y\", \"Y\", \"N\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"N\"…\n$ commercial            &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"Y\"…\n$ market_hawker         &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ miscellaneous         &lt;chr&gt; \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"Y\", \"N\", \"N\"…\n$ multistorey_carpark   &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ precinct_pavilion     &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ bldg_contract_town    &lt;chr&gt; \"KWN\", \"BD\", \"CT\", \"BD\", \"PRC\", \"BM\", \"QT\", \"GL\"…\n$ total_dwelling_units  &lt;dbl&gt; 142, 206, 0, 102, 55, 96, 125, 247, 95, 0, 220, …\n$ `1room_sold`          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `2room_sold`          &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `3room_sold`          &lt;dbl&gt; 138, 204, 0, 0, 54, 0, 118, 0, 62, 0, 216, 214, …\n$ `4room_sold`          &lt;dbl&gt; 1, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `5room_sold`          &lt;dbl&gt; 2, 2, 0, 92, 1, 96, 7, 0, 33, 0, 4, 5, 0, 4, 0, …\n$ exec_sold             &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ multigen_sold         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ studio_apartment_sold &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `1room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 319, 0, 0, 0…\n$ `2room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 56, …\n$ `3room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 1,…\n$ other_room_rental     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0,…\n$ lat                   &lt;dbl&gt; 1.295097, 1.320852, 1.275488, 1.327969, 1.388610…\n$ lng                   &lt;dbl&gt; 103.8541, 103.9337, 103.8414, 103.9227, 103.9881…\n$ building              &lt;chr&gt; \"RAFFLES HOTEL\", \"NIL\", \"PINNACLE @ DUXTON\", \"PI…\n$ addr                  &lt;chr&gt; \"1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\", \"…\n$ postal                &lt;chr&gt; \"189673\", \"460001\", \"080001\", \"461001\", \"500001\"…\n$ SUBZONE_NO            &lt;dbl&gt; 2, 6, 3, 3, 1, 9, 10, 5, 3, 5, 1, 5, 2, 2, 1, 7,…\n$ SUBZONE_N             &lt;chr&gt; \"CITY HALL\", \"BEDOK SOUTH\", \"CHINATOWN\", \"KEMBAN…\n$ SUBZONE_C             &lt;chr&gt; \"DTSZ02\", \"BDSZ06\", \"OTSZ03\", \"BDSZ03\", \"CHSZ01\"…\n$ PLN_AREA_N            &lt;chr&gt; \"DOWNTOWN CORE\", \"BEDOK\", \"OUTRAM\", \"BEDOK\", \"CH…\n$ PLN_AREA_C            &lt;chr&gt; \"DT\", \"BD\", \"OT\", \"BD\", \"CH\", \"BM\", \"QT\", \"GL\", …\n$ REGION_N              &lt;chr&gt; \"CENTRAL REGION\", \"EAST REGION\", \"CENTRAL REGION…\n$ REGION_C              &lt;chr&gt; \"CR\", \"ER\", \"CR\", \"ER\", \"ER\", \"CR\", \"CR\", \"CR\", …\n\n\nFor the purpose of computing a proxy for population density, the residential units will be extracted using filter() from the dplyr package.\n\nhdb_residential &lt;- hdb %&gt;%\n  filter(residential == \"Y\")\n\nhead(hdb_residential, 10)\n\n# A tibble: 10 × 37\n    ...1 blk_no street       max_floor_lvl year_completed residential commercial\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;                &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;     \n 1     0 1      BEACH RD                16           1970 Y           Y         \n 2     1 1      BEDOK STH A…            14           1975 Y           N         \n 3     3 1      CHAI CHEE RD            15           1982 Y           N         \n 4     4 1      CHANGI VILL…             4           1975 Y           Y         \n 5     5 1      DELTA AVE               25           1982 Y           N         \n 6     6 1      DOVER RD                12           1975 Y           N         \n 7     7 1      EUNOS CRES              14           1977 Y           N         \n 8     8 1      EVERTON PK              12           1980 Y           Y         \n 9    10 1      GHIM MOH RD             15           1975 Y           N         \n10    11 1      HAIG RD                 15           1976 Y           N         \n# ℹ 30 more variables: market_hawker &lt;chr&gt;, miscellaneous &lt;chr&gt;,\n#   multistorey_carpark &lt;chr&gt;, precinct_pavilion &lt;chr&gt;,\n#   bldg_contract_town &lt;chr&gt;, total_dwelling_units &lt;dbl&gt;, `1room_sold` &lt;dbl&gt;,\n#   `2room_sold` &lt;dbl&gt;, `3room_sold` &lt;dbl&gt;, `4room_sold` &lt;dbl&gt;,\n#   `5room_sold` &lt;dbl&gt;, exec_sold &lt;dbl&gt;, multigen_sold &lt;dbl&gt;,\n#   studio_apartment_sold &lt;dbl&gt;, `1room_rental` &lt;dbl&gt;, `2room_rental` &lt;dbl&gt;,\n#   `3room_rental` &lt;dbl&gt;, other_room_rental &lt;dbl&gt;, lat &lt;dbl&gt;, lng &lt;dbl&gt;, …\n\n\nThere are also some outliers like hotels that are classified as a residential unit. We can remove rows containing ‘hotel’ using grepl().\n\nhotels &lt;- hdb_residential %&gt;%\n  filter(grepl(\"HOTEL\", building, ignore.case = TRUE))\n\nkable(hotels)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\nblk_no\nstreet\nmax_floor_lvl\nyear_completed\nresidential\ncommercial\nmarket_hawker\nmiscellaneous\nmultistorey_carpark\nprecinct_pavilion\nbldg_contract_town\ntotal_dwelling_units\n1room_sold\n2room_sold\n3room_sold\n4room_sold\n5room_sold\nexec_sold\nmultigen_sold\nstudio_apartment_sold\n1room_rental\n2room_rental\n3room_rental\nother_room_rental\nlat\nlng\nbuilding\naddr\npostal\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\n\n\n\n\n0\n1\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n142\n0\n1\n138\n1\n2\n0\n0\n0\n0\n0\n0\n0\n1.295097\n103.8541\nRAFFLES HOTEL\n1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\n189673\n2\nCITY HALL\nDTSZ02\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n4580\n3\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n138\n0\n1\n134\n0\n3\n0\n0\n0\n0\n0\n0\n0\n1.294801\n103.8545\nRAFFLES HOTEL SINGAPORE\n3 BEACH ROAD RAFFLES HOTEL SINGAPORE SINGAPORE 189674\n189674\n2\nCITY HALL\nDTSZ02\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n\n\n\nThe HDB Blk 1 Beach Road shares a similar address as Raffles Hotel’s 1 Beach Road, but they have different postal codes.\nTo verify other similar addresses, filter for addresses containing “BEACH RD”.\n\nbeach_rd &lt;- hdb_residential %&gt;%\n  filter(grepl(\"BEACH RD\", street, ignore.case = TRUE))\n\nkable(beach_rd)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n…1\nblk_no\nstreet\nmax_floor_lvl\nyear_completed\nresidential\ncommercial\nmarket_hawker\nmiscellaneous\nmultistorey_carpark\nprecinct_pavilion\nbldg_contract_town\ntotal_dwelling_units\n1room_sold\n2room_sold\n3room_sold\n4room_sold\n5room_sold\nexec_sold\nmultigen_sold\nstudio_apartment_sold\n1room_rental\n2room_rental\n3room_rental\nother_room_rental\nlat\nlng\nbuilding\naddr\npostal\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\n\n\n\n\n0\n1\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n142\n0\n1\n138\n1\n2\n0\n0\n0\n0\n0\n0\n0\n1.295097\n103.8541\nRAFFLES HOTEL\n1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\n189673\n2\nCITY HALL\nDTSZ02\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n1660\n15\nBEACH RD\n20\n1974\nY\nY\nN\nN\nN\nN\nKWN\n76\n0\n0\n0\n76\n0\n0\n0\n0\n0\n0\n0\n0\n1.295796\n103.8555\nNIL\n15 BEACH ROAD\nNIL\n1\nBUGIS\nDTSZ01\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n2079\n17\nBEACH RD\n20\n1974\nY\nY\nN\nN\nN\nN\nKWN\n76\n0\n0\n0\n76\n0\n0\n0\n0\n0\n0\n0\n0\n1.303689\n103.8636\nGOLDEN BEACH VISTA\n17 BEACH ROAD GOLDEN BEACH VISTA SINGAPORE 190017\n190017\n9\nCRAWFORD\nKLSZ09\nKALLANG\nKL\nCENTRAL REGION\nCR\n\n\n2567\n2\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n139\n0\n1\n136\n0\n2\n0\n0\n0\n0\n0\n0\n0\n1.390462\n103.9753\nCHANGI BEACH CLUB\n2 ANDOVER ROAD CHANGI BEACH CLUB SINGAPORE 509984\n509984\n1\nCHANGI POINT\nCHSZ01\nCHANGI\nCH\nEAST REGION\nER\n\n\n4580\n3\nBEACH RD\n16\n1970\nY\nY\nN\nN\nN\nN\nKWN\n138\n0\n1\n134\n0\n3\n0\n0\n0\n0\n0\n0\n0\n1.294801\n103.8545\nRAFFLES HOTEL SINGAPORE\n3 BEACH ROAD RAFFLES HOTEL SINGAPORE SINGAPORE 189674\n189674\n2\nCITY HALL\nDTSZ02\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n6028\n4\nBEACH RD\n16\n1968\nY\nN\nN\nY\nN\nN\nKWN\n336\n0\n0\n0\n0\n0\n0\n0\n0\n336\n0\n0\n0\n1.304716\n103.8652\nNIL\n4 BEACH ROAD SINGAPORE 190004\n190004\n9\nCRAWFORD\nKLSZ09\nKALLANG\nKL\nCENTRAL REGION\nCR\n\n\n7743\n5\nBEACH RD\n16\n1968\nY\nN\nN\nY\nN\nN\nKWN\n336\n0\n0\n0\n0\n0\n0\n0\n0\n336\n0\n0\n0\n1.298092\n103.8569\nBEACH ROAD CONSERVATION AREA\n5 TAN QUEE LAN STREET BEACH ROAD CONSERVATION AREA SINGAPORE 188094\n188094\n1\nBUGIS\nDTSZ01\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n\n\n8956\n6\nBEACH RD\n16\n1968\nY\nY\nN\nN\nN\nN\nKWN\n198\n0\n45\n1\n28\n0\n0\n0\n0\n57\n67\n0\n0\n1.303992\n103.8644\nBEACH ROAD GARDENS\n6 BEACH ROAD BEACH ROAD GARDENS SINGAPORE 190006\n190006\n9\nCRAWFORD\nKLSZ09\nKALLANG\nKL\nCENTRAL REGION\nCR\n\n\n\n\n\n2, 5 and 15 Beach Road do not have the correct postal codes following the 1900XX convention. Additionally, these addresses do not have the correct coordinates too.\nWith reference to URA’s official asset map of Singapore, OneMap, the data will be manually modified using mutate() and ifelse().\n\nhdb_residential2 &lt;- hdb_residential %&gt;%\n  mutate(postal = ifelse(blk_no == 1 & street == \"BEACH RD\", 190001, postal)) %&gt;%\n  mutate(lat = ifelse(blk_no == 1 & street == \"BEACH RD\", 1.3036714, lat)) %&gt;%\n  mutate(lng = ifelse(blk_no == 1 & street == \"BEACH RD\", 103.8644787, lng)) %&gt;%\n  mutate(postal = ifelse(blk_no == 2 & street == \"BEACH RD\", 190002, postal)) %&gt;%\n  mutate(lat = ifelse(blk_no == 2 & street == \"BEACH RD\", 1.3040331, lat)) %&gt;%\n  mutate(lng = ifelse(blk_no == 2 & street == \"BEACH RD\", 103.8649285, lng)) %&gt;%\n  mutate(postal = ifelse(blk_no == 3 & street == \"BEACH RD\", 190003, postal)) %&gt;%\n  mutate(lat = ifelse(blk_no == 3 & street == \"BEACH RD\", 1.3041872, lat)) %&gt;%\n  mutate(lng = ifelse(blk_no == 3 & street == \"BEACH RD\", 103.8651934, lng)) %&gt;%\n  mutate(postal = ifelse(blk_no == 5 & street == \"BEACH RD\", 190005, postal)) %&gt;%\n  mutate(lat = ifelse(blk_no == 5 & street == \"BEACH RD\", 1.3043463, lat)) %&gt;%\n  mutate(lng = ifelse(blk_no == 5 & street == \"BEACH RD\", 103.8648158, lng)) %&gt;%\n  mutate(postal = ifelse(blk_no == 15 & street == \"BEACH RD\", 190015, postal)) %&gt;%\n  mutate(lat = ifelse(blk_no == 15 & street == \"BEACH RD\", 1.3034254, lat)) %&gt;%\n  mutate(lng = ifelse(blk_no == 15 & street == \"BEACH RD\", 103.8631535, lng))\n\nCheck for any duplicates.\n\nduplicate &lt;- hdb_residential2 %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nDT::datatable(duplicate)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#converting-aspatial-data-to-geospatial-data",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#converting-aspatial-data-to-geospatial-data",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Converting Aspatial data to Geospatial data",
    "text": "Converting Aspatial data to Geospatial data\nLongitude and latitude values are in decimal degrees and thus the data is in wgs84 geographic coordinate system.\nTo convert hdb_residential2 into sf, we use st_as_sf() and set the crs argument to 4326 first. The transformation to Singapore’s coordinate reference system 3414 will be done with st_transform().\nWe only need the postal code, total dwelling units and geometry attributes so we will use the select() function to extract these columns.\n\nhdb_residential_sf &lt;- st_as_sf(hdb_residential2, \n                   coords = c(\"lng\", \"lat\"),\n                   crs=4326) %&gt;%\n  st_transform(crs = 3414) %&gt;%\n  select(postal, total_dwelling_units, geometry)\n\nstr(hdb_residential_sf)\n\nsf [10,181 × 3] (S3: sf/tbl_df/tbl/data.frame)\n $ postal              : chr [1:10181] \"190001\" \"460001\" \"461001\" \"500001\" ...\n $ total_dwelling_units: num [1:10181] 142 206 102 55 96 125 247 95 220 219 ...\n $ geometry            :sfc_POINT of length 10181; first list element:  'XY' num [1:2] 31468 31779\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA\n  ..- attr(*, \"names\")= chr [1:2] \"postal\" \"total_dwelling_units\"\n\n\nLet’s build the HDB residential population density map.\n\ntm_shape(hex_grid_bounded2) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\ntm_shape(hdb_residential_sf) +\n  tm_dots() + \n  tm_layout(main.title = \"Location of HDB Residential Units\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            frame = TRUE)  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n\n\n\n\n\nPerformming in-polygon count\n\nhousing_count &lt;- st_join(hex_grid_bounded2, hdb_residential_sf, \n                     join = st_intersects, left = TRUE) %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(index) %&gt;%\n  summarise(housing_count = sum(total_dwelling_units)) %&gt;%\n  ungroup() %&gt;%\n  mutate(housing_count = ifelse(is.na(housing_count), 0, housing_count))\n\n\nhex_grid_bounded3 &lt;- left_join(hex_grid_bounded2, housing_count,\n                               by = c(\"index\" = \"index\"))\n\nsummary(hex_grid_bounded3$housing_count)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       0       0     652       0    7879 \n\n\n\ntm_shape(hex_grid_bounded3) +\n  tm_fill(col = \"housing_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Housing Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#import-geospatial-data-business",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#import-geospatial-data-business",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Import Geospatial data: Business",
    "text": "Import Geospatial data: Business\n\nbiz &lt;- st_read(\"data/geospatial/Business.shp\") %&gt;% st_transform(crs=3414)\n\nReading layer `Business' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial\\Business.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntm_shape(hex_grid_bounded3) +\n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\n  \ntm_shape(biz) +\n  tm_dots() + \n  tm_layout(main.title = \"Location of Businesses\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            frame = TRUE)  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)\n\n\n\n\nBusinesses are concentrated in the central and west regions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Perform point-in-polygon count",
    "text": "Perform point-in-polygon count\n\nhex_grid_bounded3$biz_count &lt;- lengths(st_intersects(hex_grid_bounded3, biz))\n\nsummary(hex_grid_bounded3$biz_count)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   3.915   2.000 106.000 \n\n\n\ntm_shape(hex_grid_bounded3) +\n  tm_fill(col = \"biz_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Business Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count-1",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count-1",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Perform point-in-polygon count",
    "text": "Perform point-in-polygon count\n\nhex_grid_bounded3$school_count &lt;- lengths(st_intersects(hex_grid_bounded3, schools_sf))\n\nsummary(hex_grid_bounded3$school_count)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.1943  0.0000  4.0000 \n\n\n\ntm_shape(hex_grid_bounded3) +\n  tm_fill(col = \"school_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"School Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-geospatial-data-fenancial-services",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-geospatial-data-fenancial-services",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Importing Geospatial data: Fenancial Services",
    "text": "Importing Geospatial data: Fenancial Services\n\nFinServ &lt;- st_read(dsn = \"data/geospatial\", layer = \"FinServ\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `FinServ' from data source \n  `C:\\guacodemoleh\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntm_shape(hex_grid_bounded3) + \n  tm_fill(col = \"busstop_count\",\n          palette = \"Blues\",\n          style = \"cont\",\n          title = \"Bus Stop Density\") +\n  tm_borders(col = \"grey\") +\ntm_shape(FinServ) + \n  tm_dots() + \n  tm_layout(main.title = \"Location of Financial Services\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            frame = TRUE)  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count-2",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count-2",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Perform point-in-polygon count",
    "text": "Perform point-in-polygon count\n\nhex_grid_bounded3$fin_count &lt;- lengths(st_intersects(hex_grid_bounded3, FinServ))\n\nsummary(hex_grid_bounded3$fin_count)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.984   1.000 117.000 \n\n\n\ntm_shape(hex_grid_bounded3) +\n  tm_fill(col = \"fin_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Financial Services Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count-3",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#perform-point-in-polygon-count-3",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Perform point-in-polygon count",
    "text": "Perform point-in-polygon count\n\nhex_grid_bounded3$hc_count &lt;- lengths(st_intersects(hex_grid_bounded3, public_hc.sf))\n\nsummary(hex_grid_bounded3$fin_count)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.984   1.000 117.000 \n\n\n\ntm_shape(hex_grid_bounded3) +\n  tm_fill(col = \"hc_count\",\n          palette = \"Blues\",\n          style = \"cont\", \n          title = \"Public Healthcare Services Density\") + \n  tm_borders(col = \"grey\")  +\n  tm_legend(position = c(\"RIGHT\", \"BOTTOM\"), legend.text.size = 0.4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#converting-sf-data-frame-to-spatialpolygonsdataframe",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#converting-sf-data-frame-to-spatialpolygonsdataframe",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Converting sf data frame to SpatialPolygonsDataFrame",
    "text": "Converting sf data frame to SpatialPolygonsDataFrame\n\nhex_grid_sp &lt;- as(hex_grid_bounded2, \"Spatial\")\nhex_grid_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 1673 \nextent      : 2292.538, 56667.54, 21015.46, 50460.32  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       : index, busstop_count \nmin values  :   100,             0 \nmax values  :   999,            20 \n\n\nThe code chunk below is used to measure the distance between the central points of each pair of spatial shapes using the function spDists() of sp package. This method is widely used due to its computational simplicity, providing a reasonably accurate indication of spatial connections between the shapes. As mentioned above, calculating distances between centroids demands less computational resources than calculations between all points along polygon edges, especially for intricate polygons with many vertices. Centroids also act as single point representations that provide an overview of the shape. While edges offer intricate shape details, the generalized perspective of centroids could be valuable when precise edge shapes are less critical.\n\ndist &lt;- spDists(hex_grid_sp, longlat = FALSE)\n\n# Examine the resultant matrix\nhead(dist, n=c(10, 10))\n\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n [1,]    0.000 1299.038 2598.076 3897.114 5196.152  750.000  750.000 1984.313\n [2,] 1299.038    0.000 1299.038 2598.076 3897.114 1984.313  750.000  750.000\n [3,] 2598.076 1299.038    0.000 1299.038 2598.076 3269.174 1984.313  750.000\n [4,] 3897.114 2598.076 1299.038    0.000 1299.038 4562.072 3269.174 1984.313\n [5,] 5196.152 3897.114 2598.076 1299.038    0.000 5857.687 4562.072 3269.174\n [6,]  750.000 1984.313 3269.174 4562.072 5857.687    0.000 1299.038 2598.076\n [7,]  750.000  750.000 1984.313 3269.174 4562.072 1299.038    0.000 1299.038\n [8,] 1984.313  750.000  750.000 1984.313 3269.174 2598.076 1299.038    0.000\n [9,] 3269.174 1984.313  750.000  750.000 1984.313 3897.114 2598.076 1299.038\n[10,] 4562.072 3269.174 1984.313  750.000  750.000 5196.152 3897.114 2598.076\n          [,9]    [,10]\n [1,] 3269.174 4562.072\n [2,] 1984.313 3269.174\n [3,]  750.000 1984.313\n [4,]  750.000  750.000\n [5,] 1984.313  750.000\n [6,] 3897.114 5196.152\n [7,] 2598.076 3897.114\n [8,] 1299.038 2598.076\n [9,]    0.000 1299.038\n[10,] 1299.038    0.000\n\n\nAs seen in the output above, the result is a matrix object class and the column and row headers are not labeled with the hexagon grid index representing the TAZ."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#label-column-and-row-headers-of-distance-matrix-1",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#label-column-and-row-headers-of-distance-matrix-1",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Label column and row headers of distance matrix",
    "text": "Label column and row headers of distance matrix\nCreate a list sorted according to the distance matrix by Traffic Analytical Zones.\n\nhex_names &lt;- hex_grid_bounded2$index\n\nAttach the hexagon grid index to the rows and columns for distance matrix matching.\n\ncolnames(dist) &lt;- paste0(hex_names)\nrownames(dist) &lt;- paste0(hex_names)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#pivot-distance-value-by-hexagon-grid-index",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#pivot-distance-value-by-hexagon-grid-index",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Pivot distance value by hexagon grid index",
    "text": "Pivot distance value by hexagon grid index\nThe distance maatrix is pivoted into a long table by using the melt() function of reshape2.\n\ndistPair &lt;- reshape2::melt(dist) %&gt;%\n  rename(dist = value)\n\nhead(distPair, 10)\n\n   Var1 Var2     dist\n1    25   25    0.000\n2    26   25 1299.038\n3    27   25 2598.076\n4    28   25 3897.114\n5    29   25 5196.152\n6    47   25  750.000\n7    48   25  750.000\n8    49   25 1984.313\n9    50   25 3269.174\n10   51   25 4562.072"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#update-inta-zonal-distances",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#update-inta-zonal-distances",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Update inta-zonal distances",
    "text": "Update inta-zonal distances\n\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n      Var1           Var2           dist      \n Min.   :  25   Min.   :  25   Min.   :  750  \n 1st Qu.: 745   1st Qu.: 745   1st Qu.: 9808  \n Median :1321   Median :1321   Median :15660  \n Mean   :1341   Mean   :1341   Mean   :16748  \n 3rd Qu.:1846   3rd Qu.:1846   3rd Qu.:22362  \n Max.   :3322   Max.   :3322   Max.   :54750  \n\n\nGiven that the minimum distance is 750m, any values smaller than 750m can be used to represent intra-zonal distance. As such, in the code chunk below, a value of 375m (half of 750m) will be appended to intra-zonal distance to replace the current value of 0.\n\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        375, distPair$dist)\n\n# Examine data frame\nsummary(distPair)\n\n      Var1           Var2           dist      \n Min.   :  25   Min.   :  25   Min.   :  375  \n 1st Qu.: 745   1st Qu.: 745   1st Qu.: 9808  \n Median :1321   Median :1321   Median :15660  \n Mean   :1341   Mean   :1341   Mean   :16738  \n 3rd Qu.:1846   3rd Qu.:1846   3rd Qu.:22362  \n Max.   :3322   Max.   :3322   Max.   :54750  \n\n\nRename the origin and destination fields and convert into factor data type.\n\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2) %&gt;%\n  mutate(across(c(orig, dest), as.factor))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#preparing-origin-attributes",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#preparing-origin-attributes",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Preparing origin attributes",
    "text": "Preparing origin attributes\n\nflow_data &lt;- flow_data %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data2 &lt;- flow_data2 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data3 &lt;- flow_data3 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data4 &lt;- flow_data4 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data5 &lt;- flow_data5 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data6 &lt;- flow_data6 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data7 &lt;- flow_data7 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))\n\nflow_data8 &lt;- flow_data8 %&gt;%\n  left_join (propulsive,\n             by = c(\"ORIGIN_hex\" = \"index\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#preparing-destination-attributes",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#preparing-destination-attributes",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Preparing destination attributes",
    "text": "Preparing destination attributes\n\nflow_data &lt;- flow_data %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data2 &lt;- flow_data2 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data3 &lt;- flow_data3 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data4 &lt;- flow_data4 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data5 &lt;- flow_data5 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data6 &lt;- flow_data6 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data7 &lt;- flow_data7 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))\n\nflow_data8 &lt;- flow_data8 %&gt;%\n  left_join (attractiveness,\n             by = c(\"DESTIN_hex\" = \"index\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-with-linear-regression-line",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-with-linear-regression-line",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Visualising with Linear Regression Line",
    "text": "Visualising with Linear Regression Line\nVisualise the relationship between the dependent variable and key independent variable i.e. dist of SIM. Setting the method as lm within geom_smooth() fits a linear regression line to the data.\n\nMorning Peak GeneralMorning Peak NovemberMorning Peak DecemberMorning Peak JanuaryEvening Peak GeneralEvening Peak NovemberEvening Peak DecemberEvening Peak January\n\n\n\nggplot(data = flow_data,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data2,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data3,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data4,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data5,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data6,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data7,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data8,\n       aes(x = dist,\n           y = TOTAL_TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Distance and Total Trips\", \n       x = \"Distance\", \n       y = \"Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-scatterplot-after-log-transformation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualising-scatterplot-after-log-transformation",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Visualising Scatterplot after Log Transformation",
    "text": "Visualising Scatterplot after Log Transformation\n\nMorning Peak GeneralMorning Peak NovemberMorning Peak DecemberMorning Peak JanuaryEvening Peak GeneralEvening Peak NovemberEvening Peak DecemberEvening Peak January\n\n\n\nggplot(data = flow_data,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data2,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data3,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data4,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data5,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data6,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data7,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nggplot(data = flow_data8,\n       aes(x = log(dist),\n           y = log(TOTAL_TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) + \n  labs(title = \"Relationship between Log Distance and Log Total Trips\", \n       x = \"Log Distance\", \n       y = \"Log Total Trips\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nThe relationships are still non-linear but they are less skewed than before"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#changing-zero-values",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#changing-zero-values",
    "title": "Takehome-Ex 3: Exploratory Spatial Data Analysis for Potential Push & Pull Factors of Locations in Singapore using Public Bus Data",
    "section": "Changing zero values",
    "text": "Changing zero values\n\nflow_data &lt;- flow_data %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data2&lt;- flow_data2 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data3 &lt;- flow_data3 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data4 &lt;- flow_data4 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data5 &lt;- flow_data5 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data6 &lt;- flow_data6 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data7 &lt;- flow_data7 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))\n\nflow_data8 &lt;- flow_data8 %&gt;%\n  mutate_at(vars(ends_with(\"_count\")), ~ ifelse(. == 0, 0.99, .))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/geospatial/Retails.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/geospatial/Retails.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/geospatial/FinServ.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/geospatial/FinServ.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/geospatial/entertn.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/geospatial/entertn.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/geospatial/Business.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/geospatial/Business.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/geospatial/F&B.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/geospatial/F&B.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/geospatial/Liesure&Recreation.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/geospatial/Liesure&Recreation.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#learning-outcome",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "",
    "text": "This exercise aims to build predictive models using geographical random forest. Along the way, the intended acquired skills are:\n\nPreparing training and test data sets using sampling methods\nCalibrating predictive models using both geospatial statistical learning and machine learning methods\nComparing and selecting the best model for predicting the future outcome and,\nPredicting future outcomes using the best calibrated model"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#reading-rds-file",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#reading-rds-file",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Reading rds file",
    "text": "Reading rds file\n\nmdata &lt;- read_rds(\"data/aspatial/mdata.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data-sampling",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#data-sampling",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Data Sampling",
    "text": "Data Sampling\n\nset.seed(1234)\nresale_split &lt;- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data &lt;- training(resale_split)\ntest_data &lt;- testing(resale_split)\n\n\nwrite_rds(train_data, \"data/aspatial/train_data.rds\")\nwrite_rds(test_data, \"data/aspatial/test_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#converting-sf-data-frame-to-spatialpointdataframe",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#converting-sf-data-frame-to-spatialpointdataframe",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Converting sf data frame to SPatialPointDataFrame",
    "text": "Converting sf data frame to SPatialPointDataFrame\n\ntrain_data_sp &lt;- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#compute-adaptive-bandwidth",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#compute-adaptive-bandwidth",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Compute adaptive bandwidth",
    "text": "Compute adaptive bandwidth\n\nbw_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 6395 CV score: 3.60536e+13 \nAdaptive bandwidth: 3960 CV score: 3.320316e+13 \nAdaptive bandwidth: 2455 CV score: 2.928339e+13 \nAdaptive bandwidth: 1524 CV score: 2.550957e+13 \nAdaptive bandwidth: 950 CV score: 1.95632e+13 \nAdaptive bandwidth: 593 CV score: 1.58347e+13 \nAdaptive bandwidth: 375 CV score: 1.310042e+13 \nAdaptive bandwidth: 237 CV score: 1.113152e+13 \nAdaptive bandwidth: 155 CV score: 9.572037e+12 \nAdaptive bandwidth: 101 CV score: 8.457003e+12 \nAdaptive bandwidth: 71 CV score: 7.605058e+12 \nAdaptive bandwidth: 49 CV score: 6.965752e+12 \nAdaptive bandwidth: 38 CV score: 8.249935e+12 \nAdaptive bandwidth: 58 CV score: 7.275234e+12 \nAdaptive bandwidth: 45 CV score: 6.871439e+12 \nAdaptive bandwidth: 41 CV score: 6.7928e+12 \nAdaptive bandwidth: 40 CV score: 6.780447e+12 \nAdaptive bandwidth: 38 CV score: 8.249935e+12 \nAdaptive bandwidth: 40 CV score: 6.780447e+12 \n\n\n\nwrite_rds(bw_adaptive, \"data/aspatial/bw_adaptive.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#construct-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#construct-adaptive-bandwidth-gwr-model",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Construct adaptive bandwidth GWR model",
    "text": "Construct adaptive bandwidth GWR model\n\nbw_adaptive &lt;- read_rds(\"data/aspatial/bw_adaptive.rds\")\n\nCalibrate gwr-based hedonic pricing model using adaptive bandwidth and Gaussian kernel.\n\ngwr_adaptive &lt;- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\n\nwrite_rds(gwr_adaptive, \"data/aspatial/gwr_adaptive.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#retrieve-gwr-output-object",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#retrieve-gwr-output-object",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Retrieve GWR output object",
    "text": "Retrieve GWR output object\n\ngwr_adaptive &lt;- read_rds(\"data/aspatial/gwr_adaptive.rds\")\n\n\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-15 12:09:58.690682 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)              107601.073  10601.261  10.150  &lt; 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  &lt; 2e-16 ***\n   storey_order              14299.298    339.115  42.167  &lt; 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  &lt; 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  &lt; 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  &lt; 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  &lt; 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  &lt; 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  &lt; 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  &lt; 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  &lt; 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.2478e+08 -4.7727e+05 -8.3004e+03  5.5025e+05\n   floor_area_sqm           -2.8714e+04  1.4475e+03  2.3011e+03  3.3900e+03\n   storey_order              3.3186e+03  8.5899e+03  1.0826e+04  1.3397e+04\n   remaining_lease_mths     -1.4431e+03  2.6063e+02  3.9048e+02  5.2865e+02\n   PROX_CBD                 -1.0837e+07 -5.7697e+04 -1.3787e+04  2.6552e+04\n   PROX_ELDERLYCARE         -3.2195e+07 -4.0643e+04  1.0562e+04  6.1054e+04\n   PROX_HAWKER              -2.3985e+08 -5.1365e+04  3.0026e+03  6.4287e+04\n   PROX_MRT                 -1.1632e+07 -1.0488e+05 -4.9373e+04  5.1037e+03\n   PROX_PARK                -6.5961e+06 -4.8671e+04 -8.8128e+02  5.3498e+04\n   PROX_MALL                -1.8112e+07 -7.4238e+04 -1.3982e+04  4.9779e+04\n   PROX_SUPERMARKET         -4.5761e+06 -6.3461e+04 -1.7429e+04  3.5616e+04\n   WITHIN_350M_KINDERGARTEN -4.1823e+05 -6.0040e+03  9.0209e+01  4.7127e+03\n   WITHIN_350M_CHILDCARE    -1.0273e+05 -2.2375e+03  2.6668e+02  2.6388e+03\n   WITHIN_350M_BUS          -1.1757e+05 -1.4719e+03  1.1626e+02  1.7584e+03\n   WITHIN_1KM_PRISCH        -6.6465e+05 -5.5959e+03  2.6916e+02  5.7500e+03\n                                  Max.\n   Intercept                1.6493e+08\n   floor_area_sqm           5.0907e+04\n   storey_order             2.9537e+04\n   remaining_lease_mths     1.8119e+03\n   PROX_CBD                 2.2411e+07\n   PROX_ELDERLYCARE         8.2444e+07\n   PROX_HAWKER              5.9654e+06\n   PROX_MRT                 2.0189e+08\n   PROX_PARK                1.5188e+07\n   PROX_MALL                1.0443e+07\n   PROX_SUPERMARKET         3.8330e+06\n   WITHIN_350M_KINDERGARTEN 6.6799e+05\n   WITHIN_350M_CHILDCARE    1.0802e+05\n   WITHIN_350M_BUS          3.7313e+04\n   WITHIN_1KM_PRISCH        5.0231e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.101 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.899 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238871.9 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237036.9 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238209.1 \n   Residual sum of squares: 4.829191e+12 \n   R-square value:  0.967657 \n   Adjusted R-square value:  0.9611534 \n\n   ***********************************************************************\n   Program stops at: 2024-03-15 12:11:03.505472"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#convert-test-data-from-sf-data-frame-to-spatialpointdataframe",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#convert-test-data-from-sf-data-frame-to-spatialpointdataframe",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Convert test data from sf data frame to SpatialPointDataFrame",
    "text": "Convert test data from sf data frame to SpatialPointDataFrame\n\ntest_data_sp &lt;- test_data %&gt;%\n  as_Spatial()\ntest_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 5566 \nextent      : 11597.31, 42623.63, 28287.8, 48669.59  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,         PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       230888,             74,            1,                  546, 1.00583660772922, 3.34897933104965e-07, 0.0474019664161957, 0.0414043955932523, 0.0502664084494264, 0.0907500295577619,                0, 4.55547870890763e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1050000,            138,           14,                 1151,  19.632402730488,     3.30163731686804,   2.83106651960209,   2.13060636038504,   2.41313695915468,   10.6169590126272, 2.26056404492346,     0.79249074802552,     1.53786629004208,                        7,                    16, ..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-adaptive-bandwidth-for-test-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#computing-adaptive-bandwidth-for-test-data",
    "title": "Hands-on Exercise 9: Geographically Weighted Predictive Models",
    "section": "Computing adaptive bandwidth for test data",
    "text": "Computing adaptive bandwidth for test data\n\ngwr_bw_test_adaptive &lt;- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 3447 CV score: 1.902155e+13 \nAdaptive bandwidth: 2138 CV score: 1.752645e+13 \nAdaptive bandwidth: 1328 CV score: 1.556299e+13 \nAdaptive bandwidth: 828 CV score: 1.357498e+13 \nAdaptive bandwidth: 518 CV score: 1.030751e+13 \nAdaptive bandwidth: 327 CV score: 8.348364e+12 \nAdaptive bandwidth: 208 CV score: 6.860544e+12 \nAdaptive bandwidth: 135 CV score: 5.969504e+12 \nAdaptive bandwidth: 89 CV score: 5.242221e+12 \nAdaptive bandwidth: 62 CV score: 4.742767e+12 \nAdaptive bandwidth: 43 CV score: 4.357839e+12 \nAdaptive bandwidth: 34 CV score: 4.125848e+12 \nAdaptive bandwidth: 25 CV score: 4.04299e+12 \nAdaptive bandwidth: 23 CV score: 1.549626e+13 \nAdaptive bandwidth: 30 CV score: 4.074906e+12 \nAdaptive bandwidth: 25 CV score: 4.04299e+12 \n\n\n\ngwr_pred &lt;- gwr.predict(resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data_sp, \n                        predictdata = test_data_sp, \n                        bw=25, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)"
  }
]